% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_change_boxplot_pair.R
\name{generate_taxa_change_boxplot_pair}
\alias{generate_taxa_change_boxplot_pair}
\title{Generate Individual Taxa Change Boxplot Pair}
\usage{
generate_taxa_change_boxplot_pair(
  data.obj,
  subject.var,
  time.var,
  group.var = NULL,
  strata.var = NULL,
  change.base = NULL,
  feature.change.func = "relative change",
  feature.level = NULL,
  feature.dat.type = c("count", "proportion", "other"),
  features.plot = NULL,
  top.k.plot = NULL,
  top.k.func = NULL,
  prev.filter,
  abund.filter,
  base.size = 16,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  ...
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat, which can include components such as feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, and feature.agg.list (list). The data.obj can be converted from other formats using several functions from the MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', and 'mStat_import_biom_as_data_obj'. Alternatively, users can construct their own data.obj. Note that not all components of data.obj may be required for all functions in the MicrobiomeStat package.}

\item{subject.var}{A character string specifying the subject variable.}

\item{time.var}{A character string specifying the time variable.}

\item{group.var}{A character string specifying the group variable. Default is NULL.}

\item{strata.var}{A character string specifying the strata variable. Default is NULL.}

\item{change.base}{The time point value to be used as the baseline for calculating change in abundance between time points. Should be one of the values from `time.var`. The change will be calculated as the difference between this baseline time point and the subsequent time point.}

\item{feature.change.func}{The method or function used to calculate the change in feature abundance between time points.
The following options are supported:

- "relative change": Computes the relative change as (time_2 - time_1) / (time_2 + time_1). If both values are zero, the result is zero.
- "log fold change": Computes the log2 fold change between time points. Zero values are imputed as half the minimum nonzero value of the respective feature at the given time point before taking the logarithm.
- "absolute change": Computes the absolute difference between time points.
- A custom function: The provided function should take two numeric vectors as input (values at time 1 and time 2) and return a numeric vector of differences. Users should ensure that their function handles zero values appropriately.

If an unrecognized value or no value is provided for `feature.change.func`, the default behavior will be to compute the absolute difference between time points.}

\item{feature.level}{The column name in the feature annotation matrix (feature.ann) of data.obj
to use for summarization and plotting. This can be the taxonomic level like "Phylum", or any other
annotation columns like "Genus" or "OTU_ID". Should be a character vector specifying one or more
column names in feature.ann. Multiple columns can be provided, and data will be plotted separately
for each column. Default is NULL, which defaults to all columns in feature.ann if `features.plot`
is also NULL.}

\item{feature.dat.type}{The type of the feature data, which determines how the data is handled in downstream analyses.
Should be one of:
- "count": Raw count data, will be normalized by the function.
- "proportion": Data that has already been normalized to proportions/percentages.
- "other": Custom abundance data that has unknown scaling. No normalization applied.
The choice affects preprocessing steps as well as plot axis labels.
Default is "count", which assumes raw OTU table input.}

\item{features.plot}{A character vector specifying which feature IDs (e.g. OTU IDs) to plot.
Default is NULL, in which case features will be selected based on `top.k.plot` and `top.k.func`.}

\item{top.k.plot}{Integer specifying number of top k features to plot, when `features.plot` is NULL.
Default is NULL, in which case all features passing filters will be plotted.}

\item{top.k.func}{Function to use for selecting top k features, when `features.plot` is NULL.
Options include inbuilt functions like "mean", "sd", or a custom function. Default is NULL, in which
case features will be selected by abundance.}

\item{prev.filter}{Numeric value specifying the minimum prevalence threshold for filtering
taxa before analysis. Taxa with prevalence below this value will be removed.
Prevalence is calculated as the proportion of samples where the taxon is present.
Default 0 removes no taxa by prevalence filtering.}

\item{abund.filter}{Numeric value specifying the minimum abundance threshold for filtering
taxa before analysis. Taxa with mean abundance below this value will be removed.
Abundance refers to counts or proportions depending on \code{feature.dat.type}.
Default 0 removes no taxa by abundance filtering.}

\item{base.size}{The base size for the plot. Default is 16.}

\item{theme.choice}{Plot theme choice. Can be one of:
  - "prism": ggprism::theme_prism()
  - "classic": theme_classic()
  - "gray": theme_gray()
  - "bw": theme_bw()
Default is "bw".}

\item{custom.theme}{A custom ggplot theme provided as a ggplot2 theme object. This allows users to override the default theme and provide their own theme for plotting. To use a custom theme, first create a theme object with ggplot2::theme(), then pass it to this argument. For example:

```r
my_theme <- ggplot2::theme(
  axis.title = ggplot2::element_text(size=16, color="red"),
  legend.position = "none"
)
```

Then pass `my_theme` to `custom.theme`. Default is NULL, which will use the default theme based on `theme.choice`.}

\item{palette}{An optional parameter specifying the color palette to be used for the plot.
It can be either a character string specifying the name of a predefined
palette or a vector of color codes in a format accepted by ggplot2
(e.g., hexadecimal color codes). Available predefined palettes include
'npg', 'aaas', 'nejm', 'lancet', 'jama', 'jco', and 'ucscgb', inspired
by various scientific publications and the `ggsci` package. If `palette`
is not provided or an unrecognized palette name is given, a default color
palette will be used. Ensure the number of colors in the palette is at
least as large as the number of groups being plotted.}

\item{pdf}{A logical value indicating whether to save the plot as a PDF. Default is TRUE.}

\item{file.ann}{An optional character string to be appended to the file name of the PDF. Default is NULL.}

\item{pdf.wid}{The width of the PDF. Default is 11.}

\item{pdf.hei}{The height of the PDF. Default is 8.5.}

\item{...}{Additional arguments passed to the underlying functions.}
}
\value{
A list of ggplot objects, each of which is a boxplot visualizing the changes in abundance of individual taxa over time.
}
\description{
This function generates boxplot pairs visualizing the changes in abundance of individual taxa over time.
The boxplots show the change in abundance for each taxon for different groups and strata.
It also allows for a prevalence and abundance filter to be applied to the data, and can optionally save the plots as a PDF.
}
\examples{
\dontrun{
# Load required libraries and data
library(vegan)
library(ggh4x)
data(peerj32.obj)

# Generate the boxplot pair
generate_taxa_change_boxplot_pair(
  data.obj = peerj32.obj,
  subject.var = "subject",
  time.var = "time",
  group.var = "group",
  strata.var = NULL,
  change.base = "1",
  feature.change.func = "relative change",
  feature.level = "original",
  feature.dat.type = "count",
  features.plot = NULL,
  top.k.plot = 6,
  top.k.func = "sd",
  prev.filter = 0.01,
  abund.filter = 0.01,
  base.size = 16,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5
)
}
}
