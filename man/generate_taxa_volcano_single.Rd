% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_volcano_single.R
\name{generate_taxa_volcano_single}
\alias{generate_taxa_volcano_single}
\title{Generate volcano plots for taxa differential test for a single time point}
\usage{
generate_taxa_volcano_single(
  data.obj,
  group.var = NULL,
  test.list,
  feature.sig.level = 0.1,
  feature.mt.method = "fdr"
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat, which can include components such as feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, and feature.agg.list (list). The data.obj can be converted from other formats using several functions from the MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', and 'mStat_import_biom_as_data_obj'. Alternatively, users can construct their own data.obj. Note that not all components of data.obj may be required for all functions in the MicrobiomeStat package.}

\item{group.var}{The grouping variable tested, found in metadata}

\item{test.list}{The list of test results returned by generate_taxa_trend_test_long}

\item{feature.sig.level}{The significance level cutoff for highlighting taxa}

\item{feature.mt.method}{Multiple testing correction method, "fdr" or "none"}
}
\value{
A list of ggplot objects of volcano plots for each taxonomic level
}
\description{
Generate volcano plots for taxa differential test for a single time point
}
\examples{
data(peerj32.obj)
test.list <- generate_taxa_test_single(
    data.obj = peerj32.obj,
    time.var = "time",
    t.level = "2",
    group.var = "group",
    adj.vars = "sex",
    feature.dat.type = "count",
    feature.level = c("Phylum","Genus","Family"),
    prev.filter = 0.1,
    abund.filter = 0.0001,
    feature.sig.level = 0.1,
    feature.mt.method = "none"
)
   volcano_plots <- generate_taxa_volcano_single(data.obj = peerj32.obj,
                                                 group.var = "group",
                                                 test.list = test.list,
                                                 feature.sig.level = 0.05,
                                                 feature.mt.method = "fdr")

}
