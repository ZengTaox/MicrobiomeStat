% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mStat_generate_report_single.R
\name{mStat_generate_report_single}
\alias{mStat_generate_report_single}
\title{Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point}
\usage{
mStat_generate_report_single(
  data.obj,
  group.var,
  vis.adj.vars = NULL,
  test.adj.vars = NULL,
  strata.var = NULL,
  subject.var,
  time.var,
  t.level = NULL,
  alpha.obj = NULL,
  alpha.name = c("shannon", "observed_species"),
  depth = NULL,
  dist.obj = NULL,
  dist.name = c("BC", "Jaccard"),
  pc.obj = NULL,
  prev.filter = 0.1,
  abund.filter = 1e-04,
  bar.area.feature.no = 40,
  heatmap.feature.no = 40,
  dotplot.feature.no = 40,
  vis.feature.level = NULL,
  test.feature.level = NULL,
  feature.dat.type = c("count", "proportion", "other"),
  feature.analysis.rarafy = TRUE,
  feature.mt.method = c("fdr", "none"),
  feature.sig.level = 0.1,
  feature.box.axis.transform = c("identity", "sqrt", "log"),
  base.size = 16,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  output.file,
  ...
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat, which can include components such as feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, and feature.agg.list (list). The data.obj can be converted from other formats using several functions from the MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', and 'mStat_import_biom_as_data_obj'. Alternatively, users can construct their own data.obj. Note that not all components of data.obj may be required for all functions in the MicrobiomeStat package.}

\item{group.var}{Variable name used for grouping samples.}

\item{vis.adj.vars}{Character vector, names of columns in the metadata containing covariates to visualize in plots, in addition to the primary variables of interest such as groups. For example, if sex is provided in vis.adj.vars, plots will display facets or colors for different sex groups. This allows visualization of effects across multiple covariates. Default is NULL, which indicates only the primary variables of interest will be visualized without additional covariates.}

\item{test.adj.vars}{Character vector, names of columns in the metadata containing covariates to be adjusted for in statistical tests and models, such as linear mixed effects models for longitudinal data analysis. This allows the user to account for the effects of additional variables in assessing the effects of primary variables of interest such as time and groups. Default is NULL, which indicates no covariates are adjusted for in statistical testing.}

\item{strata.var}{Variable to stratify the analysis by (optional).}

\item{subject.var}{Variable name used for subject identification.}

\item{time.var}{Variable name used for time points.}

\item{t.level}{Character string specifying the time level/value to subset data to,
if a time variable is provided. Default NULL does not subset data.}

\item{alpha.obj}{An optional list containing pre-calculated alpha diversity indices. If NULL (default), alpha diversity indices will be calculated using mStat_calculate_alpha_diversity function from MicrobiomeStat package.}

\item{alpha.name}{The alpha diversity index to be plotted. Supported indices include "shannon", "simpson", "observed_species", "chao1", "ace", and "pielou".}

\item{depth}{An integer. The sequencing depth to be used for the "Rarefy" and "Rarefy-TSS" methods. If NULL, the smallest total count dplyr::across samples is used as the rarefaction depth.}

\item{dist.obj}{Distance matrix between samples, usually calculated using
\code{\link[MicrobiomeStat]{mStat_calculate_beta_diversity}} function.
If NULL, beta diversity will be automatically computed from \code{data.obj}
using \code{mStat_calculate_beta_diversity}.}

\item{dist.name}{A character vector specifying which beta diversity indices to calculate. Supported indices are "BC" (Bray-Curtis), "Jaccard", "UniFrac" (unweighted UniFrac), "GUniFrac" (generalized UniFrac), "WUniFrac" (weighted UniFrac), and "JS" (Jensen-Shannon divergence). If a name is provided but the corresponding object does not exist within dist.obj, it will be computed internally. If the specific index is not supported, an error message will be returned. Default is c('BC', 'Jaccard').}

\item{pc.obj}{A list containing the results of dimension reduction/Principal Component Analysis.
This should be the output from functions like \code{\link[MicrobiomeStat]{mStat_calculate_PC}}, containing the PC coordinates and other metadata.
If NULL (default), dimension reduction will be automatically performed using metric multidimensional scaling (MDS) via \code{\link[MicrobiomeStat]{mStat_calculate_PC}}.
The pc.obj list structure should contain:
\itemize{
 \item{$points:}{A matrix with samples as rows and PCs as columns containing the coordinates.}
 \item{$eig:}{Eigenvalues for each PC dimension.}
 \item{$vectors:}{Loadings vectors for features onto each PC.}
 \item{Other metadata like $method, $dist.name, etc.}
}
See \code{\link[MicrobiomeStat]{mStat_calculate_PC}} function for details on output format.}

\item{prev.filter}{Numeric value specifying the minimum prevalence threshold for filtering
taxa before analysis. Taxa with prevalence below this value will be removed.
Prevalence is calculated as the proportion of samples where the taxon is present.
Default 0 removes no taxa by prevalence filtering.}

\item{abund.filter}{Numeric value specifying the minimum abundance threshold for filtering
taxa before analysis. Taxa with mean abundance below this value will be removed.
Abundance refers to counts or proportions depending on \code{feature.dat.type}.
Default 0 removes no taxa by abundance filtering.}

\item{bar.area.feature.no}{A numeric value indicating the number of top abundant features to retain in both barplot and areaplot. Features with average relative abundance ranked below this number will be grouped into 'Other'. Default 20.}

\item{heatmap.feature.no}{A numeric value indicating the number of top abundant features to retain in the heatmap. Features with average relative abundance ranked below this number will be grouped into 'Other'. Default 20.}

\item{dotplot.feature.no}{A numeric value indicating the number of top abundant features to retain in the dotplot. Features with average relative abundance ranked below this number will be grouped into 'Other'. Default 40.}

\item{vis.feature.level}{A character vector specifying one or more column names in the feature annotation
matrix (feature.ann) of data.obj to use for visualization and plotting. This can be a taxonomic level
like "Phylum" or "Genus" for microbiome data, a cell type identifier such as "CellType" for single-cell
data, or a pathway level such as "Pathway_L1", "Pathway_L2", or "Pathway_L3" for KEGG data. Multiple columns
can be provided, and data will be plotted separately for each column. If you want to avoid aggregation,
you can set it to "original", and no aggregation will be performed.}

\item{test.feature.level}{A character vector specifying one or more column names in the feature annotation
matrix (feature.ann) of data.obj to use for testing or analytical purposes. This can be a taxonomic level
like "Phylum" or "Genus" for microbiome data, a cell type identifier such as "CellType" for single-cell
data, or a pathway level such as "Pathway_L1", "Pathway_L2", or "Pathway_L3" for KEGG data. Multiple columns
can be provided, and data will be analyzed separately for each column. If you want to avoid aggregation,
you can set it to "original", and no aggregation will be performed.}

\item{feature.dat.type}{The type of the feature data, which determines how the data is handled in downstream analyses.
Should be one of:
- "count": Raw count data, will be normalized by the function.
- "proportion": Data that has already been normalized to proportions/percentages.
- "other": Custom abundance data that has unknown scaling. No normalization applied.
The choice affects preprocessing steps as well as plot axis labels.
Default is "count", which assumes raw OTU table input.}

\item{feature.analysis.rarafy}{Logical, indicating whether to rarefy the data at the feature-level for analysis.
If TRUE, the feature data will be rarefied before analysis. Default is TRUE.}

\item{feature.mt.method}{A character specifying the multiple testing method for features. This is
specifically used for volcano plot visualization. The options are "fdr" for false discovery rate or
"none" for no multiple testing correction. The default is "fdr".}

\item{feature.sig.level}{A numeric value specifying the significance level cutoff for highlighting
features in the volcano plot. The default is 0.1.}

\item{feature.box.axis.transform}{A string indicating the transformation to apply to the data before plotting.
Options are: "identity" for no transformation (default), "sqrt" for square root transformation, and "log" for
logarithmic transformation. In the function `mStat_generate_report_single`, this parameter is only used in
`generate_taxa_boxplot_single` and `generate_taxa_indiv_boxplot_single`. In other functions, it is also used
solely to adjust boxplots related to feature functions.}

\item{base.size}{Base font size for the generated plots.}

\item{theme.choice}{Plot theme choice. Can be one of:
  - "prism": ggprism::theme_prism()
  - "classic": theme_classic()
  - "gray": theme_gray()
  - "bw": theme_bw()
Default is "bw".}

\item{custom.theme}{A custom ggplot theme provided as a ggplot2 theme object. This allows users to override the default theme and provide their own theme for plotting. To use a custom theme, first create a theme object with ggplot2::theme(), then pass it to this argument. For example:

```r
my_theme <- ggplot2::theme(
  axis.title = ggplot2::element_text(size=16, color="red"),
  legend.position = "none"
)
```

Then pass `my_theme` to `custom.theme`. Default is NULL, which will use the default theme based on `theme.choice`.}

\item{palette}{Color palette used for the plots.}

\item{pdf}{Logical indicating whether to save plots as PDF files (default: TRUE).}

\item{file.ann}{Annotation text for the PDF file names.}

\item{pdf.wid}{Width of the PDF plots.}

\item{pdf.hei}{Height of the PDF plots.}

\item{output.file}{A character string specifying the output file name for the report. This will also
determine the title of the generated report. For example, if you set it to "path_to_your_location/report.pdf",
the title of the report will be "report".}

\item{...}{Additional arguments passed to internal functions.}
}
\value{
A report file containing the microbial ecology analysis results.
}
\description{
This function generates a comprehensive report for microbial ecology analysis,
including alpha diversity, beta diversity, and taxonomic feature analyses. The function is designed
to perform analysis on cross-sectional data, a single time point from longitudinal or paired data.
}
\examples{
\dontrun{
data(peerj32.obj)
mStat_generate_report_single(
  data.obj = peerj32.obj,
  dist.obj = NULL,
  alpha.obj = NULL,
  group.var = "group",
  vis.adj.vars = c("sex"),
  test.adj.vars = c("sex"),
  subject.var = "subject",
  time.var = "time",
  alpha.name = c("shannon", "observed_species"),
  depth = NULL,
  dist.name = c("BC",'Jaccard'),
  t.level = "1",
  feature.box.axis.transform = "sqrt",
  strata.var = "sex",
  vis.feature.level = c("Phylum", "Family", "Genus"),
  test.feature.level = "Family",
  feature.dat.type = "count",
  theme.choice = "bw",
  base.size = 20,
  feature.mt.method = "none",
  feature.sig.level = 0.2,
  output.file = "/Users/apple/MicrobiomeStat/report.pdf"
)
data(subset_T2D.obj)
mStat_generate_report_single(
  data.obj = subset_T2D.obj,
  dist.obj = NULL,
  alpha.obj = NULL,
  group.var = "subject_race",
  vis.adj.vars = "sample_body_site",
  test.adj.vars = "sample_body_site",
  subject.var = "subject_id",
  time.var = "visit_number_num",
  alpha.name = c("shannon", "observed_species"),
  depth = 2000,
  dist.name = c("BC",'Jaccard'),
  t.level = 1,
  feature.box.axis.transform = "sqrt",
  strata.var = "subject_gender",
  vis.feature.level = c("Phylum", "Family", "Genus"),
  test.feature.level = "Family",
  feature.dat.type = "count",
  theme.choice = "bw",
  base.size = 20,
  feature.mt.method = "none",
  feature.sig.level = 0.2,
  output.file = "/Users/apple/MicrobiomeStat/report.pdf"
)
}
}
