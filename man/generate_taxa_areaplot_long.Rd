% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_areaplot_long.R
\name{generate_taxa_areaplot_long}
\alias{generate_taxa_areaplot_long}
\title{Generate taxa area plots over time}
\usage{
generate_taxa_areaplot_long(
  data.obj,
  subject.var,
  time.var,
  group.var = NULL,
  strata.var = NULL,
  feature.level = "original",
  feature.dat.type = c("count", "proportion", "other"),
  feature.number = 20,
  t0.level = NULL,
  ts.levels = NULL,
  base.size = 10,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  ...
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat, which can include components such as feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, and feature.agg.list (list). The data.obj can be converted from other formats using several functions from the MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', and 'mStat_import_biom_as_data_obj'. Alternatively, users can construct their own data.obj. Note that not all components of data.obj may be required for all functions in the MicrobiomeStat package.}

\item{subject.var}{Character string specifying the column name in metadata containing
unique subject IDs. Required to connect samples from the same subject.}

\item{time.var}{Character string specifying the column name in metadata containing the
time variable. Required to order and connect samples over time.}

\item{group.var}{Character string specifying the column name in metadata containing grouping
categories. Used for coloring lines in the plot. Optional, can be NULL.}

\item{strata.var}{Character string specifying the column name in metadata containing stratification
categories. Used for nested faceting in the plots. Optional, can be NULL.}

\item{feature.level}{Character vector specifying taxonomic level(s) to use for plotting,
e.g. c("Phylum", "Genus"). The special value "original" can also be provided,
which will use the original taxon identifiers. Multiple levels can be specified
and data will be plotted separately for each. **Cannot be NULL, as NULL value
will lead to errors.** Default is "original".}

\item{feature.dat.type}{The type of the feature data, which determines how the data is handled in downstream analyses.
Should be one of:
- "count": Raw count data, will be normalized by the function.
- "proportion": Data that has already been normalized to proportions/percentages.
- "other": Custom abundance data that has unknown scaling. No normalization applied.
The choice affects preprocessing steps as well as plot axis labels.
Default is "count", which assumes raw OTU table input.}

\item{feature.number}{A numeric value indicating the number of top abundant features to retain in the plot. Features with average relative abundance ranked below this number will be grouped into 'Other'. Default 20.}

\item{t0.level}{Character or numeric, baseline time point for longitudinal analysis, e.g. "week_0" or 0. Required.}

\item{ts.levels}{Character vector, names of follow-up time points, e.g. c("week_4", "week_8"). Required.}

\item{base.size}{The base size for the ggplot2 theme. Default is 10.}

\item{theme.choice}{Plot theme choice. Can be one of:
  - "prism": ggprism::theme_prism()
  - "classic": theme_classic()
  - "gray": theme_gray()
  - "bw": theme_bw()
Default is "bw".}

\item{custom.theme}{A custom ggplot theme provided as a ggplot2 theme object. This allows users to override the default theme and provide their own theme for plotting. To use a custom theme, first create a theme object with ggplot2::theme(), then pass it to this argument. For example:

```r
my_theme <- ggplot2::theme(
  axis.title = ggplot2::element_text(size=16, color="red"),
  legend.position = "none"
)
```

Then pass `my_theme` to `custom.theme`. Default is NULL, which will use the default theme based on `theme.choice`.}

\item{palette}{Character vector specifying colors to use for mapping features to color aesthetic.
Should be same length as number of features. If NULL, default palette will be used.
Colors will be mapped to features based on order of features. This parameter
does not represent groups, it is only used for feature colors.}

\item{pdf}{Logical indicating if the plot should be saved as a PDF. Default is TRUE.}

\item{file.ann}{Optional, a file annotation. Default is NULL.}

\item{pdf.wid}{Width of the output PDF. Default is 11.}

\item{pdf.hei}{Height of the output PDF. Default is 8.5.}

\item{...}{Additional arguments to pass to the function.}
}
\value{
A list of ggplot objects, each representing a taxa area plot for the specified feature level.
}
\description{
This function generates taxa area plots for a given data object. The plots will show the relative abundance of
different taxa over time. Raw count data will be automatically normalized using rarefaction and total sum scaling (TSS).
The function also supports the generation of plots for grouped data and stratified data.
}
\examples{
\dontrun{
library(ggh4x)
library(vegan)
data(ecam.obj)
generate_taxa_areaplot_long(
  data.obj = ecam.obj,
  subject.var = "studyid",
  time.var = "month",
  group.var = "diet",
  strata.var = "antiexposedall",
  feature.level = c("Family","Genus","Order"),
  feature.dat.type = "proportion",
  feature.number = 20,
  t0.level = unique(ecam.obj$meta.dat$month)[1],
  ts.levels = unique(ecam.obj$meta.dat$month)[-1],
  base.size = 10,
  theme.choice = "bw",
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL
)
}
}
