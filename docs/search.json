[{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":null,"dir":"","previous_headings":"","what":"MicrobiomeStat: 支持R中的纵向微生物组分析","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"EN | CN | ES MicrobiomeStat包是一个专门用于探索纵向微生物组数据的R工具。它也适用于多组学数据和横断面研究，重视社区内的集体努力。此工具旨在支持研究人员在时间上进行广泛的生物学查询，对社区现有资源表示感谢，并以合作精神推动微生物组研究的进一步发展。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"新闻","dir":"","previous_headings":"","what":"新闻","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"📢 更新 (10月20日): Shiny界面现已正式上线，目前支持小型至中型数据集的分析。您可以通过此链接访问界面。 如果服务器限制影响了您的分析，或者您更倾向于使用较小的模块，我们建议您直接使用我们的包。对于需要更灵活部署的情况，可以考虑从此处克隆我们的Shiny仓库，并将其部署在您的本地服务器或计算机上。 我们感谢您的理解和持续的参与。","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"对microbiomestat的一般引用","dir":"","previous_headings":"","what":"对MicrobiomeStat的一般引用","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"如果您使用的功能超出了linda和linda.plot函数，请按照以下方式引用，直到预印本版本发布：","code":"@Manual{,   title = {MicrobiomeStat: Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data},   author = {Xianyang Zhang and Jun Chen and Caffery(Chen) Yang},   year = {2023},   note = {R package version 1.1.1},   url = {https://www.microbiomestat.wiki}, }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"对特定microbiomestat函数的引用","dir":"","previous_headings":"","what":"对特定MicrobiomeStat函数的引用","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"如果您正在使用linda，linda.plot，generate_taxa_association_test_long，generate_taxa_test_pair，generate_taxa_test_single或generate_taxa_trend_test_long函数，请引用以下论文： 我们将在预印本发布后更新引用指南。","code":"@article{zhou2022linda,   title={LinDA: linear models for differential abundance analysis of microbiome compositional data},   author={Zhou, Huijuan and He, Kejun and Chen, Jun and Zhang, Xianyang},   journal={Genome biology},   volume={23},   number={1},   pages={1--23},   year={2022},   publisher={BioMed Central} }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"关于cran版本的重要说明","dir":"","previous_headings":"","what":"关于CRAN版本的重要说明","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"MicrobiomeStat包正在不断开发中。因此，最新的功能尚未纳入CRAN存储库中可用的版本。当前的CRAN版本仅支持linda和linda.plot函数。对于需要更广泛功能的用户，特别是与纵向数据分析相关的功能，建议直接从GitHub安装开发版本。这个过程需要先安装devtools包。 安装了devtools之后，您可以使用以下命令从GitHub安装MicrobiomeStat：","code":"install.packages(\"devtools\") devtools::install_github(\"cafferychen777/MicrobiomeStat\")"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"目录","dir":"","previous_headings":"","what":"目录","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"对MicrobiomeStat的一般引用 对特定MicrobiomeStat函数的引用 关于CRAN版本的重要说明 熟悉流程，享受无缝体验 致谢 用户支持 持续开发 合作开发 结论和特性 演示报告 帮助和联系信息 参与我们的Discord社区 分享和连接","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"在线教程","dir":"","previous_headings":"","what":"在线教程","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"MicrobiomeStat提供了一套全面的微生物组数据分析工具，包括从数据输入到可视化的各种功能。 为了让用户熟悉MicrobiomeStat，我们在GitBook上提供了详细的在线教程。教程涵盖了以下内容： 这些指南有助于确保您的设置正确配置和优化。 这些演示提供实用的见解和技能。 这些示例让用户熟悉MicrobiomeStat的编码实践。 这些指南帮助用户理解和有效地展示他们的数据。 本节提供了对常见问题的快速解决方案。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"熟悉流程享受无缝体验","dir":"","previous_headings":"","what":"熟悉流程，享受无缝体验","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"为了在MicrobiomeStat中获得无缝体验，最大限度地利用这些丰富的资源： 📘 探索MicrobiomeStat教程","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"探索microbiomestat","dir":"","previous_headings":"","what":"探索MicrobiomeStat","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"微生物组研究领域复杂且不断发展。选择的分析工具在研究过程中可以起到关键作用。在这种情况下，MicrobiomeStat旨在成为一种支持伙伴。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"致谢","dir":"","previous_headings":"探索MicrobiomeStat","what":"致谢","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"我们在MicrobiomeStat上站在巨人的肩膀上，我们对依赖于我们包的勤奋和杰出的开发人员表示衷心的感谢。他们的卓越努力不仅使我们的工作成为可能，而且还显著提高了科学社区可用的计算工具的标准： R (>= 3.5.0), rlang, tibble ggplot2, matrixStats, lmerTest, foreach, modeest, vegan, dplyr, pheatmap, tidyr, ggh4x, ape, GUniFrac, scales, stringr, rmarkdown, knitr, pander, tinytex ggrepel, parallel, ggprism, aplot, philentropy, forcats, yaml, biomformat, Biostrings 此外，我们对在微生物组研究社区中创建和维护以下卓越工具的开创者表示最深的赞赏和尊重。他们的开创性工作已经在微生物组数据分析的复杂景观中铺设了路径，我们真心荣幸能够与他们并肩前行： microbiomeutilities, phyloseq, microbiomemarker, MicrobiomeAnalyst, microbiomeeco, EasyAmplicon, STAMP, qiime2, 和 MicrobiotaProcess 他们的贡献激励我们继续改进和扩展MicrobiomeStat的功能，我们真诚地希望我们的谦卑添加能够成为已经为研究者提供的令人难以置信的工具阵列的有用补充。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"用户支持","dir":"","previous_headings":"探索MicrobiomeStat","what":"用户支持","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"MicrobiomeStat设计时考虑到用户。我们提供全面的文档和教程，以协助新手和有经验的研究者。在发布问题或问题之前，我们鼓励用户检查以前的问题和问题，看看该主题是否已经得到了解答。 如果您对特定函数的文档有特定的评论或问题，而您发现RStudio的搜索框导致404错误，您可以直接在https://cafferychen777.github.io/MicrobiomeStat/reference/index.html访问函数的文档。 如果您的问题或疑问尚未得到解答，随时在GitHub上开启新问题。我们非常鼓励全球的研究者、开发者和用户之间的交流与合作。为了促进全球间的沟通和互助，我们希望您能使用英文提问。这样不仅可以帮助更多的人理解和参与到讨论中，还能确保我们更迅速、准确地为您提供帮助。谢谢您的理解和支持！我们在这里，随时为您解决可能遇到的任何挑战。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"持续开发","dir":"","previous_headings":"探索MicrobiomeStat","what":"持续开发","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"确保MicrobiomeStat保持其类别中的领先地位需要持续的开发。我们致力于定期更新和解决用户反馈。作为我们持续改进努力的一部分，我们为MicrobiomeStat开发了一个Shiny界面，它提供了一种用户友好、交互式的方式来进行微生物组数据分析。Shiny界面与主包一起得到了积极的维护和改进。你可以在其专用的GitHub仓库中访问Shiny应用程序文件和本地设置指南。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"合作开发","dir":"","previous_headings":"探索MicrobiomeStat","what":"合作开发","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"MicrobiomeStat是一个开源工具，我们非常重视来自社区的贡献。如果你有建议，改进或对未来开发方向和功能添加的反馈，拉取请求是受欢迎的，你也可以在我们的GitHub仓库的讨论区分享你的想法。与其他社区成员互动，帮助我们使MicrobiomeStat成为微生物组研究的更有用的工具。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"结论","dir":"","previous_headings":"探索MicrobiomeStat","what":"结论","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"MicrobiomeStat旨在为微生物组数据分析提供一种可靠和高效的资源。我们诚邀所有重视开源合作的人加入我们的社区，共同为其持续发展做出贡献。 这种方法保证了用户可以轻松导航到MicrobiomeStat文档的特定部分，获取各种分析类型的详细信息和指南。这种结构和可访问性帮助用户有效地利用MicrobiomeStat满足他们的微生物组数据分析需求。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"演示报告","dir":"","previous_headings":"探索MicrobiomeStat","what":"演示报告","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"对于那些有兴趣看到MicrobiomeStat实际操作的人，我们已经准备了针对不同研究设计的演示报告： 横断面研究设计：使用MicrobiomeStat报告微生物分析 配对样本分析：使用MicrobiomeStat报告微生物分析 纵向研究设计：使用MicrobiomeStat进行微生物分析自动化 我们鼓励你探索这些示例，并发现我们工具的强大功能。","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"帮助和联系信息","dir":"","previous_headings":"","what":"帮助和联系信息","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"如需帮助或查询，欢迎联系：","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"加入我们的discord社区","dir":"","previous_headings":"","what":"加入我们的Discord社区","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"加入我们的Discord社区，了解MicrobiomeStat的最新更新、发展和增强。参与热烈的讨论，提问，分享见解，从同行和专家那里获得支持： 加入MicrobiomeStat Discord服务器！ 在我们的Discord服务器中，一个自动化的机器人会将每个包和教程更新的信息告知你，确保你不会错过新功能、改进和学习材料。我们活跃的社区依赖于合作、反馈和持续学习，对于初学者和经验丰富的研究人员在微生物组数据分析世界中导航都是无价的空间。保持联系，保持了解，让我们一起推进微生物组数据分析领域的发展！","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-CN.html","id":"分享和连接","dir":"","previous_headings":"","what":"分享和连接","title":"MicrobiomeStat: 支持R中的纵向微生物组分析","text":"通过各种平台传播关于MicrobiomeStat的信息并保持连接！","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":null,"dir":"","previous_headings":"","what":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"EN | CN | ES El paquete MicrobiomeStat es una herramienta de R dedicada para explorar datos longitudinales del microbioma. También acomoda datos multi-ómicos y estudios transversales, valorando los esfuerzos colectivos dentro de la comunidad. Esta herramienta tiene como objetivo apoyar los investigadores través de sus extensas consultas biológicas lo largo del tiempo, con un espíritu de gratitud hacia los recursos existentes de la comunidad y un ethos de colaboración para avanzar en la investigación del microbioma.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"noticias","dir":"","previous_headings":"","what":"Noticias","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"📢 Actualización (20 de octubre): La interfaz de Shiny ya está oficialmente disponible para su uso. Actualmente está configurada para manejar análisis de conjuntos de datos pequeños medianos. Puede acceder la interfaz través de este enlace. En caso de que las limitaciones del servidor afecten su análisis, o para aquellos que prefieren trabajar con módulos más pequeños, recomendamos usar nuestro paquete directamente. Para una implementación más flexible, considere clonar nuestro repositorio Shiny desde aquí y desplegarlo en su servidor local o computadora. Agradecemos su comprensión y participación continua.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"cita-general-para-microbiomestat","dir":"","previous_headings":"","what":"Cita general para MicrobiomeStat","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Si está utilizando funciones más allá de linda y linda.plot, cite de la siguiente manera, hasta que se publique una versión preimpresa:","code":"@Manual{,   title = {MicrobiomeStat: Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data},   author = {Xianyang Zhang and Jun Chen and Caffery(Chen) Yang},   year = {2023},   note = {R package version 1.1.1},   url = {https://www.microbiomestat.wiki}, }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"cita-para-funciones-especializadas-de-microbiomestat","dir":"","previous_headings":"","what":"Cita para funciones especializadas de MicrobiomeStat","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Si está utilizando las funciones linda, linda.plot, generate_taxa_association_test_long, generate_taxa_test_pair, generate_taxa_test_single, o generate_taxa_trend_test_long, cite el siguiente artículo: Actualizaremos las pautas de citación tan pronto como se publique el preprint.","code":"@article{zhou2022linda,   title={LinDA: linear models for differential abundance analysis of microbiome compositional data},   author={Zhou, Huijuan and He, Kejun and Chen, Jun and Zhang, Xianyang},   journal={Genome biology},   volume={23},   number={1},   pages={1--23},   year={2022},   publisher={BioMed Central} }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"nota-importante-sobre-la-versión-cran","dir":"","previous_headings":"","what":"Nota importante sobre la versión CRAN","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"El paquete MicrobiomeStat está en desarrollo continuo. Como resultado, las características más recientes aún se han incorporado en la versión disponible en el repositorio CRAN. La versión actual de CRAN solo admite las funciones linda y linda.plot. Para los usuarios que requieren un rango más amplio de funcionalidades, especialmente aquellas relacionadas con el análisis de datos longitudinales, se recomienda instalar la versión de desarrollo directamente desde GitHub. Este proceso requiere la instalación previa del paquete devtools. Una vez instalado devtools, puede instalar MicrobiomeStat desde GitHub utilizando el siguiente comando:","code":"install.packages(\"devtools\") devtools::install_github(\"cafferychen777/MicrobiomeStat\")"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"tabla-de-contenidos","dir":"","previous_headings":"","what":"Tabla de contenidos","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Cita general para MicrobiomeStat Cita para funciones especializadas de MicrobiomeStat Nota importante sobre la versión CRAN Familiarízate para una experiencia sin problemas Agradecimientos Soporte al usuario Desarrollo en curso Desarrollo colaborativo Conclusión y características Informes de demostración Asistencia e información de contacto Participa en nuestra comunidad de Discord Compartir y conectar","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"tutoriales-en-línea","dir":"","previous_headings":"","what":"Tutoriales en línea","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"MicrobiomeStat proporciona un conjunto completo de herramientas para el análisis de datos del microbioma, que abarca una variedad de funciones desde la entrada de datos hasta la visualización. Para familiarizar los usuarios con MicrobiomeStat, ofrecemos un extenso tutorial en línea en GitBook. El tutorial cubre las siguientes áreas: Estas pautas ayudan garantizar que su configuración esté correctamente configurada y optimizada. Estas demostraciones proporcionan conocimientos prácticos y habilidades. Estos ejemplos permiten los usuarios familiarizarse con las prácticas de codificación de MicrobiomeStat. Estas guías ayudan los usuarios entender y presentar eficazmente sus datos. Esta sección proporciona soluciones rápidas preguntas comunes.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"familiarízate-para-una-experiencia-sin-problemas","dir":"","previous_headings":"","what":"Familiarízate para una experiencia sin problemas","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Para una experiencia sin problemas con MicrobiomeStat, aprovecha al máximo estos recursos enriquecedores: 📘 Explora los tutoriales de MicrobiomeStat","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"descubriendo-microbiomestat","dir":"","previous_headings":"","what":"Descubriendo MicrobiomeStat","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"El ámbito de la investigación del microbioma es intrincado y avanza continuamente. Las herramientas analíticas seleccionadas pueden desempeñar un papel crucial en la navegación través del viaje de investigación. En este escenario, MicrobiomeStat tiene como objetivo ser un compañero de apoyo.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"agradecimientos","dir":"","previous_headings":"Descubriendo MicrobiomeStat","what":"Agradecimientos","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Nos apoyamos en los hombros de gigantes con MicrobiomeStat, y nuestra gratitud sincera va los diligentes y brillantes desarrolladores de las dependencias en las que se basa nuestro paquete. Sus esfuerzos notables solo han hecho posible nuestro trabajo, sino que también han elevado significativamente los estándares de las herramientas computacionales disponibles para la comunidad científica: R (>= 3.5.0), rlang, tibble ggplot2, matrixStats, lmerTest, foreach, modeest, vegan, dplyr, pheatmap, tidyr, ggh4x, ape, GUniFrac, scales, stringr, rmarkdown, knitr, pander, tinytex ggrepel, parallel, ggprism, aplot, philentropy, forcats, yaml, biomformat, Biostrings Además, extendemos nuestro más profundo agradecimiento y respeto los pioneros en la comunidad de investigación del microbioma que han creado y mantenido las siguientes herramientas notables. Su trabajo pionero ha trazado caminos través del complejo paisaje del análisis de datos del microbioma, y nos sentimos verdaderamente honrados de caminar junto ellos: microbiomeutilities, phyloseq, microbiomemarker, MicrobiomeAnalyst, microbiomeeco, EasyAmplicon, STAMP, qiime2, y MicrobiotaProcess Sus contribuciones nos inspiran continuar mejorando y expandiendo las capacidades de MicrobiomeStat, y esperamos sinceramente que nuestra humilde adición resulte ser un complemento útil para la increíble variedad de herramientas ya disponibles para los investigadores.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"soporte-al-usuario","dir":"","previous_headings":"Descubriendo MicrobiomeStat","what":"Soporte al usuario","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"MicrobiomeStat está diseñado pensando en los usuarios. Hay documentación y tutoriales disponibles para ayudar tanto los investigadores novatos como los experimentados. Antes de publicar una pregunta o problema, alentamos los usuarios verificar las preguntas y problemas anteriores para ver si el tema ya ha sido abordado. En caso de que tenga comentarios o preguntas específicas sobre la documentación de una función en particular y encuentre que el cuadro de búsqueda de RStudio conduce un error 404, puede acceder directamente la documentación de la función en https://cafferychen777.github.io/MicrobiomeStat/reference/index.html. Si su pregunta o problema ha sido abordado previamente, dude en abrir un nuevo problema en GitHub. Fomentamos activamente el intercambio y la colaboración entre investigadores, desarrolladores y usuarios de todo el mundo. Para promover una comunicación más fluida y eficiente nivel global, le sugerimos hacer sus preguntas en inglés. Esto permite que un público más amplio comprenda y participe en la discusión, y nos asegura poder brindarle asistencia de manera más rápida y precisa. ¡Gracias por su comprensión y apoyo! Estamos aquí para ayudarlo navegar cualquier desafío que pueda encontrar.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"desarrollo-en-curso","dir":"","previous_headings":"Descubriendo MicrobiomeStat","what":"Desarrollo en curso","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Asegurar que MicrobiomeStat siga siendo una herramienta líder en su categoría requiere un desarrollo continuo. Estamos dedicados las actualizaciones regulares y abordar los comentarios de los usuarios. Como parte de nuestros esfuerzos de mejora continua, hemos desarrollado una interfaz Shiny para MicrobiomeStat, que ofrece una forma interactiva y fácil de usar para realizar análisis de datos de microbiomas. La interfaz Shiny se mantiene y mejora activamente junto con el paquete principal. Puedes acceder los archivos de la aplicación Shiny y las instrucciones para la configuración local en su repositorio de GitHub dedicado.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"desarrollo-colaborativo","dir":"","previous_headings":"Descubriendo MicrobiomeStat","what":"Desarrollo colaborativo","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"MicrobiomeStat es una herramienta de código abierto, y valoramos mucho las contribuciones de la comunidad. Si tiene sugerencias, mejoras o comentarios para futuras direcciones de desarrollo y adiciones de características, se aceptan solicitudes de extracción, y también puede compartir sus ideas en el área de discusión de nuestro repositorio de GitHub. Participa con otros miembros de la comunidad y ayúdanos hacer de MicrobiomeStat una herramienta aún más útil para la investigación del microbioma.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"conclusión","dir":"","previous_headings":"Descubriendo MicrobiomeStat","what":"Conclusión","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"MicrobiomeStat tiene como objetivo servir como un recurso confiable y eficiente para el análisis de datos del microbioma. Extendemos una invitación aquellos que valoran la colaboración de código abierto para unirse nuestra comunidad y contribuir su desarrollo continuo. Este enfoque asegura que los usuarios puedan navegar sin esfuerzo por las secciones específicas de la documentación de MicrobiomeStat, obteniendo información detallada y directrices para diversos tipos de análisis. La estructura y accesibilidad ayudan los usuarios aprovechar eficazmente MicrobiomeStat para sus necesidades de análisis de datos del microbioma.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"informes-de-demostración","dir":"","previous_headings":"Descubriendo MicrobiomeStat","what":"Informes de demostración","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Para aquellos interesados en ver MicrobiomeStat en acción, hemos preparado informes de demostración adaptados diferentes diseños de estudio: Diseño de estudio transversal: Informes de análisis microbiano con MicrobiomeStat Análisis de muestras emparejadas: Informes de análisis microbiano con MicrobiomeStat Diseño de estudio longitudinal: Automatización del análisis del microbioma con MicrobiomeStat Te animamos explorar estos ejemplos y descubrir las poderosas capacidades de nuestra herramienta.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"asistencia-e-información-de-contacto","dir":"","previous_headings":"","what":"Asistencia e información de contacto","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Para asistencia o consultas, dudes en contactar :","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"participa-en-nuestra-comunidad-de-discord","dir":"","previous_headings":"","what":"Participa en nuestra comunidad de Discord","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"Únete nuestra comunidad de Discord para mantenerte al día con las últimas actualizaciones, desarrollos y mejoras en MicrobiomeStat. Sé parte de vibrantes discusiones, haz preguntas, comparte ideas y obtén apoyo de compañeros y expertos por igual: ¡Únete al servidor de Discord de MicrobiomeStat! En nuestro servidor de Discord, un bot automatizado te mantiene informado sobre cada actualización del paquete y tutorial, asegurándote de que nunca te pierdas las nuevas características, mejoras y materiales de aprendizaje. Nuestra comunidad activa prospera en la colaboración, la retroalimentación y el aprendizaje continuo, convirtiéndola en un espacio invaluable tanto para los investigadores novatos como para los experimentados que navegan por el mundo del análisis de datos del microbioma. ¡Mantente conectado, mantente informado y avancemos juntos en el campo del análisis de datos del microbioma!","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/README-ES.html","id":"compartir-y-conectar","dir":"","previous_headings":"","what":"Compartir y conectar","title":"MicrobiomeStat: Apoyo al análisis longitudinal del microbioma en R","text":"¡Difunde la palabra sobre MicrobiomeStat y mantente conectado través de varias plataformas!","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xianyang Zhang. Author. Jun Chen. Author, maintainer. Huijuan Zhou. Contributor. Caffery(Chen) Yang. Author.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhou, Huijuan et al. (2022). LinDA: linear models differential abundance analysis microbiome compositional data. Genome Biology, 23(1), 95. https://doi.org/10.1186/s13059-022-02655-5 Yang, Caffery (Chen) & Chen, Jun. (2023). MicrobiomeStat. GitHub repository. https://github.com/cafferychen777/MicrobiomeStat","code":"@Article{,   author = {Huijuan Zhou and Kejun He and Jun Chen and Xianyang Zhang},   title = {LinDA: linear models for differential abundance analysis of microbiome compositional data},   journal = {Genome Biology},   volume = {23},   number = {1},   pages = {95},   year = {2022},   url = {https://doi.org/10.1186/s13059-022-02655-5},   note = {Please cite this reference when using the 'linda' and 'linda.plot' functions.}, } @Manual{,   author = {Caffery Yang and Jun Chen},   title = {MicrobiomeStat: [Repository Description]},   year = {2023},   url = {https://github.com/cafferychen777/MicrobiomeStat},   note = {GitHub repository for the 'MicrobiomeStat' R package.}, }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"microbiomestat-supporting-longitudinal-microbiome-analysis-in-r","dir":"","previous_headings":"","what":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"EN | CN | ES MicrobiomeStat package dedicated R tool exploring longitudinal microbiome data. also accommodates multi-omics data cross-sectional studies, valuing collective efforts within community. tool aims support researchers extensive biological inquiries time, spirit gratitude towards community’s existing resources collaborative ethos furthering microbiome research.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"news","dir":"","previous_headings":"","what":"News","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"📢 Update (October 20th): Shiny interface now officially available use. currently configured handle analysis small medium-sized datasets. interface can accessed via link. event server limitations affecting analysis, preferring work smaller modules, recommend using package directly. flexible deployment, consider cloning Shiny repository deploying local server computer. appreciate understanding continued engagement.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"general-citation-for-microbiomestat","dir":"","previous_headings":"","what":"General Citation for MicrobiomeStat","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"using features beyond linda linda.plot functions, please cite follows, preprint version published:","code":"@Manual{,   title = {MicrobiomeStat: Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data},   author = {Xianyang Zhang and Jun Chen and Caffery(Chen) Yang},   year = {2023},   note = {R package version 1.1.1},   url = {https://www.microbiomestat.wiki}, }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"citation-for-specialized-microbiomestat-functions","dir":"","previous_headings":"","what":"Citation for Specialized MicrobiomeStat Functions","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"using linda, linda.plot, generate_taxa_association_test_long, generate_taxa_test_pair, generate_taxa_test_single, generate_taxa_trend_test_long functions, please cite following paper: update citation guidelines soon preprint published.","code":"@article{zhou2022linda,   title={LinDA: linear models for differential abundance analysis of microbiome compositional data},   author={Zhou, Huijuan and He, Kejun and Chen, Jun and Zhang, Xianyang},   journal={Genome biology},   volume={23},   number={1},   pages={1--23},   year={2022},   publisher={BioMed Central} }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"important-note-on-cran-version","dir":"","previous_headings":"","what":"Important Note on CRAN Version","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"MicrobiomeStat package continuous development. result, recent features yet incorporated version available CRAN repository. current CRAN version supports linda linda.plot functions. users require broader range functionalities, especially related analysis longitudinal data, advisable install development version directly GitHub. process necessitates prior installation devtools package. devtools installed, can install MicrobiomeStat GitHub using following command:","code":"install.packages(\"devtools\") devtools::install_github(\"cafferychen777/MicrobiomeStat\")"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"General Citation MicrobiomeStat Citation Specialized MicrobiomeStat Functions Important Note CRAN Version Acquaint Seamless Experience Acknowledgements User Support Ongoing Development Collaborative Development Conclusion Features Demo Reports Assistance & Contact Information Engage Discord Community Share Connect","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"online-tutorials","dir":"","previous_headings":"","what":"Online Tutorials","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"MicrobiomeStat provides comprehensive suite tools microbiome data analysis, encompassing variety functions data input visualization. acquaint users MicrobiomeStat, offer extensive online tutorial GitBook. tutorial covers following areas: guidelines help ensure setup correctly configured optimized. demonstrations provide practical insights skills. examples allow users familiarize MicrobiomeStat coding practices. guides help users understand effectively present data. section provides quick solutions common questions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"acquaint-yourself-for-a-seamless-experience","dir":"","previous_headings":"","what":"Acquaint Yourself for a Seamless Experience","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"seamless experience MicrobiomeStat, make enriching resources: 📘 Explore MicrobiomeStat Tutorials","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"discovering-microbiomestat","dir":"","previous_headings":"","what":"Discovering MicrobiomeStat","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"realm microbiome research intricate continually advancing. analytical tools selected can play crucial role navigating research journey. scenario, MicrobiomeStat aims supportive companion.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"acknowledgements","dir":"","previous_headings":"Discovering MicrobiomeStat","what":"Acknowledgements","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"stand shoulders giants MicrobiomeStat, heartfelt gratitude goes diligent brilliant developers dependencies package relies . remarkable efforts made work possible also significantly elevated standards computational tools available scientific community: R (>= 3.5.0), rlang, tibble ggplot2, matrixStats, lmerTest, foreach, modeest, vegan, dplyr, pheatmap, tidyr, ggh4x, ape, GUniFrac, scales, stringr, rmarkdown, knitr, pander, tinytex ggrepel, parallel, ggprism, aplot, philentropy, forcats, yaml, biomformat, Biostrings Furthermore, extend deepest appreciation respect trailblazers microbiome research community created maintained following remarkable tools. pioneering work laid paths complex landscape microbiome data analysis, truly honored walk alongside: microbiomeutilities, phyloseq, microbiomemarker, MicrobiomeAnalyst, microbiomeeco, EasyAmplicon, STAMP, qiime2, MicrobiotaProcess contributions inspire us continue improving expanding capabilities MicrobiomeStat, sincerely hope humble addition proves useful complement incredible array tools already available researchers.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"user-support","dir":"","previous_headings":"Discovering MicrobiomeStat","what":"User Support","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"MicrobiomeStat designed users mind. Comprehensive documentation tutorials available assist novice experienced researchers. posting question issue, encourage users check previous questions issues see topic already addressed. case specific comments questions particular function’s documentation find RStudio’s search box leads 404 error, can directly access function’s documentation https://cafferychen777.github.io/MicrobiomeStat/reference/index.html. question issue previously addressed, feel free open new issue GitHub. help navigate challenges may encounter.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"ongoing-development","dir":"","previous_headings":"Discovering MicrobiomeStat","what":"Ongoing Development","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"MicrobiomeStat tool continuous development incorporate user feedback keep advancements field. pleased announce Shiny interface MicrobiomeStat now officially available. interface provides interactive platform microbiome data analysis. Shiny interface maintained updated along main package. Shiny application can accessed directly link. users prefer local setup require customization, Shiny application files instructions available dedicated GitHub repository.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"collaborative-development","dir":"","previous_headings":"Discovering MicrobiomeStat","what":"Collaborative Development","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"MicrobiomeStat open-source tool, highly value contributions community. suggestions, improvements, feedback future development directions feature additions, pull requests welcomed, can also share ideas discussion area GitHub repository. Engage community members help us make MicrobiomeStat even useful tool microbiome research.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"conclusion","dir":"","previous_headings":"Discovering MicrobiomeStat","what":"Conclusion","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"MicrobiomeStat aims serve dependable efficient resource microbiome data analysis. extend invitation value open-source collaboration join community contribute ongoing development. approach ensures users can effortlessly navigate specific sections MicrobiomeStat documentation, garnering detailed information guidelines diverse analysis types. structure accessibility assist users leveraging MicrobiomeStat effectively microbiome data analysis needs.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"demo-reports","dir":"","previous_headings":"Discovering MicrobiomeStat","what":"Demo Reports","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"interested seeing MicrobiomeStat action, prepared demo reports tailored different study designs: Cross-sectional Study Design: Reporting Microbial Analysis MicrobiomeStat Paired Samples Analysis: Reporting Microbial Analysis MicrobiomeStat Longitudinal Study Design: Microbiome Analysis Automation MicrobiomeStat encourage explore examples discover powerful capabilities tool.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"assistance--contact-information","dir":"","previous_headings":"","what":"Assistance & Contact Information","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"assistance inquiries, feel free reach :","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"engage-in-our-discord-community","dir":"","previous_headings":"","what":"Engage in Our Discord Community","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"Join Discord community stay top latest updates, developments, enhancements MicrobiomeStat. part vibrant discussions, ask questions, share insights, avail support peers experts alike: Join MicrobiomeStat Discord Server! Discord server, automated bot keeps informed every package tutorial update, ensuring never miss new features, improvements, learning materials. active community thrives collaboration, feedback, continuous learning, making invaluable space novice experienced researchers navigating world microbiome data analysis. Stay connected, stay informed, let’s advance field microbiome data analysis together!","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/index.html","id":"share-and-connect","dir":"","previous_headings":"","what":"Share and Connect","title":"Comprehensive Statistical and Visualization Methods for Microbiome and Multi-Omics Data","text":"Spread word MicrobiomeStat stay connected various platforms!","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Data Function — aggregate_data","title":"Aggregate Data Function — aggregate_data","text":"function aggregates data specified subject optional strata.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Data Function — aggregate_data","text":"","code":"mStat_aggregate_data(data.obj, subject.var, strata.var = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Data Function — aggregate_data","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character specifying name subject variable. strata.var character specifying name strata variable. NULL, stratification performed.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/aggregate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Data Function — aggregate_data","text":"new list object aggregated data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Data Function — aggregate_data","text":"","code":"if (FALSE) { # Prepare data for the function data(peerj32.obj)  # Call the function aggregated_data <- mStat_aggregate_data(   data.obj = peerj32.obj,   subject.var = \"subject\",   strata.var = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/build_mStat_tax_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Build mStat tax table — build_mStat_tax_table","title":"Build mStat tax table — build_mStat_tax_table","text":"function takes list taxonomy information creates taxonomic table compatible mStat.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/build_mStat_tax_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build mStat tax table — build_mStat_tax_table","text":"","code":"build_mStat_tax_table(taxlist)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/build_mStat_tax_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build mStat tax table — build_mStat_tax_table","text":"taxlist list element named vector representing taxonomy feature.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/build_mStat_tax_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build mStat tax table — build_mStat_tax_table","text":"matrix representing taxonomic table.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/build_mStat_tax_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build mStat tax table — build_mStat_tax_table","text":"","code":"# Assume `taxlist` is a list of taxonomy information # tax_table <- build_mStat_tax_table(taxlist)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/ecam.obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","title":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","text":"ecam.obj dataset derived subset Early Childhood Antibiotics Microbiome (ECAM) study, tracked microbiome composition development 43 infants United States birth 2 years age, identifying associations microbiome antibiotic exposure, delivery mode, diet.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/ecam.obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","text":"","code":"ecam.obj"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/ecam.obj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","text":"object class list length 3.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/ecam.obj.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","text":"Data source: https://github.com/FrederickHuangLin/ANCOM/tree/master/data","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/ecam.obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","text":"ecam.obj MicrobiomeStat Data Object.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/ecam.obj.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from the Early Childhood Antibiotics and the Microbiome (ECAM) study — ecam.obj","text":"Bokulich, Nicholas ., et al. \"Antibiotics, birth mode, diet shape microbiome maturation early life.\" Science translational medicine 8.343 (2016): 343ra82-343ra82.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate boxplot for specified alpha diversity index — generate_alpha_boxplot_long","title":"Generate boxplot for specified alpha diversity index — generate_alpha_boxplot_long","text":"function generates boxplot specified alpha diversity index dplyr::across different groupings time points, optional stratification. output can saved PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate boxplot for specified alpha diversity index — generate_alpha_boxplot_long","text":"","code":"generate_alpha_boxplot_long(   data.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   base.size = 12,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate boxplot for specified alpha diversity index — generate_alpha_boxplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. subject.var variable metadata table represents subject. time.var variable metadata table represents time. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var optional variable metadata table represents grouping factor. strata.var optional variable metadata table represents stratification factor. adj.vars character vector variable names used adjustment. base.size base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette optional color palette plot. provided, default color palette used. palette vector color codes format accepted ggplot2 (e.g., hexadecimal color codes). number colors palette least large number groups plotted. pdf boolean indicating whether save output PDF file. file.ann string annotating output file name. pdf.wid width output PDF file. Default 11. pdf.hei height output PDF file. Default 8.5. ... Additional arguments pass plotting function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate boxplot for specified alpha diversity index — generate_alpha_boxplot_long","text":"boxplot displaying specified alpha diversity index dplyr::across different groupings time points, stratified specified stratification variable (provided). boxplot saved PDF `pdf` set `TRUE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate boxplot for specified alpha diversity index — generate_alpha_boxplot_long","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") generate_alpha_boxplot_long(   data.obj = subset_T2D.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"subject_race\",   strata.var = \"subject_gender\",   adj.vars = c(\"sample_body_site\"),   base.size = 16,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 20,   pdf.hei = 8.5)  data(peerj32.obj) generate_alpha_boxplot_long(   data.obj = peerj32.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   subject.var = \"subject\",   time.var = \"time\",   t0.level = \"1\",   ts.levels = \"2\",   group.var = \"group\",   strata.var = \"sex\",   adj.vars = NULL,   base.size = 20,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate boxplot for alpha diversity index at a single time point — generate_alpha_boxplot_single","title":"Generate boxplot for alpha diversity index at a single time point — generate_alpha_boxplot_single","text":"function generates boxplot specified alpha diversity indices single time point dplyr::across different groupings, optional stratification. output can saved PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate boxplot for alpha diversity index at a single time point — generate_alpha_boxplot_single","text":"","code":"generate_alpha_boxplot_single(   data.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   subject.var,   time.var = NULL,   t.level = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate boxplot for alpha diversity index at a single time point — generate_alpha_boxplot_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. subject.var variable metadata table represents subject. time.var variable metadata table represents time. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var optional variable metadata table represents grouping factor. strata.var optional variable metadata table represents stratification factor. adj.vars character vector variable names used adjustment. base.size base font size plot. Default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette optional palette use plot. NULL (default), pre-defined palette used. pdf boolean indicating whether save output PDF file. Default TRUE. file.ann string annotating output file name. pdf.wid width output PDF file. Default 11. pdf.hei height output PDF file. Default 8.5. ... Additional arguments pass plotting function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate boxplot for alpha diversity index at a single time point — generate_alpha_boxplot_single","text":"list boxplots displaying specified alpha diversity indices specified time point dplyr::across different groupings, stratified specified stratification variable (provided). boxplot list corresponds one alpha diversity indices specified `alpha.name`. boxplots saved PDF files `pdf` set `TRUE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_boxplot_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate boxplot for alpha diversity index at a single time point — generate_alpha_boxplot_single","text":"","code":"if (FALSE) { library(vegan) library(ggh4x)  # Load data data(peerj32.obj)  # First example with peerj32.obj generate_alpha_boxplot_single(   data.obj     = peerj32.obj,   alpha.obj    = NULL,   alpha.name   = c(\"simpson\"),   subject.var  = \"subject\",   time.var     = \"time\",   t.level      = \"2\",   group.var    = \"group\",   strata.var   = \"sex\",   adj.vars     = \"sex\",   base.size    = 16,   theme.choice = \"bw\",   palette      = NULL,   pdf          = TRUE,   file.ann     = NULL,   pdf.wid      = 11,   pdf.hei      = 8.5 )  # Load another dataset data(\"subset_T2D.obj\")  # Second example with subset_T2D.obj generate_alpha_boxplot_single(   data.obj     = subset_T2D.obj,   alpha.obj    = NULL,   alpha.name   = c(\"shannon\"),   subject.var  = \"subject_id\",   time.var     = \"visit_number\",   t.level      = \"   3\",   group.var    = \"subject_race\",   strata.var   = \"subject_gender\",   adj.vars     = \"sample_body_site\",   base.size    = 16,   theme.choice = \"bw\",   palette      = NULL,   pdf          = TRUE,   file.ann     = NULL,   pdf.wid      = 20,   pdf.hei      = 8.5 )  } library(vegan) #> Loading required package: permute #> Loading required package: lattice #> This is vegan 2.6-4 library(ggh4x) #> Loading required package: ggplot2  # Load data data(peerj32.obj)  # First example with peerj32.obj generate_alpha_boxplot_single(   data.obj     = peerj32.obj,   alpha.obj    = NULL,   alpha.name   = c(\"simpson\"),   subject.var  = \"subject\",   time.var     = \"time\",   t.level      = \"2\",   group.var    = \"group\",   strata.var   = \"sex\",   adj.vars     = \"sex\",   base.size    = 16,   theme.choice = \"bw\",   palette      = NULL,   pdf          = FALSE,   file.ann     = NULL,   pdf.wid      = 11,   pdf.hei      = 8.5 ) #> Diversity analysis needs rarefaction! Call 'mStat_rarefy_data' to rarefy the data! #> No depth specified, using the smallest column sum:  21230 #> Data has been subsetted based on the provided samIDs. #> Updated metadata to match the subsetted data. #> The following samples were excluded:  #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> Data has been subsetted based on the provided condition. #> Updated metadata to match the subsetted data. #> The following samples were excluded: sample-1, sample-3, sample-5, sample-7, sample-9, sample-11, sample-13, sample-15, sample-17, sample-19, sample-21, sample-23, sample-25, sample-27, sample-29, sample-31, sample-33, sample-35, sample-37, sample-39, sample-41, sample-43 #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> Calculating simpson diversity... #> Diversity calculations complete. #> Alpha diversity has been adjusted for the following covariates: sex. #> $simpson  #>   # Load another dataset data(\"subset_T2D.obj\")  # Second example with subset_T2D.obj generate_alpha_boxplot_single(   data.obj     = subset_T2D.obj,   alpha.obj    = NULL,   alpha.name   = c(\"shannon\"),   subject.var  = \"subject_id\",   time.var     = \"visit_number\",   t.level      = \"   3\",   group.var    = \"subject_race\",   strata.var   = \"subject_gender\",   adj.vars     = \"sample_body_site\",   base.size    = 16,   theme.choice = \"bw\",   palette      = NULL,   pdf          = FALSE,   file.ann     = NULL,   pdf.wid      = 20,   pdf.hei      = 8.5 ) #> Diversity analysis needs rarefaction! Call 'mStat_rarefy_data' to rarefy the data! #> No depth specified, using the smallest column sum:  2007 #> Removed  3934  rows from the OTU table and feature annotations due to all-zero counts after rarefication. The removed rows areata has been subsetted based on the provided samIDs. #> Updated metadata to match the subsetted data. #> The following samples were excluded:  #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> Data has been subsetted based on the provided condition. #> Updated metadata to match the subsetted data. #> The following samples were excluded: HMP2_J00825_1_ST_T0_B0_0120_ZN9YTFN-01_AA31J, HMP2_J00826_1_ST_T0_B0_0120_ZN9YTFN-1011_AA31J, HMP2_J00828_1_ST_T0_B0_0120_ZN9YTFN-1013_AA31J, HMP2_J00829_1_ST_T0_B0_0120_ZN9YTFN-1014_AA31J, HMP2_J00830_1_ST_T0_B0_0120_ZN9YTFN-1015_AA31J, HMP2_J00831_1_ST_T0_B0_0122_ZMGT937-01_AA31J, HMP2_J00832_1_ST_T0_B0_0122_ZMGT937-02_AA31J, HMP2_J00833_1_ST_T0_B0_0122_ZMGT937-1013_AA31J, HMP2_J00834_1_ST_T0_B0_0122_ZMGT937-1014_AA31J, HMP2_J00835_1_ST_T0_B0_0122_ZLZQMEV-01_AA31J, HMP2_J00838_1_ST_T0_B0_0122_ZLZQMEV-1014_AA31J, HMP2_J00840_1_ST_T0_B0_0120_ZLZNCLZ-01_AA31J, HMP2_J00841_1_ST_T0_B0_0120_ZLZNCLZ-1013_AA31J, HMP2_J00842_1_ST_T0_B0_0122_ZLYEM2C-01_AA31J, HMP2_J00843_1_ST_T0_B0_0122_ZLYEM2C-03_AA31J, HMP2_J00845_1_ST_T0_B0_0120_ZLGD9M0-05_AA31J, HMP2_J00846_1_ST_T0_B0_0122_ZLGD9M0-07_AA31J, HMP2_J00848_1_ST_T0_B0_0122_ZLGD9M0-1013_AA31J, HMP2_J00849_1_NS_T0_B0_0120_ZLGD9M0-1014_AAH7B, HMP2_J00850_1_ST_T0_B0_0122_ZL9BTWF-03_AA31J, HMP2_J00851_1_ST_T0_B0_0122_ZL9BTWF-04_AA31J, HMP2_J00853_1_ST_T0_B0_0122_ZL9BTWF-06_AA31J, HMP2_J00854_1_ST_T0_B0_0122_ZL9BTWF-1012_AA31J, HMP2_J00856_1_ST_T0_B0_0122_ZKVR426-01_AA31J, HMP2_J00857_1_ST_T0_B0_0120_ZKVR426-02_AA31J, HMP2_J00859_1_ST_T0_B0_0122_ZKVR426-04_AA31J, HMP2_J00861_1_ST_T0_B0_0122_ZKVR426-1012_AA31J, HMP2_J00876_1_ST_T0_B0_0120_ZMBVNFM-02_AA31J, HMP2_J00878_1_ST_T0_B0_0120_ZMBVNFM-04_AA31J, HMP2_J00882_1_ST_T0_B0_0122_ZM7JY3G-01_AA31J, HMP2_J00883_1_ST_T0_B0_0122_ZM7JY3G-02_AA31J, HMP2_J00884_1_ST_T0_B0_0122_ZM7JY3G-04_AA31J, HMP2_J00888_1_ST_T0_B0_0120_ZK4CK8Y-02_AA31J, HMP2_J00890_1_ST_T0_B0_0120_ZK4CK8Y-04_AA31J, HMP2_J00891_1_ST_T0_B0_0122_ZJTKAE3-01_AA31J, HMP2_J00892_1_ST_T0_B0_0122_ZJTKAE3-02_AA31J, HMP2_J00893_1_ST_T0_B0_0122_ZJTKAE3-04_AA31J, HMP2_J00894_1_ST_T0_B0_0120_ZN9YTFN-1015X_AA31J, HMP2_J04147_1_NS_T0_B0_0122_ZMGT937-02_AAH7B, HMP2_J04148_1_NS_T0_B0_0122_ZMGT937-01_AAH7B, HMP2_J04183_1_NS_T0_B0_0120_ZN9YTFN-1014_AAH7B, HMP2_J04194_1_NS_T0_B0_0120_ZN9YTFN-1013_AAH7B, HMP2_J04202_1_NS_T0_B0_0120_ZN9YTFN-1011_AAH7B, HMP2_J05378_1_NS_T0_B0_0120_ZOZOW1T-44N_AAH7B, HMP2_J05379_1_ST_T0_B0_0120_ZOZOW1T-44ST_AAH7B, HMP2_J05382_1_NS_T0_B0_0120_ZOZOW1T-49N_AAH7B, HMP2_J05383_1_ST_T0_B0_0120_ZOZOW1T-49ST_AAH7B, HMP2_J05384_1_NS_T0_B0_0120_ZOZOW1T-53_B86HB, HMP2_J05384_1_NS_T0_B0_0120_ZOZOW1T-53N_AAH7B, HMP2_J05385_1_ST_T0_B0_0120_ZOZOW1T-53ST_AAH7B, HMP2_J05388_1_NS_T0_B0_0120_ZOZOW1T-54N_AAH7B, HMP2_J05388_1_NS_T0_B0_0120_ZOZOW1T-54N_ANBEN, HMP2_J05389_1_ST_T0_B0_0120_ZOZOW1T-54ST_AAH7B, HMP2_J05402_1_NS_T0_B0_0122_ZN9YTFN-01_AAH7B, HMP2_J05407_1_NS_T0_B0_0122_ZMGT937-1013_AAH7B, HMP2_J05408_1_NS_T0_B0_0122_ZMGT937-1014_AAH7B, HMP2_J05410_1_ST_T0_B0_0120_ZLZQMEV-01_AA31J, HMP2_J05413_1_NS_T0_B0_0122_ZLZQMEV-1013_AAH7B, HMP2_J05416_1_NS_T0_B0_0120_ZLZNCLZ-01_AAH7B, HMP2_J05417_1_NS_T0_B0_0122_ZLZNCLZ-03-432_AAH7B, HMP2_J05419_1_NS_T0_B0_0120_ZLZNCLZ-1011_AAH7B, HMP2_J05420_1_ST_T0_B0_0120_ZLZNCLZ-1011_AAH7B, HMP2_J05423_1_NS_T0_B0_0120_ZLZNCLZ-1013_AAH7B, HMP2_J05424_1_NS_T0_B0_0122_ZLYEM2C-01_AAH7B, HMP2_J05425_1_NS_T0_B0_0122_ZLYEM2C-02_AAH7B, HMP2_J05426_1_NS_T0_B0_0122_ZLYEM2C-03_AAH7B, HMP2_J05428_1_NS_T0_B0_0122_ZLYEM2C-1012_AAH7B, HMP2_J05429_1_NS_T0_B0_0120_ZLGD9M0-05_AAH7B, HMP2_J05430_1_NS_T0_B0_0122_ZLGD9M0-07_AAH7B, HMP2_J05431_1_NS_T0_B0_0122_ZLGD9M0-1011_AAH7B, HMP2_J05434_1_ST_T0_B0_0120_ZLGD9M0-1014_AA31J, HMP2_J05438_1_NS_T0_B0_0122_ZL9BTWF-1012_AAH7B, HMP2_J05440_1_NS_T0_B0_0122_ZKVR426-04_AAH7B, HMP2_J05442_1_NS_T0_B0_0122_ZKVR426-1012_AAH7B, HMP2_J05447_1_ST_T0_B0_0120_ZK4CK8Y-01_AAH7B, HMP2_J09104_1_ST_T0_B0_0120_ZM7JY3G-05_ADM3N, HMP2_J09105_1_ST_T0_B0_0120_ZM7JY3G-07_ADM3N, HMP2_J09112_1_ST_T0_B0_0120_ZK4CK8Y-05_ADM3N, HMP2_J09113_1_ST_T0_B0_0120_ZK4CK8Y-06_ADM3N, HMP2_J09133_1_ST_T0_B0_0120_ZMGT937-1012_ADM3N, HMP2_J09135_1_ST_T0_B0_0120_ZLZQMEV-1014X_ADM3N, HMP2_J09137_1_ST_T0_B0_0120_ZOBX723-1015_ADM3N, HMP2_J09138_1_ST_T0_B0_0120_ZX52KVK-01_ADM3N, HMP2_J09144_1_ST_T0_B0_0120_ZVNCGHM-1011-AL2_ADM3N, HMP2_J09145_1_ST_T0_B0_0120_ZVNCGHM-1013_ADM3N, HMP2_J09147_1_ST_T0_B0_0120_ZVNCGHM-1015_ADM3N, HMP2_J09148_1_ST_T0_B0_0120_ZVNCGHM-1022_ADM3N, HMP2_J09152_1_ST_T0_B0_0120_ZYHHR4Z-01_ADM3N, HMP2_J09153_1_ST_T0_B0_0120_ZYHHR4Z-02_ADM3N, HMP2_J09154_1_NS_T0_B0_0120_ZYHHR4Z-1023_ANBEN, HMP2_J09154_1_ST_T0_B0_0120_ZYHHR4Z-1023_ADM3N, HMP2_J09155_1_ST_T0_B0_0120_ZYHHR4Z-1024_ADM3N, HMP2_J09174_1_NS_T0_B0_0120_ZOBX723-1015_ADM3N, HMP2_J09178_1_NS_T0_B0_0120_ZYHHR4Z-01_ADM3N, HMP2_J09178_1_NS_T0_B0_0120_ZYHHR4Z-01_ANBEN, HMP2_J09179_1_NS_T0_B0_0120_ZYHHR4Z-02_ADM3N, HMP2_J09179_1_NS_T0_B0_0120_ZYHHR4Z-02_ANBEN, HMP2_J09180_1_NS_T0_B0_0120_ZYHHR4Z-1023_ADM3N, HMP2_J09181_1_NS_T0_B0_0120_ZYHHR4Z-1024_ADM3N, HMP2_J09183_1_NS_T0_B0_0120_ZVNCGHM-1011_ADM3N, HMP2_J09184_1_NS_T0_B0_0120_ZVNCGHM-1013_B86HB, HMP2_J09186_1_NS_T0_B0_0120_ZVNCGHM-1015_ADM3N, HMP2_J09187_1_NS_T0_B0_0120_ZVNCGHM-1022_ADM3N, HMP2_J09188_1_NS_T0_B0_0120_ZX52KVK-01_ADM3N, HMP2_J15230_1_ST_T0_B0_0120_ZY7IW45-01_AELNK, HMP2_J15231_1_ST_T0_B0_0120_ZY7IW45-02_AELNK, HMP2_J15232_1_ST_T0_B0_0120_ZY7IW45-03_AELNK, HMP2_J15234_1_ST_T0_B0_0120_ZWCZHHY-01_AELNK, HMP2_J15235_1_ST_T0_B0_0120_ZWCZHHY-02_AELNK, HMP2_J15237_1_ST_T0_B0_0120_ZW61YGW-01_AELNK, HMP2_J15238_1_ST_T0_B0_0120_ZW61YGW-02_AELNK, HMP2_J15240_1_ST_T0_B0_0120_ZYXQKWY-01_AELNK, HMP2_J15241_1_ST_T0_B0_0120_ZYXQKWY-02_AELNK, HMP2_J15243_1_ST_T0_B0_0120_ZVM4N7A-01_AELNK, HMP2_J15244_1_ST_T0_B0_0120_ZVM4N7A-02_AELNK, HMP2_J15245_1_ST_T0_B0_0120_ZVGW5FI-01_AELNK, HMP2_J15246_1_ST_T0_B0_0120_ZVGW5FI-02_AELNK, HMP2_J16529_1_ST_T0_B0_0120_ZOZOW1T-46_AF11U, HMP2_J16530_1_ST_T0_B0_0120_ZWCZHHY-04_AF11U, HMP2_J28556_1_ST_T0_B0_0120_ZOBX723-1021_B44V8, HMP2_J28565_1_ST_T0_B0_0120_ZN3TBJM-01_B44V8, HMP2_J28566_1_ST_T0_B0_0120_ZN3TBJM-02_B44V8, HMP2_J28567_1_ST_T0_B0_0120_ZN3TBJM-03_B44V8, HMP2_J28568_1_ST_T0_B0_0120_ZN3TBJM-04_B44V8, HMP2_J28591_1_ST_T0_B0_0120_ZLZQMEV-1014-AL1_AL5DH, HMP2_J28592_1_ST_T0_B0_0120_ZVNCGHM-1022-AL1_AL5DH, HMP2_J28595_1_ST_T0_B0_0120_ZM8YXDM-01-AL1_AL5DH, HMP2_J28597_1_ST_T0_B0_0120_ZVGW5FI-02-AL1_AL5DH, HMP2_J28598_1_ST_T0_B0_0120_ZVM4N7A-01-AL1_AL5DH, HMP2_J28603_1_ST_T0_B0_0120_ZN3TBJM-2011_AWBGH, HMP2_J28620_1_ST_T0_B0_0120_ZJTKAE3-2012_AWBGH, HMP2_J28636_1_ST_T0_B0_0120_ZYU89T9-2013_AVTWA, HMP2_J28637_1_ST_T0_B0_0120_ZYU89T9-2014_AVTWA, HMP2_J28638_1_ST_T0_B0_0120_ZYU89T9-2015_AVTWA, HMP2_J28639_1_ST_T0_B0_0120_ZYHHR4Z-2011-AL1_AVTWA, HMP2_J28646_1_ST_T0_B0_0120_ZY7IW45-2011_AVTWA, HMP2_J28647_1_ST_T0_B0_0120_ZY7IW45-2012_AVTWA, HMP2_J28986_1_NS_T0_B0_0120_ZOBX723-1013_AN77Y, HMP2_J28996_1_NS_T0_B0_0120_ZN3TBJM-01_AN77Y, HMP2_J28997_1_NS_T0_B0_0120_ZN3TBJM-02_AN77Y, HMP2_J28998_1_NS_T0_B0_0120_ZN3TBJM-03_AN77Y, HMP2_J28999_1_NS_T0_B0_0120_ZN3TBJM-04_AN77Y, HMP2_J29018_1_NS_T0_B0_0120_ZYLJ7R7-01_AN77Y, HMP2_J29019_1_NS_T0_B0_0120_ZYLJ7R7-02_AN77Y, HMP2_J29026_1_NS_T0_B0_0120_ZVBQY1N-01_AN77Y, HMP2_J29027_1_NS_T0_B0_0120_ZVBQY1N-03_AN77Y, HMP2_J29029_1_NS_T0_B0_0120_ZVBQY1N-1014_AN77Y, HMP2_J29030_1_NS_T0_B0_0120_ZVBQY1N-1015_AN77Y, HMP2_J29040_1_NS_T0_B0_0120_ZL63I8R-09_APHU6, HMP2_J29051_1_NS_T0_B0_0120_ZJTKAE3-1011_AN77Y, HMP2_J34819_1_NS_T0_B0_0120_ZUPAQVU-01_APHU6, HMP2_J34820_1_NS_T0_B0_0120_ZUL3S6O-01_APHU6, HMP2_J34832_1_NS_T0_B0_0120_ZM8YXDM-6011_APHU6, HMP2_J34838_1_NS_T0_B0_0120_ZXHCGKV-06_AN77Y, HMP2_J34844_1_NS_T0_B0_0120_ZW61YGW-05_AN77Y, HMP2_J34855_1_NS_T0_B0_0120_ZV14SIB-04_ANAV8, HMP2_J34856_1_NS_T0_B0_0120_ZUPAQVU-04_AN77Y, HMP2_J34856_1_NS_T0_B0_0120_ZUPAQVU-04_ANAV8, HMP2_J34862_1_NS_T0_B0_0120_ZTMFN3O-02_AN77Y, HMP2_J34864_1_NS_T0_B0_0120_ZTL5S2Y-02_ANAV8, HMP2_J34867_1_NS_T0_B0_0120_ZSQNUZ5-01_ANAV8, HMP2_J34868_1_NS_T0_B0_0120_ZSMO1UM-02_AN77Y, HMP2_J34869_1_NS_T0_B0_0120_ZS78KHV-01_ANAV8, HMP2_J34870_1_NS_T0_B0_0120_ZS78KHV-6011_AN77Y, HMP2_J34871_1_NS_T0_B0_0120_ZS2DMX7-01_AN77Y, HMP2_J34872_1_NS_T0_B0_0120_ZRLZ98T-6011_AN77Y, HMP2_J34874_1_NS_T0_B0_0120_ZRLZ98T-6013_ANAV8, HMP2_J34875_1_NS_T0_B0_0120_ZRLZ98T-6014_ANAV8, HMP2_J34876_1_NS_T0_B0_0120_ZRLZ98T-6015_AN77Y, HMP2_J34876_1_NS_T0_B0_0120_ZRLZ98T-6015_ANAV8, HMP2_J34879_1_NS_T0_B0_0120_ZRB0F6P-01_AN77Y, HMP2_J34879_1_NS_T0_B0_0120_ZRB0F6P-01_ANAV8, HMP2_J34879_1_NS_T1_B0_0120_ZRB0F6P-01_ANAV8, HMP2_J34880_1_NS_T0_B0_0120_ZRA5YD8-01_AN77Y, HMP2_J34881_1_NS_T0_B0_0120_ZRA5YD8-1011_ANAV8, HMP2_J34883_1_NS_T0_B0_0120_ZR47VBL-01_AN77Y, HMP2_J34884_1_NS_T0_B0_0120_ZR3WH7V-01_ANAV8, HMP2_J34885_1_NS_T0_B0_0120_ZR3WH7V-6011_AN77Y, HMP2_J34886_1_NS_T0_B0_0120_ZQFL1P3-01_ANAV8, HMP2_J34934_1_NS_T0_B0_0120_ZY9XQJP-06_ANAV8, HMP2_J34935_1_NS_T0_B0_0120_ZY39SN0-04_ANAV8, HMP2_J34940_1_NS_T0_B0_0120_ZXHCGKV-05_ANAV8, HMP2_J34945_1_NS_T0_B0_0120_ZWHMV5E-04_ANAV8, HMP2_J34947_1_NS_T0_B0_0120_ZWCZHHY-05_ANAV8, HMP2_J34954_1_NS_T0_B0_0120_ZVM4N7A-6013_ANAV8, HMP2_J34962_1_NS_T0_B0_0120_ZYXQKWY-04_ANAV8, HMP2_J34963_1_NS_T0_B0_0120_ZV1ZA6Z-05_ANAV8, HMP2_J34964_1_NS_T0_B0_0120_ZV14SIB-02_ANAV8, HMP2_J34965_1_NS_T0_B0_0120_ZUPAQVU-02_ANAV8, HMP2_J34966_1_NS_T0_B0_0120_ZUL3S6O-6013_ANAV8, HMP2_J34967_1_NS_T0_B0_0120_ZUL3S6O-6014_ANAV8, HMP2_J34968_1_NS_T0_B0_0120_ZUL3S6O-6015_ANAV8, HMP2_J34971_1_NS_T0_B0_0120_ZUHT69X-01_ANAV8, HMP2_J34972_1_NS_T0_B0_0120_ZUHT69X-02_ANAV8, HMP2_J34973_1_NS_T0_B0_0120_ZTXWLP3-01_ANAV8, HMP2_J34974_1_NS_T0_B0_0120_ZTLUDS8-1015_ANAV8, HMP2_J34976_1_NS_T0_B0_0120_ZTL5S2Y-01_ANAV8, HMP2_J34978_1_NS_T0_B0_0120_ZSUQ08V-01_ANAV8, HMP2_J34979_1_NS_T0_B0_0120_ZSOZWGV-6011_ANAV8, HMP2_J34980_1_NS_T0_B0_0120_ZSMO1UM-01_ANAV8, HMP2_J34981_1_NS_T0_B0_0120_ZRLZ98T-01_ANAV8, HMP2_J35003_1_NS_T0_B0_0120_ZM8YXDM-06_ANAV8, HMP2_J35005_1_NS_T0_B0_0120_ZY9XQJP-05_ANAV8, HMP2_J35010_1_NS_T0_B0_0120_ZWCZHHY-04_ANAV8, HMP2_J35011_1_NS_T0_B0_0120_ZW61YGW-04_ANAV8, HMP2_J35023_1_NS_T0_B0_0120_ZVM4N7A-6011_ANAV8, HMP2_J35024_1_NS_T0_B0_0120_ZVM4N7A-6012_ANAV8, HMP2_J35028_1_NS_T0_B0_0120_ZVC4YUG-02_ANAV8, HMP2_J35029_1_NS_T0_B0_0120_ZYXQKWY-02_ANAV8, HMP2_J35033_1_NS_T0_B0_0120_ZUF48YS-01_ANAV8, HMP2_J35034_1_NS_T0_B0_0120_ZUF48YS-02_ANAV8, HMP2_J35036_1_NS_T0_B0_0120_ZTXY83G-01_ANAV8, HMP2_J35037_1_NS_T0_B0_0120_ZTXWLP3-02_ANAV8, HMP2_J35038_1_NS_T0_B0_0120_ZTUO1AO-01_ANAV8, HMP2_J35039_1_NS_T0_B0_0120_ZTTL3YH-01_ANAV8, HMP2_J35040_1_NS_T0_B0_0120_ZTMFN3O-01_ANAV8, HMP2_J35041_1_NS_T0_B0_0120_ZTLUDS8-01_ANAV8, HMP2_J35043_1_NS_T0_B0_0120_ZSOZWGV-01_ANAV8, HMP2_J35045_1_NS_T0_B0_0120_ZLPZS0H-09_ANAV8, HMP2_J35046_1_NS_T0_B0_0120_ZLPZS0H-10_ANAV8, HMP2_J35093_1_NS_T0_B0_0120_ZWHMV5E-05_ANAV8, HMP2_J35099_1_NS_T0_B0_0120_ZYXQKWY-05_ANAY8, HMP2_J35109_1_NS_T0_B0_0120_ZSUQ08V-04_ANAV8, HMP2_J35110_1_NS_T0_B0_0120_ZSQNUZ5-02_ANAV8, HMP2_J35112_1_NS_T0_B0_0120_ZS78KHV-6013_ANAV8, HMP2_J35114_1_NS_T0_B0_0120_ZS78KHV-6015_ANAY8, HMP2_J35115_1_NS_T0_B0_0120_ZS2DMX7-02_ANAY8, HMP2_J35116_1_NS_T0_B0_0120_ZRB0F6P-6013_ANAY8, HMP2_J35118_1_NS_T0_B0_0120_ZRB0F6P-6015_ANAY8, HMP2_J35120_1_NS_T0_B0_0120_ZRA5YD8-5011_ANAV8, HMP2_J35121_1_NS_T0_B0_0120_ZRA5YD8-5012_ANAY8, HMP2_J35123_1_NS_T0_B0_0120_ZR3WH7V-6013_ANAV8, HMP2_J35125_1_NS_T0_B0_0120_ZR3WH7V-6015_ANAY8, HMP2_J35126_1_NS_T0_B0_0120_ZQNZSQF-01_ANAV8, HMP2_J35127_1_NS_T0_B0_0120_ZQFL1P3-6011_ANAY8, HMP2_J35129_1_NS_T0_B0_0120_ZQFL1P3-6013_ANAY8, HMP2_J35130_1_NS_T0_B0_0120_ZQFL1P3-6014_ANAY8, HMP2_J35131_1_NS_T0_B0_0120_ZPMBHPS-01_ANAY8, HMP2_J35132_1_NS_T0_B0_0120_ZPJT5MY-01_ANAY8, HMP2_J35173_1_NS_T0_B0_0120_ZY39SN0-02_ANAY8, HMP2_J35180_1_NS_T0_B0_0120_ZWCZHHY-06_ANAY8, HMP2_J35186_1_NS_T0_B0_0120_ZV14SIB-05_ANAY8, HMP2_J35196_1_NS_T0_B0_0120_ZTUO1AO-02_ANAY8, HMP2_J35197_1_NS_T0_B0_0120_ZTTL3YH-02_ANAY8, HMP2_J35199_1_NS_T0_B0_0120_ZTMFN3O-1012_ANAY8, HMP2_J35200_1_NS_T0_B0_0120_ZTMFN3O-1015_ANAY8, HMP2_J35201_1_NS_T0_B0_0120_ZTLUDS8-1014_ANAY8, HMP2_J35203_1_NS_T0_B0_0120_ZTL8083-01_ANAY8, HMP2_J35208_1_NS_T0_B0_0120_ZS78KHV-6014_ANAY8, HMP2_J35209_1_NS_T0_B0_0120_ZRB0F6P-6011_ANAY8, HMP2_J35211_1_NS_T0_B0_0120_ZR47VBL-02_ANAY8, HMP2_J35212_1_NS_T0_B0_0120_ZR3WH7V-6014_ANAY8, HMP2_J35213_1_NS_T0_B0_0120_ZQMVU4Q-01_ANAY8, HMP2_J35214_1_NS_T0_B0_0120_ZQMVU4Q-03_ANAY8, HMP2_J35215_1_NS_T0_B0_0120_ZQFL1P3-6015_ANAY8, HMP2_J35217_1_NS_T0_B0_0120_ZPXU188-01_ANAY8, HMP2_J35226_1_NS_T0_B0_0120_ZXHCGKV-02_ANAY8, HMP2_J35234_1_NS_T0_B0_0120_ZNED4XZ-01_APHU6, HMP2_J35235_1_NS_T0_B0_0120_ZNED4XZ-03_APHU6, HMP2_J35240_1_NS_T0_B0_0120_ZN3TBJM-2011_APHU6, HMP2_J35257_1_NS_T0_B0_0120_ZMBVNFM-5011_ANAY8, HMP2_J35258_1_NS_T0_B0_0120_ZMBVNFM-5012_APHU6, HMP2_J35260_1_NS_T0_B0_0120_ZM8YXDM-02_APHU6, HMP2_J35261_1_NS_T0_B0_0120_ZYU89T9-01_APHU6, HMP2_J35262_1_NS_T0_B0_0120_ZYU89T9-2013_ANAY8, HMP2_J35264_1_NS_T0_B0_0120_ZYU89T9-2014_ANAY8, HMP2_J35265_1_NS_T0_B0_0120_ZYU89T9-2015_APHU6, HMP2_J35269_1_NS_T0_B0_0120_ZY9XQJP-01_APHU6, HMP2_J35271_1_NS_T0_B0_0120_ZY7IW45-2011_APHU6, HMP2_J35272_1_NS_T0_B0_0120_ZY7IW45-2012_APHU6, HMP2_J35274_1_NS_T0_B0_0120_ZY39SN0-3011_ANAY8, HMP2_J35275_1_NS_T0_B0_0120_ZY39SN0-3012_APHU6, HMP2_J35282_1_NS_T0_B0_0120_ZXHCGKV-01_APHU6, HMP2_J35284_1_NS_T0_B0_0120_ZWCZHHY-02_ANAY8, HMP2_J35286_1_NS_T0_B0_0120_ZW61YGW-01_APHU6, HMP2_J35288_1_NS_T0_B0_0120_ZVGW5FI-01_APHU6, HMP2_J35289_1_NS_T0_B0_0120_ZLTUJTN-2011_ANAY8, HMP2_J35303_1_NS_T0_B0_0120_ZJTKAE3-2012_ANAY8, HMP2_J35309_1_NS_T0_B0_0120_ZNED4XZ-02_APHU6, HMP2_J35310_1_NS_T0_B0_0120_ZNED4XZ-04_APHU6, HMP2_J35313_1_NS_T0_B0_0120_ZNED4XZ-4011_APHU6, HMP2_J35323_1_NS_T0_B0_0120_ZMBVNFM-01_APHU6, HMP2_J35324_1_NS_T0_B0_0120_ZMBVNFM-02_APHU6, HMP2_J35325_1_NS_T0_B0_0120_ZMBVNFM-04_APHU6, HMP2_J35329_1_NS_T0_B0_0120_ZM8YXDM-01_APHU6, HMP2_J35331_1_NS_T0_B0_0120_ZM7JY3G-01_APHU6, HMP2_J35332_1_NS_T0_B0_0120_ZM7JY3G-02_APHU6, HMP2_J35333_1_NS_T0_B0_0120_ZM7JY3G-04_APHU6, HMP2_J35334_1_NS_T0_B0_0120_ZM7JY3G-05_APHU6, HMP2_J35336_1_NS_T0_B0_0120_ZYU89T9-02_APHU6, HMP2_J35338_1_NS_T0_B0_0120_ZYLJ7R7-4012_ANAY8, HMP2_J35339_1_NS_T0_B0_0120_ZYLJ7R7-4013_ANAY8, HMP2_J35340_1_NS_T0_B0_0120_ZYLJ7R7-4014_ANAY8, HMP2_J35341_1_NS_T0_B0_0120_ZY9XQJP-02_APHU6, HMP2_J35342_1_NS_T0_B0_0120_ZY7IW45-02_APHU6, HMP2_J35343_1_NS_T0_B0_0120_ZY39SN0-01_APHU6, HMP2_J35349_1_NS_T0_B0_0120_ZX52KVK-4012_APHU6, HMP2_J35350_1_NS_T0_B0_0120_ZX52KVK-4013_APHU6, HMP2_J35351_1_NS_T0_B0_0120_ZX52KVK-4014_APHU6, HMP2_J35353_1_NS_T0_B0_0120_ZWHMV5E-01_APHU6, HMP2_J35354_1_NS_T0_B0_0120_ZWCZHHY-01_APHU6, HMP2_J35358_1_NS_T0_B0_0120_ZVGW5FI-02_APHU6, HMP2_J35359_1_NS_T0_B0_0120_ZV14SIB-01_APHU6, HMP2_J35360_1_NS_T0_B0_0120_ZLTUJTN-06_APHU6, HMP2_J35362_1_NS_T0_B0_0120_ZLTUJTN-08_APHU6, HMP2_J35363_1_NS_T0_B0_0120_ZLTUJTN-09_APHU6, HMP2_J35364_1_NS_T0_B0_0120_ZLPZS0H-06_APHU6, HMP2_J35366_1_NS_T0_B0_0120_ZLPZS0H-08_APHU6, HMP2_J35373_1_NS_T0_B0_0120_ZL63I8R-06_APHU6, HMP2_J35374_1_NS_T0_B0_0120_ZL63I8R-07_APHU6, HMP2_J35379_1_NS_T0_B0_0120_ZK4CK8Y-04_APHU6, HMP2_J35380_1_NS_T0_B0_0120_ZK4CK8Y-05_APHU6, HMP2_J35381_1_NS_T0_B0_0120_ZK4CK8Y-06_APHU6, HMP2_J35384_1_NS_T0_B0_0120_ZJTKAE3-01_APHU6, HMP2_J35385_1_NS_T0_B0_0120_ZJTKAE3-02_APHU6, HMP2_J35387_1_NS_T0_B0_0120_ZJTKAE3-04_APHU6, HMP2_J43812_1_ST_T0_B0_0120_ZYLJ7R7-01_ANBEN, HMP2_J43813_1_ST_T0_B0_0120_ZYLJ7R7-02_ANBEN, HMP2_J43817_1_ST_T0_B0_0120_ZYLJ7R7-4012_ANBEN, HMP2_J43818_1_ST_T0_B0_0120_ZYLJ7R7-4013_ANBEN, HMP2_J43827_1_ST_T0_B0_0120_ZVBQY1N-01_ANBEN, HMP2_J43828_1_ST_T0_B0_0120_ZVBQY1N-1014_ANBEN, HMP2_J43829_1_ST_T0_B0_0120_ZVBQY1N-1015_ANBEN, HMP2_J43832_1_ST_T0_B0_0120_ZVBQY1N-1023_ANBEN, HMP2_J43841_1_ST_T0_B0_0120_ZTLUDS8-1014_ANBEN, HMP2_J43842_1_ST_T0_B0_0120_ZTLUDS8-1015_ANBEN, HMP2_J45093_1_ST_T0_B0_0120_ZW61YGW-06_APAJ2, HMP2_J45094_1_ST_T0_B0_0120_ZYXQKWY-06_APAJ2, HMP2_J45097_1_ST_T0_B0_0120_ZV14SIB-05_APAJ2, HMP2_J45098_1_ST_T0_B0_0120_ZUPAQVU-04_APAJ2, HMP2_J45107_1_ST_T0_B0_0120_ZTMFN3O-04_APAJ2, HMP2_J45112_1_ST_T0_B0_0120_ZSUQ08V-04_APAJ2, HMP2_J45113_1_ST_T0_B0_0120_ZSQNUZ5-02_APAJ2, HMP2_J45116_1_ST_T0_B0_0120_ZRB0F6P-6013_APAJ2, HMP2_J45117_1_ST_T0_B0_0120_ZRB0F6P-6014_APAJ2, HMP2_J45120_1_ST_T0_B0_0120_ZR3WH7V-6011_APAJ2, HMP2_J45122_1_ST_T0_B0_0120_ZQNZSQF-02_APAJ2, HMP2_J45123_1_ST_T0_B0_0120_ZQMVU4Q-03_APAJ2, HMP2_J45124_1_ST_T0_B0_0120_ZQFL1P3-6011_APAJ2, HMP2_J45126_1_ST_T0_B0_0120_ZQFL1P3-6013_APAJ2, HMP2_J45127_1_ST_T0_B0_0120_ZQFL1P3-6014_APAJ2, HMP2_J45128_1_ST_T0_B0_0120_ZPXU188-01_APAJ2, HMP2_J45129_1_ST_T0_B0_0120_ZPMBHPS-01_APAJ2, HMP2_J45280_1_ST_T0_B0_0120_ZTL5S2Y-04_APATM, HMP2_J45286_1_ST_T0_B0_0120_ZQMVU4Q-01_APATM, HMP2_J45309_1_ST_T0_B0_0120_ZLPZS0H-05_APB4D, HMP2_J45310_1_ST_T0_B0_0120_ZL63I8R-09_APB4D, HMP2_J45315_1_ST_T0_B0_0120_ZNED4XZ-02_APB4D, HMP2_J45318_1_ST_T0_B0_0120_ZY9XQJP-01_APB4D, HMP2_J45319_1_ST_T0_B0_0120_ZX52KVK-4012_APB4D, HMP2_J45326_1_ST_T0_B0_0120_ZM8YXDM-02_APB4D, HMP2_J45328_1_ST_T0_B0_0120_ZNED4XZ-01_APB4D, HMP2_J45329_1_ST_T0_B0_0120_ZLPZS0H-06_APB4D, HMP2_J45333_1_ST_T0_B0_0120_ZYU89T9-02_APB4D, HMP2_J45334_1_ST_T0_B0_0120_ZXHCGKV-01_APB4D, HMP2_J45336_1_ST_T0_B0_0120_ZNED4XZ-4011_APB4D, HMP2_J45337_1_ST_T0_B0_0120_ZL63I8R-06_APB4D, HMP2_J45339_1_ST_T0_B0_0120_ZYHHR4Z-01_APB4D, HMP2_J45340_1_ST_T0_B0_0120_ZYU89T9-01_APB4D, HMP2_J45347_1_ST_T0_B0_0120_ZXHCGKV-02_APB4D, HMP2_J45354_1_ST_T0_B0_0120_ZWHMV5E-01_APB4D, HMP2_J45357_1_ST_T0_B0_0120_ZUPAQVU-01_APB4D, HMP2_J45362_1_ST_T0_B0_0120_ZY39SN0-3011_APB4D, HMP2_J45371_1_ST_T0_B0_0120_ZX52KVK-01_APB4D, HMP2_J45372_1_ST_T0_B0_0120_ZY39SN0-02_APB4D, HMP2_J45375_1_ST_T0_B0_0120_ZLTUJTN-2011_APB4D, HMP2_J45376_1_ST_T0_B0_0120_ZY39SN0-01_APB4D, HMP2_J45378_1_ST_T0_B0_0120_ZL63I8R-04_APB4D, HMP2_J45380_1_ST_T0_B0_0120_ZV14SIB-01_APB4D, HMP2_J45395_1_ST_T0_B0_0120_ZVC4YUG-01_APB4D, HMP2_J45401_1_ST_T0_B0_0120_ZVC4YUG-02_APB4D, HMP2_J45426_1_ST_T0_B0_0120_ZOBX723-02_APB4D, HMP2_J45429_1_ST_T0_B0_0120_ZVNCGHM-5011_APB4D, HMP2_J45430_1_ST_T0_B0_0120_ZX52KVK-4014_APB4D, HMP2_J45432_1_ST_T0_B0_0120_ZLYEM2C-03_APB4D, HMP2_J45433_1_ST_T0_B0_0120_ZX52KVK-4013_APB4D, HMP2_J45452_1_ST_T0_B0_0120_ZL63I8R-07_APB4D, HMP2_J45455_1_ST_T0_B0_0120_ZLTUJTN-09_APB4D, HMP2_J45463_1_ST_T0_B0_0120_ZLTUJTN-06_APB4D, HMP2_J45471_1_ST_T0_B0_0120_ZVM4N7A-6012-AL1_AWBGH, HMP2_J45477_1_ST_T0_B0_0120_ZSUQ08V-01_APA62, HMP2_J45478_1_ST_T0_B0_0120_ZTL5S2Y-01_APA62, HMP2_J45483_1_ST_T0_B0_0120_ZW61YGW-04_APA62, HMP2_J45484_1_ST_T0_B0_0120_ZLPZS0H-10_APA62, HMP2_J45486_1_ST_T0_B0_0120_ZVM4N7A-6011_AWBGH, HMP2_J45494_1_ST_T0_B0_0120_ZUL3S6O-6014_APA62, HMP2_J45498_1_ST_T0_B0_0120_ZTXWLP3-02_APA62, HMP2_J45502_1_ST_T0_B0_0120_ZTTL3YH-01_APA62, HMP2_J45503_1_ST_T0_B0_0120_ZY39SN0-04_APA62, HMP2_J45505_1_ST_T0_B0_0120_ZUF48YS-02_APA62, HMP2_J45506_1_ST_T0_B0_0120_ZTUO1AO-01_APA62, HMP2_J45512_1_ST_T0_B0_0120_ZVBQY1N-02_APA62, HMP2_J45515_1_ST_T0_B0_0120_ZVM4N7A-6012-AL2_AWBGH, HMP2_J45519_1_ST_T0_B0_0120_ZY9XQJP-05_APA62, HMP2_J45525_1_ST_T0_B0_0120_ZVM4N7A-6013_AWBGH, HMP2_J45540_1_ST_T0_B0_0120_ZTXY83G-02_APA62, HMP2_J45546_1_ST_T0_B0_0120_ZXHCGKV-05_APA62, HMP2_J45554_1_ST_T0_B0_0120_ZWCZHHY-05_APATM, HMP2_J45556_1_ST_T0_B0_0120_ZYXQKWY-04_APA62, HMP2_J45559_1_ST_T0_B0_0120_ZSOZWGV-01_APA62, HMP2_J45562_1_ST_T0_B0_0120_ZTL5S2Y-02_APA62, HMP2_J45563_1_ST_T0_B0_0120_ZV14SIB-04_APA62, HMP2_J45564_1_ST_T0_B0_0120_ZR3WH7V-01_APA62, HMP2_J45565_1_ST_T0_B0_0120_ZSQNUZ5-01_APA62, HMP2_J45566_1_ST_T0_B0_0120_ZRLZ98T-6013_APA62, HMP2_J45569_1_ST_T0_B0_0120_ZRA5YD8-01_APA62, HMP2_J45574_1_ST_T0_B0_0120_ZW61YGW-05_APAJ2, HMP2_J45575_1_ST_T0_B0_0120_ZRLZ98T-6014_APAJ2, HMP2_J45576_1_ST_T0_B0_0120_ZY9XQJP-06_APAJ2, HMP2_J45582_1_ST_T0_B0_0120_ZRLZ98T-6015_APAJ2, HMP2_J45585_1_ST_T0_B0_0120_ZS78KHV-01_APAJ2, HMP2_J45586_1_ST_T0_B0_0120_ZRLZ98T-6011_APAJ2, HMP2_J45587_1_ST_T0_B0_0120_ZQNZSQF-01_APAJ2, HMP2_J45601_1_ST_T0_B0_0120_ZR3WH7V-6015_APAJ2, HMP2_J45602_1_ST_T0_B0_0120_ZUF48YS-01_APAJ2, HMP2_J45606_1_ST_T0_B0_0120_ZV14SIB-02_APAJ2, HMP2_J45613_1_ST_T0_B0_0120_ZTXY83G-01_B86HB, HMP2_J45614_1_ST_T0_B0_0120_ZUL3S6O-6013_APAJ2, HMP2_J45618_1_ST_T0_B0_0120_ZUL3S6O-6012_APAJ2, HMP2_J45621_1_ST_T0_B0_0120_ZUL3S6O-6015_APAJ2, HMP2_J45623_1_ST_T0_B0_0120_ZTMFN3O-01_APAJ2, HMP2_J45627_1_ST_T0_B0_0120_ZM8YXDM-06_APAJ2, HMP2_J45628_1_ST_T0_B0_0120_ZUPAQVU-02_APAJ2, HMP2_J45629_1_ST_T0_B0_0120_ZRB0F6P-6011_APAJ2, HMP2_J45632_1_ST_T0_B0_0120_ZR3WH7V-6014_APAJ2, HMP2_J45638_1_ST_T0_B0_0120_ZTMFN3O-02_APAJ2, HMP2_J45647_1_ST_T0_B0_0120_ZYXQKWY-05_APAJ2, HMP2_J45648_1_ST_T0_B0_0120_ZR3WH7V-6013_APAJ2, HMP2_J45651_1_ST_T0_B0_0120_ZWCZHHY-06_APAJ2, HMP2_J45656_1_ST_T0_B0_0120_ZS78KHV-6013_APAJ2, HMP2_J45658_1_ST_T0_B0_0120_ZS78KHV-6015_APAJ2, HMP2_J66956_1_ST_T0_B0_0120_ZQFL1P3-6015_APATM, HMP2_J66966_1_ST_T0_B0_0120_ZS78KHV-6014_APATM, HMP2_J74151_1_ST_T0_B0_0120_ZYU89T9-2013-AL2_AVTWA, HMP2_J79441_1_NS_T0_B0_0120_ZXHCGKV-07_B9GH6, HMP2_J79441_1_NS_T0_B0_0120_ZXHCGKV-07_B9GWL, HMP2_J79443_1_NS_T0_B0_0120_ZUF48YS-04_B9GH6, HMP2_J79443_1_NS_T0_B0_0120_ZUF48YS-04_B9GWL, HMP2_J79447_1_NS_T0_B0_0120_ZTXWLP3-04_B9GH6, HMP2_J79447_1_NS_T0_B0_0120_ZTXWLP3-04_B9GWL, HMP2_J79450_1_NS_T0_B0_0120_ZLZQMEV-10_B9GH6, HMP2_J79450_1_NS_T0_B0_0120_ZLZQMEV-10_B9GWL, HMP2_J79451_1_NS_T0_B0_0120_ZVC4YUG-03_B9GH6, HMP2_J79451_1_NS_T0_B0_0120_ZVC4YUG-03_B9GWL, HMP2_J79457_1_NS_T0_B0_0120_ZYXQKWY-06_B9GH6, HMP2_J79457_1_NS_T0_B0_0120_ZYXQKWY-06_B9GWL, HMP2_J79459_1_NS_T0_B0_0120_ZQNZSQF-02_B9GH6, HMP2_J79459_1_NS_T0_B0_0120_ZQNZSQF-02_B9GWL, HMP2_J79467_1_NS_T0_B0_0120_ZTMFN3O-04_B9GH6, HMP2_J79467_1_NS_T0_B0_0120_ZTMFN3O-04_B9GWL, HMP2_J79469_1_NS_T0_B0_0120_ZPJT5MY-02_B9GH6, HMP2_J79469_1_NS_T0_B0_0120_ZPJT5MY-02_B9GWL, HMP2_J79481_1_NS_T0_B0_0120_ZTL5S2Y-04_B9GH6, HMP2_J79481_1_NS_T0_B0_0120_ZTL5S2Y-04_B9GWL, HMP2_J79488_1_NS_T0_B0_0120_ZTXY83G-04_B9GH6, HMP2_J79488_1_NS_T0_B0_0120_ZTXY83G-04_B9GWL, HMP2_J79560_1_NS_T0_B0_0120_ZYHHR4Z-10_B9HH8, HMP2_J79586_1_NS_T0_B0_0120_ZPXU188-03_B9GH6, HMP2_J79586_1_NS_T0_B0_0120_ZPXU188-03_B9GWL, HMP2_J79593_1_NS_T0_B0_0120_ZSUQ08V-05_B9GH6, HMP2_J79593_1_NS_T0_B0_0120_ZSUQ08V-05_B9GWL, HMP2_J79621_1_NS_T0_B0_0120_ZVNCGHM-10_B9GH6, HMP2_J79621_1_NS_T0_B0_0120_ZVNCGHM-10_B9GWL, HMP2_J79892_1_ST_T0_B0_0120_ZN9YTFN-10_B64B9, HMP2_J79899_1_ST_T0_B0_0120_ZSUQ08V-05_B64B9, HMP2_J79927_1_ST_T0_B0_0120_ZVNCGHM-10_B64B9, HMP2_J79997_1_ST_T0_B0_0120_ZVBQY1N-03_B86HB, HMP2_J80007_1_ST_T0_B0_0120_ZTXY83G-04_B86HB, HMP2_J80017_1_ST_T0_B0_0120_ZTXWLP3-04_B86HB, HMP2_J80040_1_ST_T0_B0_0120_ZR47VBL-02_B86HB, HMP2_J80041_1_ST_T0_B0_0120_ZTMFN3O-1012_B86HB, HMP2_J80059_1_ST_T0_B0_0120_ZQFL1P3-01_B86HB, HMP2_J80060_1_ST_T0_B0_0120_ZTMFN3O-1015_B86HB, HMP2_J80088_1_ST_T0_B0_0120_ZTL8083-01_B86HB, HMP2_J80094_1_ST_T0_B0_0120_ZMBVNFM-5011_B86HB, HMP2_J80099_1_ST_T0_B0_0120_ZLTUJTN-05_B86HB, HMP2_J80101_1_ST_T0_B0_0120_ZNED4XZ-04_B86HB, HMP2_J80107_1_ST_T0_B0_0120_ZNED4XZ-03_B86HB #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> Calculating shannon diversity... #> Diversity calculations complete. #> Alpha diversity has been adjusted for the following covariates: sample_body_site. #> $shannon  #>"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_boxplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","title":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","text":"function generates boxplot comparing change specified alpha diversity index two time points. change can calculated log absolute value. Several optional arguments available customizing output, strata group variables.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_boxplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","text":"","code":"generate_alpha_change_boxplot_pair(   data.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   change.base = NULL,   alpha.change.func = c(\"log fold change\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_boxplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". Previously named `alpha.index`. depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. subject.var variable metadata table represents subject. time.var variable metadata table represents time. group.var (Optional) variable metadata table represents grouping factor. strata.var (Optional) variable metadata table represents stratification factor. adj.vars character vector variable names used adjustment. change.base base time calculating change alpha diversity. alpha.change.func Function method calculating change alpha diversity   two timepoints. allows flexible options quantify change: - function provided: function applied compare alpha diversity     timepoint t vs baseline t0. function take two arguments     representing alpha diversity values t t0. instance, custom function     calculate percentage change might look like: can pass function value `alpha.change.func`. - string provided, following options supported:     - 'log fold change': Calculates log2 fold change alpha diversity t compared t0.     - 'absolute change': Calculates absolute difference alpha diversity t compared t0.     - value: warning given provided method recognized,       default method ('absolute change') used. - Default behavior (recognized string function provided) compute absolute difference t t0. base.size base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette optional color palette plot. provided, default color palette used. palette vector color codes format accepted ggplot2 (e.g., hexadecimal color codes). number colors palette least large number groups plotted. pdf (Optional) boolean indicating whether save output PDF file. file.ann (Optional) string annotating output file name. pdf.wid width output PDF file. Default 11. pdf.hei height output PDF file. Default 8.5. ... (Optional) Additional arguments pass plotting function.","code":"percentage_change <- function(t, t0) {         return ((t - t0) / t0) * 100       }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_boxplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","text":"boxplot displaying change specified alpha diversity index two time points, stratified specified grouping /strata variables (provided). boxplot saved PDF `pdf` set `TRUE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_boxplot_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","text":"parameter allows flexible quantification alpha diversity   changes baseline. Log-ratio commonly used compare relative   difference. Absolute difference indicates magnitude change.   Custom functions can also supplied calculate change needed. function extracts metadata, calculates alpha diversity specified   indices, compares values two timepoints, applies log2 fold change default,   visualizes change using boxplots optional faceting saving PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_boxplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate boxplot comparing change in specified alpha diversity index — generate_alpha_change_boxplot_pair","text":"","code":"if (FALSE) { library(vegan) data(peerj32.obj) generate_alpha_change_boxplot_pair(   data.obj = peerj32.obj,   alpha.obj = NULL,   alpha.name = c(\"simpson\"),   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   adj.vars = \"sex\",   change.base = \"1\",   alpha.change.func = \"absolute change\",   base.size = 16,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_test_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare alpha diversity between time points — generate_alpha_change_test_pair","title":"Compare alpha diversity between time points — generate_alpha_change_test_pair","text":"function performs paired tests compare alpha diversity metrics two time points microbiome dataset.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_test_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare alpha diversity between time points — generate_alpha_change_test_pair","text":"","code":"generate_alpha_change_test_pair(   data.obj,   alpha.obj = NULL,   alpha.name = NULL,   depth = NULL,   time.var,   subject.var,   group.var,   adj.vars = NULL,   change.base,   alpha.change.func = \"log fold change\" )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_test_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare alpha diversity between time points — generate_alpha_change_test_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". Previously named `alpha.index`. depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. time.var Character string specifying column name metadata containing time values sample. Required identify pairs time points calculate changes . subject.var Character string specifying column name metadata containing unique subject IDs. Required pair samples subject across time points. group.var Character string specifying column name metadata containing grouping categories. Used predictor models test differences changes groups. Optional, can NULL. adj.vars Character vector specifying column names metadata containing covariates adjust linear models. Optional, can left NULL adjustment needed. change.base name baseline time point calculating changes alpha diversity. NULL, first unique time point data used. alpha.change.func Function method calculating change alpha diversity   two timepoints. allows flexible options quantify change: - function provided: function applied compare alpha diversity     timepoint t vs baseline t0. function take two arguments     representing alpha diversity values t t0. instance, custom function     calculate percentage change might look like: can pass function value `alpha.change.func`. - string provided, following options supported:     - 'log fold change': Calculates log2 fold change alpha diversity t compared t0.     - 'absolute change': Calculates absolute difference alpha diversity t compared t0.     - value: warning given provided method recognized,       default method ('absolute change') used. - Default behavior (recognized string function provided) compute absolute difference t t0.","code":"percentage_change <- function(t, t0) {         return ((t - t0) / t0) * 100       }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_test_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare alpha diversity between time points — generate_alpha_change_test_pair","text":"list tables, one alpha diversity metric, summarizing results statistical tests. table contains following columns: Term (name variable model), Estimate (estimated coefficient), Std.Error (standard error coefficient), Statistic (t F statistic), P.Value (p-value test).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_test_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare alpha diversity between time points — generate_alpha_change_test_pair","text":"alpha diversity metric, difference two time points calculated subject. difference used response variable linear model, grouping adjustment variables predictors. linear model coefficients extracted results table. grouping variable multiple levels, ANOVA performed test overall significance. Options provided customize alpha diversity difference calculation (e.g. log-fold change) adjust covariates. summary, provides flexible paired test analyzing changes alpha diversity time, accounting groups covariates. function performs following statistical tests: - alpha diversity metric, linear model fitted difference alpha diversity two time points response, grouping variable adjustment variables predictors. linear model coefficients extracted formatted results table. - grouping variable 2 levels, ANOVA performed linear model obtain overall significance grouping variable. ANOVA results also formatted results table. summary, function provides paired test change alpha diversity two time points, options adjust covariates test differences groups. output contains coefficient tables summarizing results linear models ANOVA tests.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_change_test_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare alpha diversity between time points — generate_alpha_change_test_pair","text":"","code":"if (FALSE) { library(vegan) data(peerj32.obj)  generate_alpha_change_test_pair( data.obj = peerj32.obj, alpha.obj = NULL, time.var = \"time\", alpha.name = c(\"shannon\"), subject.var = \"subject\", group.var = \"sex\", adj.vars = \"group\", change.base = \"2\", alpha.change.func = \"log fold change\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_spaghettiplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an alpha diversity line plot for longitudinal data — generate_alpha_spaghettiplot_long","title":"Generate an alpha diversity line plot for longitudinal data — generate_alpha_spaghettiplot_long","text":"function creates ggplot object alpha diversity (e.g., Shannon index) line plot longitudinal data, showing individual subject trajectories mean trajectory group.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_spaghettiplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an alpha diversity line plot for longitudinal data — generate_alpha_spaghettiplot_long","text":"","code":"generate_alpha_spaghettiplot_long(   data.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\"),   depth = NULL,   subject.var,   time.var,   t0.level,   ts.levels,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   base.size = 16,   palette = NULL,   theme.choice = \"bw\",   custom.theme = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_spaghettiplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an alpha diversity line plot for longitudinal data — generate_alpha_spaghettiplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". Previously named `alpha.index`. depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. subject.var name subject variable. time.var name time variable. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var name group variable. strata.var name strata variable (default NULL). adj.vars character vector variable names used adjustment. base.size base font size plot. palette optional color palette plot. provided, default color palette used. palette vector color codes format accepted ggplot2 (e.g., hexadecimal color codes). number colors palette least large number groups plotted. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. pdf Logical, whether save plot PDF (default TRUE). file.ann annotation added PDF file name (default NULL). pdf.wid width output PDF file. Default 11. pdf.hei height output PDF file. Default 8.5. ... Additional arguments passed ggplot().","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_spaghettiplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an alpha diversity line plot for longitudinal data — generate_alpha_spaghettiplot_long","text":"ggplot object alpha diversity line plot.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_spaghettiplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an alpha diversity line plot for longitudinal data — generate_alpha_spaghettiplot_long","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") T2D.alpha.obj <- mStat_calculate_alpha_diversity(subset_T2D.obj$feature.tab,\"shannon\")  generate_alpha_spaghettiplot_long(   data.obj = subset_T2D.obj,   alpha.obj = T2D.alpha.obj,   alpha.name = c(\"shannon\"),   subject.var = \"subject_id\",   time.var = \"visit_number\",   t0.level = sort(unique(subset_T2D.obj$meta.dat$visit_number))[1],   ts.levels = sort(unique(subset_T2D.obj$meta.dat$visit_number))[-1],   group.var = \"subject_gender\",   strata.var = \"subject_race\",   adj.vars = \"sample_body_site\",   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","title":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","text":"function, part MicrobiomeStat package, implements method performing association test multiple alpha diversity measures longitudinal data. test based mixed-effects model, robust efficient previous implementations. function especially suitable microbiome studies involving repeated measurements time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","text":"","code":"generate_alpha_test_long(   data.obj,   alpha.obj = NULL,   time.var,   t0.level,   ts.levels,   alpha.name,   subject.var,   group.var,   adj.vars )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","text":"data.obj list object includes feature.tab (OTU table taxa rows samples columns) meta.dat (metadata table samples rows variables columns). alpha.obj pre-calculated alpha diversity object. NULL, function calculate alpha diversity based data.obj. time.var string representing time variable's name metadata. default NULL. t0.level level time.var considered reference level longitudinal study. Typically first time point. ts.levels levels time.var considered analysis, excluding reference level. alpha.name character vector names alpha diversity indices compute. Options include: \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". subject.var string indicating variable subject identifiers. group.var string representing group variable's name metadata. adj.vars character vector names adjustment variables metadata.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","text":"list containing association tests alpha diversity index.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","text":"mixed-effects model includes temporal component, accounting correlation among repeated measurements subject time. function also accepts additional adjustment variables greater flexibility modeling. output list coefficient tables, one alpha diversity index. table includes term, estimate, standard error, t value, p-value fixed effect model.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Alpha Diversity Association Test in MicrobiomeStat — generate_alpha_test_long","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") alpha_test_results <- generate_alpha_test_long( data.obj = subset_T2D.obj, alpha.obj = NULL, time.var = \"visit_number\", t0.level = sort(unique(subset_T2D.obj$meta.dat$visit_number))[1], ts.levels = sort(unique(subset_T2D.obj$meta.dat$visit_number))[2:6], alpha.name = c(\"shannon\", \"simpson\"), subject.var = \"subject_id\", group.var = \"subject_race\", adj.vars = \"subject_gender\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha Diversity Association Test — generate_alpha_test_pair","title":"Alpha Diversity Association Test — generate_alpha_test_pair","text":"function implements association test multiple alpha diversity measures. test based mixed-effects model fitted `lmer` function `lmerTest` package. function accepts data object input returns list tests, one alpha diversity index.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha Diversity Association Test — generate_alpha_test_pair","text":"","code":"generate_alpha_test_pair(   data.obj,   alpha.obj = NULL,   alpha.name = NULL,   depth = NULL,   time.var,   subject.var,   group.var,   adj.vars )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha Diversity Association Test — generate_alpha_test_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name character vector names alpha diversity indices compute. Options include: \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. time.var string representing time variable's name metadata. default NULL. subject.var string specifying subject variable column metadata. group.var string representing group variable's name metadata. adj.vars character vector names adjustment variables metadata.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha Diversity Association Test — generate_alpha_test_pair","text":"list containing association tests alpha diversity index.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha Diversity Association Test — generate_alpha_test_pair","text":"mixed-effects model includes time variable, group variable, additional adjustment variables fixed effects, subject variable random effect. output list coefficient tables, one alpha diversity index. table includes term, estimate, standard error, t value, p-value fixed effect model.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha Diversity Association Test — generate_alpha_test_pair","text":"","code":"data(peerj32.obj) alpha_test_results <- generate_alpha_test_pair( data.obj = peerj32.obj, alpha.obj = NULL, time.var = \"time\", alpha.name = c(\"shannon\"), subject.var = \"subject\", group.var = \"group\", adj.vars = \"sex\" ) #> Diversity analysis needs rarefaction! Call 'mStat_rarefy_data' to rarefy the data! #> No depth specified, using the smallest column sum:  21230 #> Data has been subsetted based on the provided samIDs. #> Updated metadata to match the subsetted data. #> The following samples were excluded:  #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> Calculating shannon diversity... #> Diversity calculations complete. #> Complex model failed. Trying a simpler model..."},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform alpha diversity association tests using linear models — generate_alpha_test_single","title":"Perform alpha diversity association tests using linear models — generate_alpha_test_single","text":"function conducts association tests multiple alpha diversity indices using linear model analyses. can applied cross-sectional data, single time point longitudinal paired data. takes data object input returns list association tests specified alpha diversity index.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform alpha diversity association tests using linear models — generate_alpha_test_single","text":"","code":"generate_alpha_test_single(   data.obj,   alpha.obj = NULL,   alpha.name = NULL,   depth = NULL,   time.var = NULL,   t.level = NULL,   group.var,   adj.vars )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform alpha diversity association tests using linear models — generate_alpha_test_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name character vector containing names alpha diversity indices calculate. Possible values : \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. time.var Character string specifying column name metadata containing time variable. Used subset single time point provided. Default NULL subset data. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var Character string specifying column name metadata containing grouping variable. Used predictor linear models. adj.vars Character vector specifying column names metadata containing variables adjust linear models.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform alpha diversity association tests using linear models — generate_alpha_test_single","text":"list containing association tests alpha diversity index.         element list corresponds different alpha diversity index,         contains dataframe linear model's coefficients, standard errors, t values, p values.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_test_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform alpha diversity association tests using linear models — generate_alpha_test_single","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") generate_alpha_test_single(data.obj = subset_T2D.obj,                            time.var = \"visit_number\",                            t.level = \"   4\",                            alpha.name = c(\"shannon\", \"observed_species\"),                            group.var = \"subject_race\",                            adj.vars = \"subject_gender\")  data(\"peerj32.obj\") generate_alpha_test_single(data.obj = peerj32.obj,                            time.var = \"time\",                            t.level = \"1\",                            alpha.name = c(\"shannon\", \"observed_species\"),                            group.var = \"group\",                            adj.vars = \"sex\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_trend_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Alpha Diversity Trend Test in MicrobiomeStat — generate_alpha_trend_test_long","title":"Longitudinal Alpha Diversity Trend Test in MicrobiomeStat — generate_alpha_trend_test_long","text":"function `generate_alpha_trend_test_long`, part MicrobiomeStat package, performs trend test longitudinal alpha diversity data using linear mixed-effects model. model used test association alpha diversity numeric time variable, adjusting potential confounding variables. accepts alpha diversity data related parameters conduct test.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_trend_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Alpha Diversity Trend Test in MicrobiomeStat — generate_alpha_trend_test_long","text":"","code":"generate_alpha_trend_test_long(   data.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   time.var,   subject.var,   group.var = NULL,   adj.vars = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_trend_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Alpha Diversity Trend Test in MicrobiomeStat — generate_alpha_trend_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name string name alpha diversity index compute. Options include: \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. time.var Character string specifying column name metadata containing numeric time variable. subject.var Character string specifying column name metadata containing unique subject IDs. group.var Character string specifying column name metadata containing grouping categories. adj.vars Character vector specifying column names metadata containing covariates adjust .","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_trend_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Alpha Diversity Trend Test in MicrobiomeStat — generate_alpha_trend_test_long","text":"list object containing results trend test alpha diversity index specified `alpha.name`. element list contains summary table trend test results specific alpha diversity index.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_trend_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Alpha Diversity Trend Test in MicrobiomeStat — generate_alpha_trend_test_long","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") generate_alpha_trend_test_long( data.obj = subset_T2D.obj, alpha.name = c(\"shannon\",\"observed_species\"), time.var = \"visit_number_num\", subject.var = \"subject_id\", group.var = \"subject_race\", adj.vars = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_volatility_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","title":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","text":"function, part MicrobiomeStat package, calculates volatility alpha diversity measures longitudinal data tests association volatility group variable. Volatility calculated mean absolute differences consecutive alpha diversity measures, normalized time difference (mean(abs(alpha_j - alpha_j-1) / (t_j - t_j-1))).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_volatility_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","text":"","code":"generate_alpha_volatility_test_long(   data.obj,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   time.var,   subject.var,   group.var,   adj.vars = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_volatility_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. alpha.obj object containing precomputed alpha diversity indices, typically calculated function `mStat_calculate_alpha_diversity`. NULL (default), alpha diversity calculated data.obj using `mStat_calculate_alpha_diversity`. alpha.name string name alpha diversity index compute. Options include: \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. time.var string representing time variable's name metadata. default NULL. subject.var string indicating variable subject identifiers. group.var string representing group variable's name metadata. adj.vars character vector names adjustment variables metadata, used fitting linear model residuals.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_volatility_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","text":"summary object containing results linear model testing association alpha diversity volatility group variable.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_volatility_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","text":"function first obtains residuals fitting linear model alpha diversity response adjustment variables predictors. calculates volatility subject tests association group variable using linear model. group variable specified `group.var` two levels, ANOVA performed test association alpha diversity volatility group variable.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_alpha_volatility_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Alpha Diversity Volatility Test in MicrobiomeStat — generate_alpha_volatility_test_long","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") generate_alpha_volatility_test_long( data.obj = subset_T2D.obj, alpha.obj = NULL, alpha.name = c(\"shannon\",\"observed_species\"), time.var = \"visit_number_num\", subject.var = \"subject_id\", group.var = \"subject_race\", adj.vars = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_boxplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","title":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","text":"function generates boxplots visualize changes beta diversity two time points, different groups strata.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_boxplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","text":"","code":"generate_beta_change_boxplot_pair(   data.obj = NULL,   dist.obj = NULL,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   change.base,   dist.name = c(\"BC\", \"Jaccard\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_boxplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. subject.var string specifying name subject variable time.var string specifying name time variable group.var string specifying name group variable NULL (default) strata.var string specifying name strata variable NULL (default) adj.vars string specifying name adjustment variable NULL (default) change.base string numeric value specifying first time point used computing beta diversity change dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). base.size (Optional) Base font size plot (default 16). theme.choice Character string specifying ggplot2 theme use. Options include: - \"prism\": ggprism::theme_prism() - \"classic\": theme_classic() - \"gray\": theme_gray() - \"bw\": theme_bw() Can also take custom ggplot2 theme object. Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette (Optional) palette function character vector colors plot. pdf logical value indicating whether save plot PDF file. Default TRUE file.ann character string specifying custom annotation PDF file name NULL (default) pdf.wid (Optional) width PDF file `pdf` set `TRUE` (default 11). pdf.hei (Optional) height PDF file `pdf` set `TRUE` (default 8.5). ... Additional parameters passed ggsave()","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_boxplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","text":"named list ggplot objects visualizing beta diversity change. list contains one plot distance metric specified dist.name. plot shows boxplots beta diversity changes, samples faceted group_var strata_var variables provided.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_boxplot_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","text":"subject, calculates beta diversity (distance) sample baseline time point sample later time point. within-subject change beta diversity time used outcome. Boxplots generated compare distribution beta diversity changes across groups strata. Violin plots also included show underlying distribution. Adjustment covariates supported using adjusted distances.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_boxplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare beta diversity between time points — generate_beta_change_boxplot_pair","text":"","code":"if (FALSE) { # Load required libraries and example data library(vegan) data(peerj32.obj)  dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = \"BC\") generate_beta_change_boxplot_pair(   data.obj = peerj32.obj,   dist.obj = NULL,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   adj.vars = \"sex\",   change.base = \"1\",   dist.name = c('BC'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_spaghettiplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","title":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","text":"function generates spaghetti plot visualizing change beta diversity time different groups strata longitudinal data. Optionally, user can specify whether save plot PDF file. Change defined distance samples two time points.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_spaghettiplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","text":"","code":"generate_beta_change_spaghettiplot_long(   data.obj,   dist.obj = NULL,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_spaghettiplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. subject.var variable metadata table represents subject. time.var variable metadata table represents time. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var (Optional) variable metadata table represents grouping factor. strata.var (Optional) variable metadata table represents stratification factor. adj.vars character vector containing names columns data.obj$meta.dat include covariates PERMANOVA analysis. covariates needed, use NULL (default). dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. base.size (Optional) Base font size plot (default 16). theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette (Optional) palette function character vector colors plot. pdf (Optional) boolean indicating whether save output PDF file (default TRUE). file.ann (Optional) string annotating output file name. pdf.wid (Optional) width PDF file `pdf` set `TRUE` (default 11). pdf.hei (Optional) height PDF file `pdf` set `TRUE` (default 8.5). ... (Optional) Additional arguments pass plotting function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_spaghettiplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","text":"spaghetti plot displaying beta diversity change time, stratified specified grouping /strata variables (provided). plot saved PDF `pdf` set `TRUE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_spaghettiplot_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","text":"function calculates beta diversity distances   pairs samples using specified distance metric (dist_name).   change beta diversity subject defined   distance baseline sample (t0_level) sample   follow-timepoint (ts_levels). changes visualized   using spaghetti lines connecting distances time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_spaghettiplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate beta diversity change spaghetti plot for longitudinal data — generate_beta_change_spaghettiplot_long","text":"","code":"if (FALSE) { data(ecam.obj) generate_beta_change_spaghettiplot_long(   data.obj = ecam.obj,   dist.obj = NULL,   subject.var = \"studyid\",   time.var = \"month\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   strata.var = \"sex\",   adj.vars = NULL,   dist.name = c(\"BC\"),   base.size = 20,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_test_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","title":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","text":"function calculates beta diversity measures time points, performs linear modeling, generates results.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_test_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","text":"","code":"generate_beta_change_test_pair(   data.obj,   dist.obj = NULL,   time.var = NULL,   subject.var,   group.var,   adj.vars,   change.base = NULL,   dist.name = c(\"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\") )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_test_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. time.var name column metadata containing time variable. column time points sample. Required identify pairs samples subject across time. subject.var name column metadata containing subject IDs. uniquely identify subject study. Required identify samples belong subject. group.var name column metadata containing grouping variable use linear modeling. grouping variable used predictor linear models beta diversity change. Optional. adj.vars Vector names additional variables metadata included covariates linear models. Can empty. change.base baseline time point value time variable used reference calculating beta diversity change. Required time.var contains multiple time points. NULL, first time point used change.base automatically. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_test_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","text":"named list containing linear modeling results beta diversity metric. list element corresponds one distance metrics specified dist.name. contains coefficient table fitting linear model beta diversity change response group_var adj_vars predictors. group_var multiple levels, ANOVA results also included coefficients. Column names include: Term, Estimate, Std.Error, Statistic, P.Value","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_test_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","text":"subject, calculates change beta diversity baseline time point later time point. within-subject change used outcome linear models. Adjustment covariates supported. ANOVA coefficient tables provided grouping variable specified.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_change_test_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and analyze changes in beta diversity — generate_beta_change_test_pair","text":"","code":"if (FALSE) {  # Load packages library(vegan)  # Load data data(peerj32.obj)  # Generate beta diversity test generate_beta_change_test_pair(   data.obj = peerj32.obj,   dist.obj = NULL,   time.var = \"time\",   subject.var = \"subject\",   group.var = \"group\",   adj.vars = NULL,   change.base = \"1\",   dist.name = c('BC', 'Jaccard') )  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Beta Ordination Plots — generate_beta_ordination_long","title":"Generate Beta Ordination Plots — generate_beta_ordination_long","text":"function generates beta ordination plots using specified distance measure. plots can stratified given variable color shape aesthetics can mapped groups time variables, respectively. function also supports saving plots PDF files.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Beta Ordination Plots — generate_beta_ordination_long","text":"","code":"generate_beta_ordination_long(   data.obj = NULL,   dist.obj = NULL,   pc.obj = NULL,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Beta Ordination Plots — generate_beta_ordination_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. subject.var Character string specifying column name metadata containing subject IDs. uniquely identify subject study. Required connecting samples subject. time.var Character string specifying column name metadata containing time variable. contain time points sample. Required ordering connecting samples subject time. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var Character string specifying column name metadata containing grouping variable. mapped color aesthetic plot. Optional, can NULL. strata.var Character string specifying column name metadata containing stratification variable. used nested faceting plots. Optional, can NULL. adj.vars Character vector specifying column names metadata include covariates multivariate adjustment distance matrix ordination. Can empty NULL adjustment needed. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. base.size numeric value specifying base size plot text. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Character vector specifying colors use mapping groups color aesthetic. length number groups. NULL, default palette used. Colors mapped groups based order group levels. pdf logical value indicating whether save plots PDF files. Defaults TRUE. file.ann character string specifying annotation add file names saved plots. pdf.wid numeric value specifying width saved PDF files. pdf.hei numeric value specifying height saved PDF files. ... arguments passed underlying functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Beta Ordination Plots — generate_beta_ordination_long","text":"list ggplot2 objects representing beta ordination plots.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Beta Ordination Plots — generate_beta_ordination_long","text":"","code":"if (FALSE) { data(subset_T2D.obj)  generate_beta_ordination_long(   data.obj = subset_T2D.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"subject_race\",   strata.var = NULL,   adj.vars = NULL,   dist.name = 'BC',   base.size = 12,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  data(ecam.obj)  generate_beta_ordination_long(   data.obj = ecam.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"subject.id\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   dist.name = 'BC',   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","title":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","text":"function, part MicrobiomeStat package, generates Principle Coordinate Analysis (PCoA) plots using provided distance object. specifically designed analysis microbiome data. function tailored paired samples, longitudinal studies experiments multiple time points.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","text":"","code":"generate_beta_ordination_pair(   data.obj = NULL,   dist.obj = NULL,   pc.obj = NULL,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\"),   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. subject.var variable metadata table represents subject. time.var variable metadata table represents time. group.var (Optional) variable metadata table represents grouping factor. strata.var (Optional) variable metadata table represents stratification factor. adj.vars character vector containing names columns data.obj$meta.dat include covariates PERMANOVA analysis. covariates needed, use NULL (default). dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). base.size (Optional) Base font size plot (default 16). theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette (Optional) palette function character vector colors plot. pdf (Optional) boolean indicating whether save output PDF file (default TRUE). file.ann (Optional) string annotating output file name. pdf.wid (Optional) width PDF file `pdf` set `TRUE` (default 11). pdf.hei (Optional) height PDF file `pdf` set `TRUE` (default 8.5). ... (Optional) Additional arguments pass plotting function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","text":"PCoA plot displaying beta diversity ordination, stratified specified grouping /strata variables (provided). plot saved PDF `pdf` set `TRUE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","text":"function flexible allows various modifications, including choice distance measure stratification factor, providing comprehensive tool microbiome beta diversity exploration. integrates well MicrobiomeStat functions takes output input.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate beta ordination plots for paired samples — generate_beta_ordination_pair","text":"","code":"if (FALSE) {  # Load necessary libraries and data library(vegan) data(peerj32.obj)  # Perform beta ordination pair analysis using `generate_beta_ordination_pair` generate_beta_ordination_pair(   data.obj      = peerj32.obj,   dist.obj      = NULL,   pc.obj        = NULL,   subject.var   = \"subject\",   time.var      = \"time\",   group.var     = \"group\",   strata.var    = \"sex\",   adj.vars      = \"sex\",   dist.name     = c(\"BC\"),   base.size     = 16,   theme.choice  = \"bw\",   custom.theme  = NULL,   palette       = NULL,   pdf           = TRUE,   file.ann      = NULL,   pdf.wid       = 11,   pdf.hei       = 8.5 )  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"function generates ordination plots (Principal Component Analysis) based beta-diversity distances. also allows stratification grouping samples, calculation distances specific time point.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"","code":"generate_beta_ordination_single(   data.obj,   subject.var,   time.var = NULL,   t.level = NULL,   group.var = NULL,   adj.vars = NULL,   strata.var = NULL,   dist.obj = NULL,   dist.name = c(\"BC\", \"Jaccard\"),   pc.obj = NULL,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var String. Variable used subject. time.var String. Variable used time. Default NULL. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var String. Variable used grouping. Default NULL. adj.vars character vector variable names used adjustment. strata.var String. Variable used stratification. Default NULL. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. base.size Numeric. Base size plot elements. Default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette custom color palette used. Default NULL. pdf Logical. TRUE, plots saved PDF files. Default TRUE. file.ann File annotation. Default NULL. pdf.wid Width PDF. Default 11. pdf.hei Height PDF. Default 8.5. ... Additional arguments passed.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"PCoA plot displaying beta diversity ordination, stratified specified grouping /strata variables (provided). plot saved PDF `pdf` set `TRUE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"function flexible allows various modifications, including choice distance measure stratification factor, providing comprehensive tool microbiome beta diversity exploration. integrates well MicrobiomeStat functions takes output input.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"Caffery Yang cafferychen7850@gmail.com","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_ordination_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Beta Diversity Ordination Plot — generate_beta_ordination_single","text":"","code":"if (FALSE) { library(aplot) data(peerj32.obj) dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = c('BC', 'Jaccard')) pc.obj <- mStat_calculate_PC(dist.obj, method = c('mds'), k = 2, dist.name = c('BC','Jaccard')) generate_beta_ordination_single(   data.obj = peerj32.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"subject\",   time.var = \"time\",   t.level = \"2\",   group.var = \"group\",   strata.var = \"sex\",   adj.vars = \"sex\",   dist.name = c(\"BC\"),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  data(\"subset_T2D.obj\") dist.obj <- mStat_calculate_beta_diversity(subset_T2D.obj, dist.name = c('BC', 'Jaccard')) pc.obj <- mStat_calculate_PC(dist.obj, method = c('mds'), k = 2, dist.name = c('BC','Jaccard')) generate_beta_ordination_single(   data.obj = subset_T2D.obj,   dist.obj = dist.obj,   pc.obj = pc.obj,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t.level = \"1\",   group.var = \"subject_race\",   strata.var = \"subject_gender\",   adj.vars = \"sample_body_site\",   dist.name = c(\"BC\", 'Jaccard'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_boxplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Boxplots for Beta Diversity Metrics — generate_beta_pc_boxplot_long","title":"Create Boxplots for Beta Diversity Metrics — generate_beta_pc_boxplot_long","text":"function generates boxplots beta diversity metrics different groups time. allows use Principal Coordinates Analysis (PCoA), non-metric multidimensional scaling (NMDS), t-SNE, UMAP dimension reduction. Default method dimension reduction PCoA.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_boxplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Boxplots for Beta Diversity Metrics — generate_beta_pc_boxplot_long","text":"","code":"generate_beta_pc_boxplot_long(   data.obj = NULL,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_boxplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Boxplots for Beta Diversity Metrics — generate_beta_pc_boxplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. pc.ind Numeric vector indicating Principal Coordinates plot. subject.var Character string indicating variable subject identifiers. time.var Character string indicating variable time points. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var Character string indicating variable group identifiers. strata.var Character string indicating variable stratum identifiers. adj.vars character vector containing names columns data.obj$meta.dat include covariates PERMANOVA analysis. covariates needed, use NULL (default). dist.name Vector character strings indicating distance measures include plot. base.size Numeric value indicating base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Vector colors plot. pdf Logical indicating whether save plot PDF file. file.ann Optional character string append file name. pdf.wid Numeric value indicating width PDF file. pdf.hei Numeric value indicating height PDF file. ... Additional arguments passed plotting function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_boxplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Boxplots for Beta Diversity Metrics — generate_beta_pc_boxplot_long","text":"list ggplot objects distance measure Principal Coordinate.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_boxplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Boxplots for Beta Diversity Metrics — generate_beta_pc_boxplot_long","text":"","code":"if (FALSE) { # Example with ecam.obj dataset data(ecam.obj) generate_beta_pc_boxplot_long(   data.obj = ecam.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"studyid\",   time.var = \"month\",   t0.level = \"0\",   ts.levels = as.character(sort(as.numeric(unique(ecam.obj$meta.dat$month))))[2:4],   group.var = \"diet\",   strata.var = \"delivery\",   adj.vars = NULL,   dist.name = c('BC'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  # Example with peerj32.obj dataset data(peerj32.obj) generate_beta_pc_boxplot_long(   data.obj = peerj32.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"subject\",   time.var = \"time\",   t0.level = \"1\",   ts.levels = \"2\",   group.var = \"group\",   strata.var = \"sex\",   adj.vars = NULL,   dist.name = c('BC'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_change_boxplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","title":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","text":"function generates series boxplots visualizing changes beta diversity PCoA/PCA coordinates time. designed work longitudinal microbiome composition data across multiple time points. primary output boxplots showing distributions coordinate changes two user-specified time points. changes can stratified groups. Violin plots overlaid show density distributions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_change_boxplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","text":"","code":"generate_beta_pc_change_boxplot_pair(   data.obj = NULL,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   change.base = NULL,   change.func = \"absolute change\",   dist.name = c(\"BC\", \"Jaccard\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_change_boxplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. pc.ind numeric vector specifying principal coordinate (PC) axes use plotting. refers PC axes dimension reduction method specified pc.obj calculated default. example, c(1,2) generate plots PC1 PC2. Default c(1,2) plot first two PCs. subject.var Character string specifying column name metadata containing unique subject IDs. Required connect samples subject across timepoints. time.var Character string specifying column name metadata containing time values sample. Required identify pairs timepoints calculate changes . group.var Character string specifying column metadata containing grouping categories. Used stratification plots. Optional, can NULL. strata.var Character string specifying column metadata containing stratification categories. Used nested faceting plots. Optional, can NULL. adj.vars Character vector specifying columns metadata containing covariates adjust distance matrix calculation. Optional, can NULL. change.base baseline time point value time variable used reference calculating changes. Required time.var contains multiple time points. Changes calculated baseline time point later time point(s). NULL, first time point used change.base automatically. change.func function string specifying calculate changes time points. function provided, take two arguments \"value_time_2\" \"value_time_1\" representing PC values two time points. function return change value. string, currently \"absolute change\" supported, calculates simple differences time points. options added future needed. Default \"absolute change\". dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). base.size numeric value base size plot. Default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Character vector specifying colors use mapping groups color aesthetic. length number groups. NULL, default palette used. Colors mapped groups based order group levels. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF. Default 11. pdf.hei numeric value specifying height PDF. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_change_boxplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","text":"named list ggplot objects, one element per combination pc.ind dist.name. element contains plot PC index distance metric.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_change_boxplot_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","text":"function generates boxplots visualizing changes beta diversity PCoA coordinates time. designed longitudinal microbiome data multiple time points. primary output boxplot showing distributions changes PCoA coordinates two user-specified time points, optionally stratified groups. Violin plots also overlaid show density. function offers flexibility control: - Distance metrics used (via dist.name argument) - PCoA axes plot (via pc.ind argument) - Subject variable pairing time points (subject.var) - Time points compare (time.var change.base) - Stratification variable(s) (group.var strata.var) - Calculation change time points (change.func argument) - Plot aesthetics like theme, color, file saving, etc. large datasets, data subset two time points interest plotting. Jitter added handle overlapping points. steps help generating readable plots. output plot list allows downstream iteration multiple PC axes /distance metrics. Plots can accessed via e.g. plotlist$BC_PC1 BC dissimilarity PC1 coordinates.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_change_boxplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Beta Diversity Changes Over Time — generate_beta_pc_change_boxplot_pair","text":"","code":"if (FALSE) { library(vegan) library(ggh4x) data(peerj32.obj)  generate_beta_pc_change_boxplot_pair(   data.obj = peerj32.obj,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   change.base = \"1\",   change.func = \"absolute change\",   dist.name = c('BC'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_spaghettiplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate spaghetti plots of beta diversity over time — generate_beta_pc_spaghettiplot_long","title":"Generate spaghetti plots of beta diversity over time — generate_beta_pc_spaghettiplot_long","text":"function generates spaghetti plots beta diversity metrics time longitudinal microbiome studies. allows plotting principal coordinates different dimension reduction methods PCoA, NMDS, tSNE UMAP. default uses PCoA dimension reduction.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_spaghettiplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate spaghetti plots of beta diversity over time — generate_beta_pc_spaghettiplot_long","text":"","code":"generate_beta_pc_spaghettiplot_long(   data.obj = NULL,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_spaghettiplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate spaghetti plots of beta diversity over time — generate_beta_pc_spaghettiplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. pc.ind Numeric vector indicating Principal Coordinates plot. subject.var Character string indicating variable subject identifiers. time.var Character string indicating variable time points. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var Character string indicating variable group identifiers. strata.var Character string indicating variable stratum identifiers. adj.vars character vector containing names columns data.obj$meta.dat include covariates PERMANOVA analysis. covariates needed, use NULL (default). dist.name Vector character strings indicating distance measures include plot. base.size Numeric value indicating base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Vector colors plot. pdf Logical indicating whether save plot PDF file. file.ann Optional character string append file name. pdf.wid Numeric value indicating width PDF file. pdf.hei Numeric value indicating height PDF file. ... Additional arguments passed plotting function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_spaghettiplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate spaghetti plots of beta diversity over time — generate_beta_pc_spaghettiplot_long","text":"list ggplot objects distance measure Principal Coordinate.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_spaghettiplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate spaghetti plots of beta diversity over time — generate_beta_pc_spaghettiplot_long","text":"","code":"if (FALSE) {  # Load required libraries and data library(vegan)  # Example with ecam.obj dataset data(ecam.obj) generate_beta_pc_spaghettiplot_long(   data.obj = ecam.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"studyid\",   time.var = \"month\",   t0.level = \"0\",   ts.levels = as.character(sort(as.numeric(unique(ecam.obj$meta.dat$month))))[2:16],   group.var = \"diet\",   strata.var = \"delivery\",   adj.vars = NULL,   dist.name = c('BC', 'Jaccard'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  # Example with peerj32.obj dataset data(peerj32.obj) generate_beta_pc_spaghettiplot_long(   data.obj = peerj32.obj,   dist.obj = NULL,   pc.obj = NULL,   subject.var = \"subject\",   time.var = \"time\",   t0.level = \"1\",   ts.levels = \"2\",   group.var = \"group\",   strata.var = \"sex\",   adj.vars = NULL,   dist.name = c('BC'),   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_trend_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","title":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","text":"Performs linear trend tests selected Principal Coordinates (PCs) beta diversity distance matrices time, different groups. Allows using PCoA, NMDS, t-SNE, UMAP dimension reduction, PCoA default.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_trend_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","text":"","code":"generate_beta_pc_trend_test_long(   data.obj = NULL,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var,   time.var,   group.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_trend_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. pc.ind Numeric vector specifying principal coordinate (PC) axes include trend test, e.g. c(1,2) PC1 PC2. exceed number PCs calculated pc.obj. subject.var Character string specifying column name metadata containing unique subject IDs. uniquely identify subject study. Required fit mixed effects models time. time.var Character string specifying column metadata containing numeric time variable. contain ordered time points trend test. Required. group.var Character string specifying column metadata containing grouping variable. Separate models fitted group. Optional, can left NULL. adj.vars Character vector specifying columns metadata containing covariates adjust distance matrices prior ordination. Optional, can left NULL. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). ... Additional named arguments pass lmer(): control: Control parameters lmer. weights: Prior weights residuals.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_trend_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","text":"nested list distance > PC. element contains: coef: Data frame coefficients mixed effects model. model: Fitted lmer model object.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_trend_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","text":"function allows performing linear trend tests PCs beta diversity distances time, across groups, adjustments. checks pre-calculated distances PCs, generating data needed. Sufficient PCs calculated cover indices specified. distance, PCs extracted selected indices. metadata joined formatted mixed effects modeling time numeric. model formula created using response, time, group, subject variables. Mixed effects models fitted lmer() coefficients extracted.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_trend_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trend Test on Principal Coordinates of Beta Diversity Metrics Over Time — generate_beta_pc_trend_test_long","text":"","code":"if (FALSE) { library(vegan) data(\"ecam.obj\") generate_beta_pc_trend_test_long(   data.obj = ecam.obj,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var = \"studyid\",   time.var = \"month\",   group.var = \"diet\",   adj.vars = \"delivery\",   dist.name = c('BC') )  data(\"subset_T2D.obj\") generate_beta_pc_trend_test_long(   data.obj = subset_T2D.obj,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   group.var = \"subject_race\",   adj.vars = \"subject_gender\",   dist.name = c('BC') ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_volatility_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Beta PC Volatility Test in Long Format — generate_beta_pc_volatility_test_long","title":"Generate Beta PC Volatility Test in Long Format — generate_beta_pc_volatility_test_long","text":"function computes volatility test principal coordinates (PC) beta diversity. allows variety distance measures optional adjustments. function relies numeric time variable.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_volatility_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Beta PC Volatility Test in Long Format — generate_beta_pc_volatility_test_long","text":"","code":"generate_beta_pc_volatility_test_long(   data.obj,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var,   time.var,   group.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_volatility_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Beta PC Volatility Test in Long Format — generate_beta_pc_volatility_test_long","text":"data.obj list object format specific MicrobiomeStat, containing components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). dist.obj provided, data.obj required. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. pc.ind Numeric vector indicating principal coordinate (PC) axes use volatility test, e.g. c(1,2) PC1 PC2. Defaults c(1,2). subject.var Character string specifying column metadata containing unique subject IDs. uniquely identify subject study. Required compute volatility within subjects. time.var Character string specifying column metadata containing time variable. numeric successive time points subject. Required compute volatility time. group.var (Optional) Character string specifying column metadata containing grouping variable. grouping variable used test differences volatility groups. Can left NULL. adj.vars (Optional) Character vector specifying columns metadata containing variables adjust volatility models. Can left NULL. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). ... (Optional) Additional arguments pass internal functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_volatility_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Beta PC Volatility Test in Long Format — generate_beta_pc_volatility_test_long","text":"list results distance measure selected Principal Coordinate, including coefficients mixed-effects models.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_pc_volatility_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Beta PC Volatility Test in Long Format — generate_beta_pc_volatility_test_long","text":"","code":"if (FALSE) { library(vegan) data(ecam.obj) generate_beta_pc_volatility_test_long(   data.obj = ecam.obj,   dist.obj = NULL,   pc.obj = NULL,   pc.ind = c(1, 2),   subject.var = \"studyid\",   time.var = \"month\",   group.var = \"diet\",   adj.vars = NULL,   dist.name = c('BC') ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform longitudinal beta diversity tests using PERMANOVA — generate_beta_test_long","title":"Perform longitudinal beta diversity tests using PERMANOVA — generate_beta_test_long","text":"function, part MicrobiomeStat package, calculates various beta diversity indices microbiome dataset. performs longitudinal PERMANOVA tests indices assess effect grouping variable additional covariates beta diversity. function returns PERMANOVA results specified beta diversity indices.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform longitudinal beta diversity tests using PERMANOVA — generate_beta_test_long","text":"","code":"generate_beta_test_long(   data.obj,   dist.obj = NULL,   time.var,   t0.level,   ts.levels,   subject.var,   group.var,   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\") )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform longitudinal beta diversity tests using PERMANOVA — generate_beta_test_long","text":"data.obj list object format specific MicrobiomeStat, containing microbiome data metadata. dist.obj distance object, NULL calculated based data.obj dist.name. distance object dissimilarity matrix object can coerced dissimilarity matrix. time.var name column data.obj$meta.dat contains time variable subsetting data, applicable. character string representing column name. t0.level character numeric value indicating baseline level time variable subsetting data. ts.levels character numeric vector indicating subsequent time points interest subsetting data. subject.var name column data.obj$meta.dat contains subject variable PERMANOVA tests. character string representing column name. group.var name column data.obj$meta.dat contains grouping variable PERMANOVA tests. character string representing column name. adj.vars character vector containing names columns data.obj$meta.dat include covariates PERMANOVA analysis. covariates needed, use NULL (default). dist.name character vector specifying beta diversity indices calculate test (e.g., 'BC', 'Jaccard', 'UniFrac', 'GUniFrac', 'WUniFrac', 'JS'). Default c('BC', 'Jaccard', 'UniFrac', 'GUniFrac', 'WUniFrac', 'JS').","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform longitudinal beta diversity tests using PERMANOVA — generate_beta_test_long","text":"list containing PERMANOVA results beta diversity index. list includes two elements: \"p.tab\" - table p-values PERMANOVA tests dplyr::across indices, \"aov.tab\" - table containing detailed PERMANOVA results index. p.tab aov.tab tables include columns terms PERMANOVA model, degrees freedom, sums squares, mean squares, F statistics, R-squared values, p-values.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform longitudinal beta diversity tests using PERMANOVA — generate_beta_test_long","text":"","code":"if (FALSE) { data(subset_T2D.obj)  # Perform pairwise beta diversity tests using PERMANOVA beta_test_long_results <- generate_beta_test_long(   data.obj = subset_T2D.obj,   dist.obj = NULL,   time.var = \"visit_number\",   t0.level = sort(unique(subset_T2D.obj$meta.dat$visit_number))[1],   ts.levels = sort(unique(subset_T2D.obj$meta.dat$visit_number))[2:6],   subject.var = \"subject_id\",   group.var = \"subject_race\",   adj.vars = \"subject_gender\",   dist.name = c('BC', 'Jaccard') ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform pairwise beta diversity tests using PERMANOVA — generate_beta_test_pair","title":"Perform pairwise beta diversity tests using PERMANOVA — generate_beta_test_pair","text":"function calculates various beta diversity indices microbiome dataset performs pairwise PERMANOVA tests assess effect grouping variable additional covariates beta diversity. returns PERMANOVA results specified beta diversity indices.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform pairwise beta diversity tests using PERMANOVA — generate_beta_test_pair","text":"","code":"generate_beta_test_pair(   data.obj,   dist.obj = NULL,   time.var,   subject.var,   group.var,   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\") )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform pairwise beta diversity tests using PERMANOVA — generate_beta_test_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. time.var Character string specifying column name metadata containing time variable. Used subsetting data beta diversity calculation needed. Optional. subject.var Character string specifying column name metadata containing unique subject IDs. Used stratifying variable PERMANOVA tests. Required. group.var Character string specifying column name metadata containing grouping categories. Used main predictor PERMANOVA tests. Required. adj.vars Character vector specifying column names metadata containing covariates include PERMANOVA model. Optional, can NULL adjustment needed. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard').","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform pairwise beta diversity tests using PERMANOVA — generate_beta_test_pair","text":"list containing PERMANOVA results beta diversity index. list includes two elements: \"p.tab\" - table p-values PERMANOVA tests dplyr::across indices, \"aov.tab\" - table containing detailed PERMANOVA results index. p.tab aov.tab tables include columns terms PERMANOVA model, degrees freedom, sums squares, mean squares, F statistics, R-squared values, p-values.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform pairwise beta diversity tests using PERMANOVA — generate_beta_test_pair","text":"","code":"if (FALSE) { library(vegan) data(peerj32.obj) dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = c('BC', 'Jaccard'))  # Perform pairwise beta diversity tests using PERMANOVA generate_beta_test_pair(   data.obj = peerj32.obj,   dist.obj = NULL,   time.var = \"time\",   subject.var = \"subject\",   group.var = \"group\",   adj.vars = c(\"sex\"),   dist.name = c('BC', 'Jaccard') ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Beta Diversity Indices and Perform PERMANOVA Tests — generate_beta_test_single","title":"Calculate Beta Diversity Indices and Perform PERMANOVA Tests — generate_beta_test_single","text":"function computes range beta diversity indices microbiome dataset evaluates using PERMANOVA tests. goal assess effect specific grouping variable along potential covariates beta diversity. function outputs PERMANOVA results selected beta diversity indices.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Beta Diversity Indices and Perform PERMANOVA Tests — generate_beta_test_single","text":"","code":"generate_beta_test_single(   data.obj,   dist.obj = NULL,   time.var = NULL,   t.level = NULL,   group.var,   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\") )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Beta Diversity Indices and Perform PERMANOVA Tests — generate_beta_test_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. time.var column name metadata containing time variable subsetting data analysis. Default NULL. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var column name metadata containing grouping variable interest PERMANOVA test. adj.vars Character vector column names metadata included covariates PERMANOVA test. Default NULL. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard').","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Beta Diversity Indices and Perform PERMANOVA Tests — generate_beta_test_single","text":"list containing PERMANOVA results beta diversity index omnibus p-value. list includes two elements: \"p.tab\" - table p-values PERMANOVA tests dplyr::across indices, \"aov.tab\" - table containing detailed PERMANOVA results index. p.tab aov.tab tables include columns terms PERMANOVA model, degrees freedom, sums squares, mean squares, F statistics, R-squared values, p-values.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_test_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Beta Diversity Indices and Perform PERMANOVA Tests — generate_beta_test_single","text":"","code":"if (FALSE) { library(vegan) data(peerj32.obj)  # Perform beta diversity tests using PERMANOVA generate_beta_test_single(   data.obj = peerj32.obj,   dist.obj = NULL,   time.var = \"time\",   t.level = \"1\",   group.var = \"group\",   adj.vars = c(\"sex\"),   dist.name = c('BC', 'Jaccard') )  # Perform beta diversity tests using PERMANOVA generate_beta_test_single(   data.obj = peerj32.obj,   dist.obj = NULL,   time.var = \"time\",   t.level = \"2\",   group.var = \"group\",   adj.vars = c(\"sex\"),   dist.name = c('BC', 'Jaccard') ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"function `generate_beta_trend_test_long` performs linear mixed effects model test longitudinal trend beta diversity. models distance matrix response, time fixed effect subject random effect. optional grouping variable can included interaction time. Covariates adjustment can also added model. time variable numeric, function coerces needed. linear mixed model fitted using lmer, estimated coefficients extracted returned, representing trends time differences groups.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"","code":"generate_beta_trend_test_long(   data.obj,   dist.obj = NULL,   subject.var,   time.var,   group.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. subject.var variable name metadata represents subject identifiers. match subject identifiers used calculating distance matrix. time.var variable name metadata represents time points. numeric vector coded continuous values. function try coerce numeric needed. group.var (Optional) variable name metadata represents grouping factor interest. Default NULL. adj.vars (Optional) character vector variable names metadata used adjustment model. Default NULL. dist.name character vector specifying beta diversity indices calculate. Default \"BC\" (Bray-Curtis). Supported indices include \"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\". ... (Optional) Additional arguments pass internal functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"list containing result trend test specified beta diversity index. result includes tibble coefficients extracted mixed-effects model fitted distance.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"function starts validating input data, followed processing time variable calculating beta diversity necessary. Adjustments made based provided adjusting variables, mixed-effects model fitted long-format data. coefficients model extracted returned beta diversity index specified.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"warning message displayed ensure time variable coded numeric. Non-numeric coding may lead issues trend test computation.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_trend_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Beta Diversity Trend Test for Longitudinal Data — generate_beta_trend_test_long","text":"","code":"if (FALSE) { data(ecam.obj) generate_beta_trend_test_long(   data.obj = ecam.obj,   dist.obj = NULL,   subject.var = \"studyid\",   time.var = \"month\",   group.var = \"diet\",   adj.vars = c(\"antiexposedall\",\"delivery\"),   dist.name = c(\"BC\", \"Jaccard\")   )  data(subset_T2D.obj) generate_beta_trend_test_long(   data.obj = subset_T2D.obj,   dist.obj = NULL,   subject.var = \"subject_id\",   time.var = \"visit_number\",   group.var = \"subject_race\",   adj.vars = c(\"subject_gender\",\"sample_body_site\"),   dist.name = c(\"BC\", \"Jaccard\") ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"function computes volatility test longitudinal data beta diversity. tests association beta diversity volatility specified group variable.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"","code":"generate_beta_volatility_test_long(   data.obj,   dist.obj = NULL,   subject.var,   time.var,   group.var = NULL,   adj.vars = NULL,   dist.name = c(\"BC\"),   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. subject.var string indicating column name metadata table represents subject. time.var string indicating column name metadata table represents time. Ensure coded numeric. group.var (Optional) string indicating column name metadata table represents grouping factor. adj.vars (Optional) character vector specifying column names metadata table used adjustment. dist.name character vector specifying beta diversity indices calculate. Default \"BC\" (Bray-Curtis). ... (Optional) Additional arguments pass internal functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"list containing result volatility test specified beta diversity index.   element list tibble coefficients extracted linear model fitted   distance, ANOVA table group variable multi-categorical.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"function starts validating input data, processing time variable, calculating beta diversity necessary. Adjustments made based provided adjusting variables. volatility beta diversity computed subject, linear models fitted test association volatility specified group variable. coefficients ANOVA results extracted returned beta diversity index specified.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"warning message displayed ensure time variable coded numeric. Non-numeric coding may lead issues volatility test computation.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_beta_volatility_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Beta Diversity Volatility Test for Longitudinal Data — generate_beta_volatility_test_long","text":"","code":"if (FALSE) { data(ecam.obj) generate_beta_volatility_test_long(   data.obj = ecam.obj,   dist.obj = NULL,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\") )  data(subset_T2D.obj) generate_beta_volatility_test_long(   data.obj = subset_T2D.obj,   dist.obj = NULL,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"subject_race\",   adj.vars = NULL,   dist.name = c(\"BC\", \"Jaccard\") ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_areaplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate taxa area plots over time — generate_taxa_areaplot_long","title":"Generate taxa area plots over time — generate_taxa_areaplot_long","text":"function generates taxa area plots given data object. plots show relative abundance different taxa time. Raw count data automatically normalized using rarefaction total sum scaling (TSS). function also supports generation plots grouped data stratified data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_areaplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate taxa area plots over time — generate_taxa_areaplot_long","text":"","code":"generate_taxa_areaplot_long(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   feature.level = \"original\",   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.number = 20,   t0.level = NULL,   ts.levels = NULL,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_areaplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate taxa area plots over time — generate_taxa_areaplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var Character string specifying column name metadata containing unique subject IDs. Required connect samples subject. time.var Character string specifying column name metadata containing time variable. Required order connect samples time. group.var Character string specifying column name metadata containing grouping categories. Used coloring lines plot. Optional, can NULL. strata.var Character string specifying column name metadata containing stratification categories. Used nested faceting plots. Optional, can NULL. feature.level Character vector specifying taxonomic level(s) use plotting, e.g. c(\"Phylum\", \"Genus\"). special value \"original\" can also provided, use original taxon identifiers. Multiple levels can specified data plotted separately . **NULL, NULL value lead errors.** Default \"original\". feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.number numeric value indicating number top abundant features retain plot. Features average relative abundance ranked number grouped ''. Default 20. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. base.size base size ggplot2 theme. Default 10. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Character vector specifying colors use mapping features color aesthetic. length number features. NULL, default palette used. Colors mapped features based order features. parameter represent groups, used feature colors. pdf Logical indicating plot saved PDF. Default TRUE. file.ann Optional, file annotation. Default NULL. pdf.wid Width output PDF. Default 11. pdf.hei Height output PDF. Default 8.5. ... Additional arguments pass function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_areaplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate taxa area plots over time — generate_taxa_areaplot_long","text":"list ggplot objects, representing taxa area plot specified feature level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_areaplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate taxa area plots over time — generate_taxa_areaplot_long","text":"","code":"if (FALSE) { library(ggh4x) library(vegan) data(ecam.obj) generate_taxa_areaplot_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   group.var = \"diet\",   strata.var = \"antiexposedall\",   feature.level = c(\"Family\",\"Genus\",\"Order\"),   feature.dat.type = \"proportion\",   feature.number = 20,   t0.level = NULL,   ts.levels = NULL,   base.size = 10,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","title":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","text":"function performs association testing taxa abundances grouping variable longitudinal microbiome data. discerns taxa abundances differ experimental observational groups time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","text":"","code":"generate_taxa_association_test_long(   data.obj,   subject.var,   group.var = NULL,   adj.vars = NULL,   prev.filter = 0,   abund.filter = 0,   feature.level,   feature.dat.type = c(\"count\", \"proportion\"),   feature.sig.level = 0.1,   feature.mt.method = \"fdr\",   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string indicates column name metadata uniquely identifies subject sample. group.var character string specifying grouping variable column metadata. variable differentiates different experimental observational groups. adj.vars vector character strings. string denote column name metadata serve covariate analysis. variables might account potential confounding influences. Default NULL. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. feature.level character string indicating taxonomic resolution analysis (e.g., \"Phylum\", \"Class\"). choice determine granularity analysis. feature.dat.type character string, either \"count\" \"proportion\", indicating nature data `data.obj`. helps function determine normalization required. Default \"count\". feature.sig.level numeric threshold, usually 0 1, assessing significance individual taxa. Default 0.1. feature.mt.method character string specifying method employed multiple testing correction (e.g., \"fdr\" False Discovery Rate). Default \"fdr\". ... Additional arguments cater specialized requirements. now, placeholder used.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","text":"list dataframes, dataframe representing specific taxonomic level (specified `feature.level`). dataframes contain essential statistics, including taxa changes, p-values, metrics derived linear model.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","text":"Based whether group.var adj.vars NULL, formula tests: - group.var NULL adj.vars NULL:   - Tests adj.vars main effects .   - Adjusted adj.vars group.var. - group.var NULL adj.vars NULL:   - Tests adj.vars group.var main effects.   - Adjusted adj.vars. - group.var NULL adj.vars NULL:   - Tests group.var main effects .   - Unadjusted analysis. - group.var adj.vars NULL:   - Tests intercept .   - Unadjusted analysis. formula combines appropriate terms based variables NULL. Subject variability accounted random effects. group.var adj.vars NULL, intercept tested without adjusting covariates.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Taxa Association Test Generation — generate_taxa_association_test_long","text":"","code":"if (FALSE) { # Example 1 data(\"ecam.obj\") generate_taxa_association_test_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   group.var = \"delivery\",   feature.level = c(\"Phylum\",\"Class\"),   feature.dat.type = c(\"count\") )  # Example 2 data(\"subset_T2D.obj\") generate_taxa_association_test_long(   data.obj = subset_T2D.obj,   subject.var = \"subject_id\",   feature.level = \"Genus\",   group.var = \"subject_race\",   feature.dat.type = c(\"count\"),   prev.filter = 0.1,   abund.filter = 0.001 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_volcano_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Volcano Plots for Taxa Association Test — generate_taxa_association_volcano_long","title":"Generate Volcano Plots for Taxa Association Test — generate_taxa_association_volcano_long","text":"Generate Volcano Plots Taxa Association Test","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_volcano_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Volcano Plots for Taxa Association Test — generate_taxa_association_volcano_long","text":"","code":"generate_taxa_association_volcano_long(   data.obj,   group.var = NULL,   test.list,   feature.sig.level = 0.1,   feature.mt.method = \"fdr\" )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_volcano_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Volcano Plots for Taxa Association Test — generate_taxa_association_volcano_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. group.var grouping variable tested, found metadata test.list list test results returned generate_taxa_trend_test_long feature.sig.level significance level cutoff highlighting taxa feature.mt.method Multiple testing correction method, \"fdr\" \"none\"","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_volcano_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Volcano Plots for Taxa Association Test — generate_taxa_association_volcano_long","text":"list ggplot objects volcano plots taxonomic level","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_association_volcano_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Volcano Plots for Taxa Association Test — generate_taxa_association_volcano_long","text":"","code":"# Generate test results # test_list <- generate_taxa_association_test_long(...) # Create volcano plots # volcano_plots <- generate_taxa_association_volcano_long( #   data.obj, group.var, test_list, #   feature.sig.level = 0.05, feature.mt.method = \"fdr\" # )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","title":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","text":"function generates barplots visualize taxonomic composition samples longitudinal data. also provides options grouping stratifying data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","text":"","code":"generate_taxa_barplot_long(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   feature.level = \"original\",   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.number = 20,   t0.level = NULL,   ts.levels = NULL,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var Character string specifying column name metadata containing unique subject IDs. Required connect samples subject. time.var Character string specifying column name metadata containing time variable. Required order connect samples time. group.var Character string specifying column name metadata containing group identifiers. Default NULL. strata.var Character string specifying column name metadata containing stratum identifiers. Default NULL. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.number numeric value indicating number top abundant features retain plot. Features average relative abundance ranked number grouped ''. Default 20. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. base.size numeric value indicating base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying names colors use plot. vector contain color names matched levels taxonomic grouping variable (feature.level). Default NULL, use pre-defined set colors package ggh4x. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF file. Default 11. pdf.hei numeric value specifying height PDF file. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","text":"ggplot object taxa barplot.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","text":"function generates barplot taxa proportions longitudinal data. barplot can stratified group variable /variables. also allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Barplots for Longitudinal Data — generate_taxa_barplot_long","text":"","code":"if (FALSE) { library(ggh4x) library(vegan) data(ecam.obj) generate_taxa_barplot_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   group.var = \"delivery\",   strata.var = \"diet\",   feature.level = \"Family\",   feature.dat.type = \"proportion\",   feature.number = 10,   t0.level = NULL,   ts.levels = NULL,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","title":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","text":"function generates pairwise barplots visualize taxonomic composition samples longitudinal data. also provides options grouping stratifying data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","text":"","code":"generate_taxa_barplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   feature.level = \"original\",   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.number = 20,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string indicating variable subject identifiers. time.var string indicating variable time points. group.var string indicating variable group identifiers. Default NULL. strata.var string indicating variable stratum identifiers. Default NULL. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.number numeric value indicating number top abundant features retain plot. Features average relative abundance ranked number grouped ''. Default 20. base.size numeric value indicating base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF file. Default 11. pdf.hei numeric value specifying height PDF file. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","text":"list ggplot objects taxa barplots.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","text":"function generates barplot taxa proportions longitudinal data. barplot can stratified group variable /variables. also allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Pairwise Taxa Barplots for Longitudinal Data — generate_taxa_barplot_pair","text":"","code":"if (FALSE) { data(peerj32.obj)  generate_taxa_barplot_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = \"Genus\",   feature.dat.type = c(\"count\"),   feature.number = 40,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 25,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","title":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","text":"function generates stacked barplots visualize taxonomic composition samples longitudinal data. also provides options grouping stratifying data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","text":"","code":"generate_taxa_barplot_single(   data.obj,   subject.var,   time.var = NULL,   t.level = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = \"original\",   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.number = 20,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string indicating variable subject identifiers. time.var string indicating variable time points. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var string indicating variable group identifiers. Default NULL. strata.var string indicating variable strata identifiers. Default NULL. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.number numeric value indicating number top abundant features retain plot. Features average relative abundance ranked number grouped ''. Default 20. base.size numeric value indicating base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF file. Default 11. pdf.hei numeric value specifying height PDF file. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","text":"list ggplot objects taxa barplots.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","text":"function generates stacked barplot taxa proportions longitudinal data. barplot can stratified group variable /variables. also allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_barplot_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Stacked Taxa Barplots for Longitudinal Data — generate_taxa_barplot_single","text":"","code":"if (FALSE) { data(peerj32.obj) generate_taxa_barplot_single(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = NULL,   t.level = NULL,   group.var = \"group\",   strata.var = \"sex\",   feature.level = \"Family\",   feature.dat.type = \"count\",   feature.number = 30,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  data(\"subset_T2D.obj\") generate_taxa_barplot_single(   data.obj = subset_T2D.obj,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t.level = 1,   group.var = \"subject_race\",   strata.var = \"subject_gender\",   feature.level = c(\"Phylum\", \"Family\", \"Genus\"),   feature.dat.type = \"count\",   feature.number = 30,   base.size = 10,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","title":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","text":"function generates boxplots visualize taxonomic composition samples longitudinal data. also provides options grouping stratifying data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","text":"","code":"generate_taxa_boxplot_long(   data.obj,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   transform = c(\"identity\", \"sqrt\", \"log\"),   prev.filter = 0.05,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string indicating variable subject identifiers. time.var string indicating variable time points. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var string indicating variable group identifiers. Default NULL. strata.var string indicating variable strata identifiers. Default NULL. feature.level string indicating taxonomic level plot. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. transform string indicating transformation apply data plotting. Options : - \"identity\": transformation (default) - \"sqrt\": Square root transformation - \"log\": Logarithmic transformation. Zeros replaced half minimum non-zero value taxon log transformation. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size numeric value specifying base size plot. Default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF. Default 11. pdf.hei numeric value specifying height PDF. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","text":"list ggplot objects taxonomic level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","text":"function generates boxplot taxa abundances longitudinal data. boxplot can stratified group variable /variables. allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Boxplots for Longitudinal Data — generate_taxa_boxplot_long","text":"","code":"if (FALSE) { # Load required libraries and example data data(ecam.obj) # Generate the boxplot pair generate_taxa_boxplot_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   strata.var = NULL,   feature.level = c(\"Class\"),   features.plot = NULL,   feature.dat.type = \"proportion\",   top.k.plot = 1,   top.k.func = \"sd\",   transform = \"log\",   prev.filter = 0.1,   abund.filter = 1e-7,   base.size = 12,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 25,   pdf.hei = 8.5 ) data(peerj32.obj) generate_taxa_boxplot_long(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   t0.level = \"1\",   ts.levels = \"2\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = \"Family\",   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = 10,   top.k.func = \"mean\",   transform = \"sqrt\",   prev.filter = 0.001,   abund.filter = 0.001,   base.size = 12,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 13 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","title":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","text":"function generates boxplots visualize taxonomic composition samples single time point longitudinal study. provides options grouping stratifying data, selecting top k features based user-defined function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","text":"","code":"generate_taxa_boxplot_single(   data.obj,   subject.var,   time.var = NULL,   t.level = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   transform = c(\"identity\", \"sqrt\", \"log\"),   prev.filter = 0.05,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string specifying variable subjects. time.var string specifying variable time. NULL, function assumes data single time point provided. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var Optional string specifying variable groups. strata.var Optional string specifying variable strata. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot integer specifying top k features plot based function specified `top.k.func`. top.k.func function determine top k features plot. transform string indicating transformation apply data plotting. Options : - \"identity\": transformation (default) - \"sqrt\": Square root transformation - \"log\": Logarithmic transformation. Zeros replaced half minimum non-zero value taxon log transformation. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size numeric value specifying base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF file. Default 11. pdf.hei numeric value specifying height PDF file. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","text":"list ggplot objects, one taxonomic level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","text":"function generates boxplot taxa abundances single time point longitudinal study. boxplot can stratified group variable /variables. also allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_boxplot_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Single Time Point Taxa Boxplots — generate_taxa_boxplot_single","text":"","code":"if (FALSE) { # Generate the boxplot pair data(ecam.obj) generate_taxa_boxplot_single(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month\",   t.level = \"1\",   group.var = \"diet\",   strata.var = NULL,   feature.level = c(\"Phylum\"),   features.plot = sample(unique(ecam.obj$feature.ann[,\"Phylum\"]),3),   feature.dat.type = \"proportion\",   transform = \"log\",   prev.filter = 0,   abund.filter = 0,   base.size = 12,   theme.choice = \"classic\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = \"test\",   pdf.wid = 11,   pdf.hei = 8.5 ) data(peerj32.obj) generate_taxa_boxplot_single(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   t.level = \"1\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = c(\"Family\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   transform = \"log\",   prev.filter = 0.1,   abund.filter = 0.0001,   base.size = 12,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_boxplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Individual Taxa Change Boxplot Pair — generate_taxa_change_boxplot_pair","title":"Generate Individual Taxa Change Boxplot Pair — generate_taxa_change_boxplot_pair","text":"function generates boxplot pairs visualizing changes abundance individual taxa time. boxplots show change abundance taxon different groups strata. also allows prevalence abundance filter applied data, can optionally save plots PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_boxplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Individual Taxa Change Boxplot Pair — generate_taxa_change_boxplot_pair","text":"","code":"generate_taxa_change_boxplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   change.base = NULL,   feature.change.func = \"relative change\",   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter,   abund.filter,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_boxplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Individual Taxa Change Boxplot Pair — generate_taxa_change_boxplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string specifying subject variable. time.var character string specifying time variable. group.var character string specifying group variable. Default NULL. strata.var character string specifying strata variable. Default NULL. change.base time point value used baseline calculating change abundance time points. one values `time.var`. change calculated difference baseline time point subsequent time point. feature.change.func method function used calculate change feature abundance time points. following options supported: - \"relative change\": Computes relative change (time_2 - time_1) / (time_2 + time_1). values zero, result zero. - \"log fold change\": Computes log2 fold change time points. Zero values imputed half minimum nonzero value respective feature given time point taking logarithm. - \"absolute change\": Computes absolute difference time points. - custom function: provided function take two numeric vectors input (values time 1 time 2) return numeric vector differences. Users ensure function handles zero values appropriately. unrecognized value value provided `feature.change.func`, default behavior compute absolute difference time points. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size base size plot. Default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette plot. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann optional character string appended file name PDF. Default NULL. pdf.wid width PDF. Default 11. pdf.hei height PDF. Default 8.5. ... Additional arguments passed underlying functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_boxplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Individual Taxa Change Boxplot Pair — generate_taxa_change_boxplot_pair","text":"list ggplot objects, boxplot visualizing changes abundance individual taxa time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_boxplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Individual Taxa Change Boxplot Pair — generate_taxa_change_boxplot_pair","text":"","code":"if (FALSE) { # Load required libraries and data library(vegan) library(ggh4x) data(peerj32.obj)  # Generate the boxplot pair generate_taxa_change_boxplot_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = NULL,   change.base = \"1\",   feature.change.func = \"relative change\",   feature.level = \"original\",   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = 6,   top.k.func = \"sd\",   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_dotplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Stack Dotplot Pair — generate_taxa_change_dotplot_pair","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_change_dotplot_pair","text":"function generates stacked dotplot specified taxa level paired samples. data used visualization first filtered based prevalence abundance thresholds. plot can either displayed interactively saved PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_dotplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_change_dotplot_pair","text":"","code":"generate_taxa_change_dotplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   change.base = \"1\",   feature.change.func = \"log fold change\",   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.001,   abund.filter = 0.001,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_dotplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_change_dotplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). subject.var character string defining subject variable meta_tab time.var character string defining time variable meta_tab group.var character string defining group variable meta_tab used sorting facetting strata.var (Optional) character string defining strata variable meta_tab used sorting facetting change.base numeric value setting base change (usually 1) feature.change.func method function specifying compute change feature abundance prevalence two time points. following options available: - custom function: provide user-defined function, take two numeric arguments corresponding values two time points return computed change. function can applied compute changes abundance (`time1_mean_abundance` `time2_mean_abundance`) prevalence (`time1_prevalence` `time2_prevalence`). - \"log fold change\": Computes log2 fold change two time points. handle zeros, small offset (0.00001) added taking logarithm. method can applied abundance prevalence changes. - \"relative change\": Computes relative change `(time2_value - time1_value) / (time2_value + time1_value)`. time points value 0, change defined 0. method can applied abundance prevalence changes. - \"absolute change\": Computes difference values two time points. method can applied abundance prevalence changes. - value (parameter omitted): default, function compute absolute change described , regardless whether abundance prevalence data. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top abundant features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top abundant features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected mean abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf TRUE, save plot PDF file (default: TRUE) file.ann (Optional) character string specifying file annotation include generated PDF file's name pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_dotplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_change_dotplot_pair","text":"`pdf` parameter set TRUE, function save PDF file return final ggplot object. `pdf` set FALSE, function return final ggplot object without creating PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_dotplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_change_dotplot_pair","text":"","code":"if (FALSE) {  # Note: In the RStudio viewer, the plot might appear cluttered if there are many taxa. # It's recommended to view the generated PDF for better clarity. If it still feels # overcrowded in the PDF, consider increasing the 'pdf.wid' value to adjust the width of the plot.  data(peerj32.obj) generate_taxa_change_dotplot_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   change.base = \"1\",   feature.change.func = \"log fold change\",   feature.level = \"Family\",   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = 20,   top.k.func = \"mean\",   prev.filter = 0.01,   abund.filter = 1e-4,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 30,   pdf.hei = 10 ) } # View the result"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","title":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","text":"function performs hierarchical clustering microbiome data based grouping variables strata variables sample metadata generates stacked heatmaps using “pheatmap” package. can also save resulting heatmap PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","text":"","code":"generate_taxa_change_heatmap_long(   data.obj,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   feature.level,   feature.change.func = \"relative change\",   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 10,   palette = NULL,   cluster.rows = NULL,   cluster.cols = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). subject.var character string specifying subject variable metadata. time.var character string specifying time variable metadata. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var character string specifying grouping variable metadata. Default NULL. strata.var (Optional) character string specifying stratification variable metadata. Default NULL. feature.level character string defining taxonomic level analyze ('Phylum', 'Family', 'Genus'). feature.change.func function character string specifying calculate change baseline value. allows flexible options: - function provided, applied row calculate change.   function take 2 arguments: value timepoint t value baseline t0. - character string provided, following options supported:   - 'relative change': (value_t - value_t0) / (value_t + value_t0)   - 'absolute change': value_t - value_t0   - 'log fold change': log2(value_t + 1e-5) - log2(value_t0 + 1e-5) - Default 'relative change'. none options matched, error thrown indicating acceptable options prompting user provide custom function. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot numeric value specifying number top taxa plotted features.plot NULL. NULL (default), taxa plotted. top.k.func function compute top k taxa features.plot NULL. NULL (default), mean function used. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. palette Color palette used plots. cluster.rows logical variable indicating rows clustered. Default TRUE. cluster.cols logical variable indicating columns clustered. Default FALSE. pdf TRUE, save plot PDF file (default: TRUE) file.ann (Optional) character string specifying file annotation include generated PDF file's name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional arguments passed pheatmap.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","text":"list ggplot heatmap objects, one taxonomic level. object class pheatmap, generated heatmap plot","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","text":"parameter used compute change columns baseline   (specified t0.level) taxon. change values calculated   timepoint appended new columns data frame   plotting heatmap. allows flexibly customizing change quantified. function generates separate heatmap taxonomic level specified,   rows clustered layers arranged groups timepoints.   automatically rarefies raw count data using Rarefy-TSS normalization MicrobiomeStat.   Annotation columns generated ordered properly visually stacking layers.   Colormaps also generated group strata variables.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxonomic Change Heatmap Long — generate_taxa_change_heatmap_long","text":"","code":"if (FALSE) { library(pheatmap) data(ecam.obj)  generate_taxa_change_heatmap_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"antiexposedall\",   strata.var = \"diet\",   feature.level = c(\"Family\",\"Class\"),   feature.change.func = \"log fold change\",   feature.dat.type = \"proportion\",   features.plot = NULL,   top.k.plot = 10,   top.k.func = \"sd\",   palette = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   pdf = TRUE,   file.ann = NULL ) data(subset_T2D.obj) generate_taxa_change_heatmap_long(   data.obj = subset_T2D.obj,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"subject_gender\",   strata.var = \"subject_race\",   feature.level = c(\"Phylum\"),   feature.change.func = \"log fold change\",   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = 50,   top.k.func = \"mean\",   prev.filter = 0.01,   abund.filter = 0.01,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Change Heatmap Pair — generate_taxa_change_heatmap_pair","title":"Generate Taxa Change Heatmap Pair — generate_taxa_change_heatmap_pair","text":"function generates heatmap showing pairwise changes relative abundances taxa different time points. data used visualization first filtered based prevalence abundance thresholds. plot can either displayed interactively saved PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Change Heatmap Pair — generate_taxa_change_heatmap_pair","text":"","code":"generate_taxa_change_heatmap_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   change.base = NULL,   feature.change.func = \"relative change\",   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 10,   palette = NULL,   cluster.rows = NULL,   cluster.cols = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Change Heatmap Pair — generate_taxa_change_heatmap_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string specifying subject variable metadata. time.var character string specifying time variable metadata. group.var character string specifying grouping variable metadata. Default NULL. strata.var character string specifying stratification variable metadata. Default NULL. change.base numeric value specifying baseline time point computing change. match one time points time variable. Default 1, assumes first time point baseline. feature.change.func Specifies method function compute change two time points. following options available: - custom function: provide user-defined function, take two numeric arguments corresponding values two time points (`value_time_1` `value_time_2`) return computed change. custom function applied directly. - \"log fold change\": Computes log2 fold change two time points. zero values, imputation performed using half minimum nonzero value feature level respective time point taking logarithm. - \"relative change\": Computes relative change `(value_time_2 - value_time_1) / (value_time_2 + value_time_1)`. time points value 0, change defined 0. - \"absolute change\": Computes difference values two time points. - value (parameter omitted): default, function computes absolute change described . feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. palette Color palette used plots. cluster.rows logical variable indicating rows clustered. Default TRUE. cluster.cols logical variable indicating columns clustered. Default NULL. pdf TRUE, save plot PDF file (default: TRUE) file.ann (Optional) character string specifying file annotation include generated PDF file's name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed pheatmap function","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Change Heatmap Pair — generate_taxa_change_heatmap_pair","text":"`pdf` parameter set TRUE, function save PDF file return pheatmap::pheatmap plot. `pdf` set FALSE, function return pheatmap plot without creating PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_heatmap_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Change Heatmap Pair — generate_taxa_change_heatmap_pair","text":"","code":"if (FALSE) { # Load required libraries and example data library(pheatmap) data(peerj32.obj) generate_taxa_change_heatmap_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   change.base = \"1\",   feature.change.func = \"relative change\",   feature.level = c(\"Genus\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = 10,   top.k.func = \"sd\",   prev.filter = 0.1,   abund.filter = 0.001,   base.size = 10,   palette = NULL,   cluster.rows = NULL,   cluster.cols = FALSE,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_scatterplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate taxa-level difference scatterplot pairs — generate_taxa_change_scatterplot_pair","title":"Generate taxa-level difference scatterplot pairs — generate_taxa_change_scatterplot_pair","text":"function generates scatterplot pairs showing difference abundance taxa specified taxonomic level two time points, grouping stratification.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_scatterplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate taxa-level difference scatterplot pairs — generate_taxa_change_scatterplot_pair","text":"","code":"generate_taxa_change_scatterplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   change.base = NULL,   feature.change.func = \"absolute change\",   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_scatterplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate taxa-level difference scatterplot pairs — generate_taxa_change_scatterplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var Character string specifying subject variable metadata. time.var Character string specifying time variable metadata. group.var Character string specifying grouping variable metadata. Default NULL. strata.var Character string specifying stratification variable metadata. Default NULL. change.base Character string specifying baseline time point. match one time points present metadata 'time.var' variable. change calculated comparing time points baseline time point. feature.change.func Specifies method function used compute change two time points. following options supported: - \"absolute change\": Computes difference counts two time points (`count_ts` `count_t0`). default behavior value unrecognized value provided. - \"log fold change\": Computes log2 fold change two time points. zero counts, imputation performed using half minimum nonzero count taxa level respective time point taking logarithm. - \"relative change\": Computes relative change `(count_ts - count_t0) / (count_ts + count_t0)`. time points count 0, change defined 0. - custom function: user-defined function provided, take two numeric vectors input corresponding counts two time points (`count_t0` `count_ts`) return numeric vector computed change. custom function applied directly calculate new counts. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Numeric specifying base font size plot text elements. Default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Character vector specifying colors use plot. Defaults RColorBrewer palette. pdf Logical, TRUE, save plot(s) PDF file(s). Default TRUE. file.ann Character string specifying file annotation add PDF file name. Default NULL. pdf.wid, pdf.hei Numeric specifying PDF width height inches. Default 11 x 8.5. ... Additional arguments passed ggplot2::ggsave().","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_scatterplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate taxa-level difference scatterplot pairs — generate_taxa_change_scatterplot_pair","text":"ggplot object containing scatterplot pair(s).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_scatterplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate taxa-level difference scatterplot pairs — generate_taxa_change_scatterplot_pair","text":"","code":"if (FALSE) { # Load required libraries and data library(vegan) data(peerj32.obj) peerj32.obj$meta.dat <- peerj32.obj$meta.dat %>% dplyr::select(all_of(\"subject\")) %>% dplyr::distinct() %>% dplyr::mutate(cons = runif(dplyr::n(),0,5)) %>% dplyr::left_join(peerj32.obj$meta.dat %>% rownames_to_column(\"sample\"),by = \"subject\") %>% tibble::column_to_rownames(\"sample\") # Generate the boxplot pair generate_taxa_change_scatterplot_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"cons\",   strata.var = \"sex\",   change.base = \"1\",   feature.change.func = \"log fold change\",   feature.level = \"Genus\",   feature.dat.type = \"other\",   features.plot = NULL,   top.k.plot = 8,   top.k.func = \"mean\",   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_test_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute taxa changes between time points and analyze differential abundance between groups — generate_taxa_change_test_pair","title":"Compute taxa changes between time points and analyze differential abundance between groups — generate_taxa_change_test_pair","text":"function calculates taxa abundance changes two time points metadata, using time values specified `time.var` baseline `change.base`. computes changes based method `feature.change.func`. function uses ZicoSeq method perform differential abundance analysis groups `group.var`, adjusted `adj.vars`. returns data frames summarizing results differential abundance tests taxonomic level `feature.level`. `time.var` provided, first unique value metadata used `change.base`. one time value exists, function exit message.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_test_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute taxa changes between time points and analyze differential abundance between groups — generate_taxa_change_test_pair","text":"","code":"generate_taxa_change_test_pair(   data.obj,   subject.var,   time.var = NULL,   group.var = NULL,   adj.vars = NULL,   change.base,   feature.change.func = \"log fold change\",   feature.level,   prev.filter = 0.1,   abund.filter = 1e-04,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.mt.method = \"fdr\",   feature.sig.level = 0.1,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_test_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute taxa changes between time points and analyze differential abundance between groups — generate_taxa_change_test_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var name subject variable column metadata. time.var name time variable column metadata (optional). group.var name grouping variable column linear modeling metadata. adj.vars Names additional variables used covariates analysis. change.base baseline time point detecting changes taxa. NULL, first unique value time.var column used (optional). feature.change.func Specifies method function used compute change two time points. Options include: - \"absolute change\" (default): Computes absolute difference values two time points (`value_time_2` `value_time_1`). - \"log fold change\": Computes log2 fold change two time points. zero values, imputation performed using half minimum nonzero value feature level respective time point taking logarithm. - \"relative change\": Computes relative change `(value_time_2 - value_time_1) / (value_time_2 + value_time_1)`. time points value 0, change defined 0. - custom function: user-defined function provided, take two numeric vectors input corresponding values two time points (`value_time_1` `value_time_2`) return numeric vector computed change. custom function applied directly calculate difference. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.mt.method Character, multiple testing method features, \"fdr\" \"none\", default \"fdr\". feature.sig.level Numeric, significance level cutoff highlighting features, default 0.1. ... Additional parameters passed ZicoSeq function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_test_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute taxa changes between time points and analyze differential abundance between groups — generate_taxa_change_test_pair","text":"named list element corresponds feature level contains dataframe calculated taxa changes, corresponding p-values, statistics linear model.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_change_test_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute taxa changes between time points and analyze differential abundance between groups — generate_taxa_change_test_pair","text":"","code":"if (FALSE) { data(peerj32.obj)  generate_taxa_change_test_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   adj.vars = \"sex\",   change.base = \"1\",   feature.change.func = \"log fold change\",   feature.level = c(\"Genus\"),   prev.filter = 0.1,   abund.filter = 1e-4,   feature.dat.type = \"count\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Stack Dotplot Pair — generate_taxa_dotplot_pair","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_dotplot_pair","text":"function generates stacked dotplot specified taxa level paired samples. data used visualization first filtered based prevalence abundance thresholds. plot can either displayed interactively saved PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_dotplot_pair","text":"","code":"generate_taxa_dotplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_dotplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string defining subject variable meta_tab time.var character string defining time variable meta_tab group.var character string defining group variable meta_tab used sorting facetting strata.var (Optional) character string defining strata variable meta_tab used sorting facetting feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf TRUE, save plot PDF file (default: TRUE) file.ann (Optional) character string specifying file annotation include generated PDF file's name pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_dotplot_pair","text":"`pdf` parameter set TRUE, function save PDF file return final ggplot object. `pdf` set FALSE, function return final ggplot object without creating PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Stack Dotplot Pair — generate_taxa_dotplot_pair","text":"","code":"if (FALSE) { # Load required libraries data(peerj32.obj)  # Call the function generate_taxa_dotplot_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = c(\"Genus\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = 10,   top.k.func = \"mean\",   prev.filter = 0.01,   abund.filter = 0.001,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 20,   pdf.hei = 11 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxonomic Dotplot Single — generate_taxa_dotplot_single","title":"Generate Taxonomic Dotplot Single — generate_taxa_dotplot_single","text":"function generates stacked dotplot specified taxa level paired samples. data used visualization first filtered based prevalence abundance thresholds. plot can either displayed interactively saved PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxonomic Dotplot Single — generate_taxa_dotplot_single","text":"","code":"generate_taxa_dotplot_single(   data.obj,   subject.var,   time.var = NULL,   t.level = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxonomic Dotplot Single — generate_taxa_dotplot_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string defining subject variable meta_tab time.var character string defining time variable meta_tab t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var character string defining group variable meta_tab used sorting facetting strata.var (Optional) character string defining strata variable meta_tab used sorting facetting feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf TRUE, save plot PDF file (default: TRUE) file.ann file name annotation (default: NULL) pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxonomic Dotplot Single — generate_taxa_dotplot_single","text":"`pdf` parameter set TRUE, function save PDF file return final ggplot object. `pdf` set FALSE, function return final ggplot object without creating PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_dotplot_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxonomic Dotplot Single — generate_taxa_dotplot_single","text":"","code":"if (FALSE) { # Load required libraries library(vegan) library(ggh4x) data(peerj32.obj)  # Call the function generate_taxa_dotplot_single(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = NULL,   t.level = NULL,   group.var = \"group\",   strata.var = \"sex\",   feature.level = c(\"Family\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 15,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxonomic Heatmap Long — generate_taxa_heatmap_long","title":"Generate Taxonomic Heatmap Long — generate_taxa_heatmap_long","text":"function performs hierarchical clustering microbiome data based grouping variables strata variables sample metadata generates stacked heatmaps using “pheatmap” package. can also save resulting heatmap PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxonomic Heatmap Long — generate_taxa_heatmap_long","text":"","code":"generate_taxa_heatmap_long(   data.obj,   subject.var,   time.var,   t0.level,   ts.levels,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 10,   palette = NULL,   cluster.cols = NULL,   cluster.rows = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxonomic Heatmap Long — generate_taxa_heatmap_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). subject.var character string specifying subject variable metadata. time.var character string specifying time variable metadata. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var character string specifying grouping variable metadata. Default NULL. strata.var character string specifying stratification variable metadata. Default NULL. feature.level character vector specifying taxa level(s) include analysis. Default c('Phylum', 'Family', 'Genus'). feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot numeric value specifying number top taxa plotted features.plot NULL. NULL (default), taxa plotted. top.k.func function compute top k taxa features.plot NULL. NULL (default), mean function used. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. palette Color palette used plots. cluster.cols logical variable indicating columns clustered. Default FALSE. cluster.rows logical variable indicating rows clustered. Default TRUE. pdf logical value. TRUE (default), saves plot PDF file. FALSE, plot displayed interactively without creating PDF. file.ann (Optional) character string specifying file annotation include generated PDF file's name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed pheatmap() function “pheatmap” package.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxonomic Heatmap Long — generate_taxa_heatmap_long","text":"object class pheatmap, generated heatmap plot","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxonomic Heatmap Long — generate_taxa_heatmap_long","text":"","code":"if (FALSE) { data(ecam.obj) generate_taxa_heatmap_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = c(\"Family\",\"Phylum\",\"Genus\"),   feature.dat.type = \"proportion\",   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 )  data(subset_T2D.obj) generate_taxa_heatmap_long(   data.obj = subset_T2D.obj,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"sample_body_site\",   strata.var = \"subject_gender\",   feature.level = c(\"Genus\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.001,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 30,   pdf.hei = 15 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxonomic Heatmap Pair — generate_taxa_heatmap_pair","title":"Generate Taxonomic Heatmap Pair — generate_taxa_heatmap_pair","text":"function performs hierarchical clustering microbiome data based grouping variables strata variables sample metadata generates stacked heatmaps using “pheatmap” package. can also save resulting heatmap PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxonomic Heatmap Pair — generate_taxa_heatmap_pair","text":"","code":"generate_taxa_heatmap_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 10,   palette = NULL,   cluster.rows = NULL,   cluster.cols = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxonomic Heatmap Pair — generate_taxa_heatmap_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string specifying subject variable metadata. time.var character string specifying time variable metadata. group.var character string specifying grouping variable metadata. Default NULL. strata.var character string specifying stratification variable metadata. Default NULL. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. palette Color palette used plots. cluster.rows logical variable indicating rows clustered. Default TRUE. cluster.cols logical variable indicating columns clustered. Default FALSE. pdf logical value. TRUE (default), saves plot PDF file. FALSE, plot displayed interactively without creating PDF. file.ann (Optional) character string specifying file annotation include generated PDF file's name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed pheatmap() function “pheatmap::pheatmap” package.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxonomic Heatmap Pair — generate_taxa_heatmap_pair","text":"object class pheatmap, generated heatmap plot","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxonomic Heatmap Pair — generate_taxa_heatmap_pair","text":"","code":"if (FALSE) { # Load required libraries and example data library(pheatmap) data(peerj32.obj) generate_taxa_heatmap_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = c(\"Phylum\",\"Family\",\"Genus\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.001,   cluster.rows = NULL,   cluster.cols = NULL,   base.size = 12,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxonomic Heatmap Single — generate_taxa_heatmap_single","title":"Generate Taxonomic Heatmap Single — generate_taxa_heatmap_single","text":"function performs hierarchical clustering microbiome data based grouping variables strata variables sample metadata generates stacked heatmaps using “pheatmap” package. can also save resulting heatmap PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxonomic Heatmap Single — generate_taxa_heatmap_single","text":"","code":"generate_taxa_heatmap_single(   data.obj,   subject.var,   time.var = NULL,   t.level = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 1e-04,   base.size = 10,   palette = NULL,   cluster.cols = NULL,   cluster.rows = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxonomic Heatmap Single — generate_taxa_heatmap_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var name subject variable samples time.var name time variable samples t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var name grouping variable samples strata.var name strata variable samples feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. palette Color palette used plots. cluster.cols logical variable indicating columns clustered. Default NULL. cluster.rows logical variable indicating rows clustered. Default NULL. pdf TRUE, save plot PDF file (default: TRUE) file.ann file name annotation (default: NULL) pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional arguments passed pheatmap() function “pheatmap” package.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxonomic Heatmap Single — generate_taxa_heatmap_single","text":"object class pheatmap, generated heatmap plot","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_heatmap_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxonomic Heatmap Single — generate_taxa_heatmap_single","text":"","code":"if (FALSE) { # Load required libraries and example data library(pheatmap) data(peerj32.obj)  # Generate the boxplot pair generate_taxa_heatmap_single(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   t.level = \"1\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = c(\"Family\"),   feature.dat.type = \"count\",   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 10,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Boxplot of Individual Taxa Abundance Over Time — generate_taxa_indiv_boxplot_long","title":"Generate Boxplot of Individual Taxa Abundance Over Time — generate_taxa_indiv_boxplot_long","text":"function creates boxplot showing abundance distribution individual taxa specified taxonomic level time longitudinal data. takes MicrobiomeStat data object input.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Boxplot of Individual Taxa Abundance Over Time — generate_taxa_indiv_boxplot_long","text":"","code":"generate_taxa_indiv_boxplot_long(   data.obj,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   features.plot = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   top.k.plot = NULL,   top.k.func = NULL,   transform = c(\"identity\", \"sqrt\", \"log\"),   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Boxplot of Individual Taxa Abundance Over Time — generate_taxa_indiv_boxplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). subject.var character string specifying subject variable metadata. time.var character string specifying time variable metadata. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var Optional grouping variable metadata. strata.var Optional stratification variable metadata. feature.level Taxonomic level(s) boxplots. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. top.k.plot numeric value specifying number top taxa plotted features.plot NULL. NULL (default), taxa plotted. top.k.func function compute top k taxa features.plot NULL. NULL (default), mean function used. transform string indicating transformation apply data plotting. Options : - \"identity\": transformation (default) - \"sqrt\": Square root transformation - \"log\": Logarithmic transformation. Zeros replaced half minimum non-zero value taxon log transformation. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf Logical, TRUE save plot multi-page PDF file. Default TRUE. file.ann Optional string file annotation add PDF name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional arguments passed ggplot2 functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Boxplot of Individual Taxa Abundance Over Time — generate_taxa_indiv_boxplot_long","text":"ggplot object showing abundance distribution taxa time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Boxplot of Individual Taxa Abundance Over Time — generate_taxa_indiv_boxplot_long","text":"","code":"if (FALSE) { # Generate the boxplot pair data(ecam.obj) generate_taxa_indiv_boxplot_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   strata.var = NULL,   feature.level = c(\"Phylum\"),   feature.dat.type = \"proportion\",   transform = \"log\",   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\",   \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\", \"#aec7e8\",   \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \"#f7b6d2\",   \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#f0f0f0\", \"#3182bd\"),   pdf = TRUE,   file.ann = NULL,   pdf.wid = 25,   pdf.hei = 8.5 )  data(peerj32.obj)  generate_taxa_indiv_boxplot_long(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   t0.level = \"1\",   ts.levels = \"2\",   group.var = \"group\",   strata.var = NULL,   feature.level = c(\"Family\"),   features.plot = NULL,   feature.dat.type = \"other\",   top.k.plot = NULL,   top.k.func = NULL,   transform = \"log\",   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","title":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","text":"function generates boxplots visualize taxonomic composition samples single time point longitudinal study. provides options grouping stratifying data, selecting top k features based user-defined function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","text":"","code":"generate_taxa_indiv_boxplot_single(   data.obj,   subject.var,   time.var,   t.level = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   features.plot = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   top.k.plot = NULL,   top.k.func = NULL,   transform = c(\"identity\", \"sqrt\", \"log\"),   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string indicating variable subject identifiers. time.var string indicating variable time points. NULL, function assumes data single time point provided. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var Optional string specifying variable groups. strata.var Optional string specifying variable strata. feature.level string specifying taxonomic level plot. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. transform string indicating transformation apply data plotting. Options : - \"identity\": transformation (default) - \"sqrt\": Square root transformation - \"log\": Logarithmic transformation. Zeros replaced half minimum non-zero value taxon log transformation. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size numeric value specifying base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF file. Default 11. pdf.hei numeric value specifying height PDF file. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","text":"list ggplot objects taxonomic level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","text":"function generates boxplot taxa abundances single time point longitudinal study. boxplot can stratified group variable /variables. allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_boxplot_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Boxplots for Single Time Point — generate_taxa_indiv_boxplot_single","text":"","code":"if (FALSE) { # Generate the boxplot pair data(ecam.obj) generate_taxa_indiv_boxplot_single(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month\",   t.level = NULL,   group.var = \"antiexposedall\",   strata.var = NULL,   feature.level = c(\"Phylum\"),   feature.dat.type = \"proportion\",   transform = \"log\",   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 20,   theme.choice = \"classic\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) data(peerj32.obj) generate_taxa_indiv_boxplot_single(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   t.level = \"1\",   group.var = \"group\",   strata.var = \"sex\",   feature.level = c(\"Family\"),   features.plot = NULL,   feature.dat.type = \"count\",   top.k.plot = NULL,   top.k.func = NULL,   transform = \"log\",   prev.filter = 0,   abund.filter = 0,   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_boxplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","title":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","text":"function generates boxplots visualize change taxonomic composition samples two time points longitudinal study. also provides options grouping stratifying data, selecting top k features based user-defined function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_boxplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","text":"","code":"generate_taxa_indiv_change_boxplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   change.base = NULL,   feature.change.func = \"relative change\",   feature.level = NULL,   features.plot = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_boxplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string indicating variable subject identifiers. time.var string indicating variable time points. group.var Optional string specifying variable groups. strata.var Optional string specifying variable strata. change.base string indicating base time point change computation. match one time points present metadata 'time.var' variable. feature.change.func Specifies method function used compute change two time points. following options available: - \"absolute change\": Computes difference abundance values two time points (`value_time_2` `value_time_1`). - \"log fold change\": Computes log2 fold change two time points. zero abundances, imputation performed using half minimum nonzero value feature level respective time point taking logarithm. - \"relative change\": Computes relative change `(value_time_2 - value_time_1) / (value_time_2 + value_time_1)`. time points abundance 0, change defined 0. - custom function: user-defined function provided, take two numeric vectors input corresponding abundances two time points (`value_time_1` `value_time_2`) return numeric vector computed change. custom function applied directly. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size numeric value specifying base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF. Default 11. pdf.hei numeric value specifying height PDF. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_boxplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","text":"list ggplot objects, one taxonomic level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_boxplot_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","text":"function generates boxplot change taxa abundances two time points longitudinal study. boxplot can stratified group variable /variables. allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_boxplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Individual Change Boxplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_boxplot_pair","text":"","code":"if (FALSE) { # Load required libraries and data library(vegan) library(ggh4x) data(peerj32.obj)  # Generate the boxplot pair generate_taxa_indiv_change_boxplot_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   strata.var = \"sex\",   change.base = \"1\",   feature.change.func = \"log fold change\",   feature.level = c(\"Family\"),   features.plot = NULL,   feature.dat.type = \"count\",   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 20,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_scatterplot_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","title":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","text":"function generates scatterplots visualize change taxonomic composition samples two time points longitudinal study. also provides options grouping stratifying data, selecting top k features based user-defined function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_scatterplot_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","text":"","code":"generate_taxa_indiv_change_scatterplot_pair(   data.obj,   subject.var,   time.var,   group.var = NULL,   strata.var = NULL,   change.base = NULL,   feature.change.func = \"log fold change\",   feature.level = NULL,   features.plot = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_scatterplot_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string indicating variable subject identifiers. time.var string indicating variable time points. group.var Optional string specifying variable groups. strata.var Optional string specifying variable strata. change.base string indicating base time point change computation. match one time points present metadata 'time.var' variable. feature.change.func Specifies method function used compute change two time points. following options available: - \"absolute change\": Computes difference count values two time points (`count_ts` `count_t0`). - \"log fold change\": Computes log2 fold change two time points. zero counts, imputation performed using half minimum nonzero value feature level respective time point taking logarithm. - \"relative change\": Computes relative change `(count_ts - count_t0) / (count_ts + count_t0)`. time points count 0, change defined 0. - custom function: user-defined function provided, take two numeric vectors input corresponding counts two time points (`count_t0` `count_ts`) return numeric vector computed change. custom function applied directly. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size numeric value specifying base font size plot. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette character vector specifying color palette. Default NULL. pdf logical value indicating whether save plot PDF. Default TRUE. file.ann string additional annotation file name. Default NULL. pdf.wid numeric value specifying width PDF file. Default 11. pdf.hei numeric value specifying height PDF file. Default 8.5. ... Additional arguments passed function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_scatterplot_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","text":"list ggplot objects, one taxonomic level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_scatterplot_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","text":"function generates scatterplot change taxa abundances two time points longitudinal study. scatterplot can stratified group variable /variables. also allows different taxonomic levels used specific number features included plot. function also options customize size, theme, color palette plot, save plot PDF.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_change_scatterplot_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Individual Change Scatterplot Pairs for Taxonomic Composition Data — generate_taxa_indiv_change_scatterplot_pair","text":"","code":"if (FALSE) {  library(vegan) data(peerj32.obj) peerj32.obj$meta.dat <- peerj32.obj$meta.dat %>% dplyr::select(all_of(\"subject\")) %>% dplyr::distinct() %>% dplyr::mutate(cons = runif(dplyr::n(),0,5)) %>% dplyr::left_join(peerj32.obj$meta.dat %>% rownames_to_column(\"sample\"),by = \"subject\") %>% tibble::column_to_rownames(\"sample\")   # Generate the scatterplot pairs  generate_taxa_indiv_change_scatterplot_pair(    data.obj = peerj32.obj,    subject.var = \"subject\",    time.var = \"time\",    group.var = \"cons\",    strata.var = \"sex\",    change.base = \"1\",    feature.change.func = \"log fold change\",    feature.level = \"Genus\",    top.k.plot = NULL,    top.k.func = NULL,    prev.filter = 0.01,    abund.filter = 0.01  ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_spaghettiplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate longitudinal line plots of taxonomic composition — generate_taxa_indiv_spaghettiplot_long","title":"Generate longitudinal line plots of taxonomic composition — generate_taxa_indiv_spaghettiplot_long","text":"function generates longitudinal line plots taxonomic composition microbiome data time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_spaghettiplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate longitudinal line plots of taxonomic composition — generate_taxa_indiv_spaghettiplot_long","text":"","code":"generate_taxa_indiv_spaghettiplot_long(   data.obj,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   features.plot = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_spaghettiplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate longitudinal line plots of taxonomic composition — generate_taxa_indiv_spaghettiplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string defining subject variable meta_tab. time.var character string defining time variable meta_tab. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var character string defining group variable meta_tab used sorting facetting. strata.var (Optional) character string defining strata variable meta_tab used sorting facetting. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf logical value. TRUE (default), plot saved PDF file. FALSE, plot displayed interactively without creating PDF file. file.ann (Optional) character string specifying file annotation include generated PDF file's name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_spaghettiplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate longitudinal line plots of taxonomic composition — generate_taxa_indiv_spaghettiplot_long","text":"`pdf` parameter set TRUE, function save PDF file return final ggplot object. `pdf` set FALSE, function return final ggplot object without creating PDF file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_indiv_spaghettiplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate longitudinal line plots of taxonomic composition — generate_taxa_indiv_spaghettiplot_long","text":"","code":"if (FALSE) { data(ecam.obj) generate_taxa_indiv_spaghettiplot_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   strata.var = \"antiexposedall\",   feature.level = c(\"Phylum\"),   features.plot = NULL,   feature.dat.type = \"proportion\",   top.k.plot = 5,   top.k.func = \"sd\",   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_spaghettiplot_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate longitudinal spaghettiplot plots of taxonomic composition — generate_taxa_spaghettiplot_long","title":"Generate longitudinal spaghettiplot plots of taxonomic composition — generate_taxa_spaghettiplot_long","text":"function generates spaghettiplot plot taxonomic composition microbiome data time.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_spaghettiplot_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate longitudinal spaghettiplot plots of taxonomic composition — generate_taxa_spaghettiplot_long","text":"","code":"generate_taxa_spaghettiplot_long(   data.obj,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   group.var = NULL,   strata.var = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   features.plot = NULL,   top.k.plot = NULL,   top.k.func = NULL,   prev.filter = 0.01,   abund.filter = 0.01,   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_spaghettiplot_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate longitudinal spaghettiplot plots of taxonomic composition — generate_taxa_spaghettiplot_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string defining subject variable meta_tab. column contains unique subject IDs identify sample's subject origin. Required plotting individual subject lines. time.var character string defining time variable meta_tab. column meta_tab represents time points longitudinal samples. Required identify time axis plotting. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. group.var character string defining grouping variable meta_tab. variable used coloring lines plot faceting group. example, variable treatment group. Optional, can set NULL. strata.var (Optional) character string defining stratification variable meta_tab. variable used nested faceting plot. example, clinical strata like disease status. Optional, can set NULL. set, plot show nested facetting strata within feature. feature.level column name(s) feature annotation matrix (feature.ann) data.obj use summarization plotting. Can taxonomic levels like \"Phylum\", \"Genus\", annotation columns like \"OTU_ID\". character vector specifying one column names feature.ann. special value \"original\" can also provided, use original row names feature.ann. Multiple columns can provided, data plotted separately column. **NULL, NULL value lead errors.** feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. top.k.plot Integer specifying number top k features plot, `features.plot` NULL. Default NULL, case features passing filters plotted. top.k.func Function use selecting top k features, `features.plot` NULL. Options include inbuilt functions like \"mean\", \"sd\", custom function. Default NULL, case features selected abundance. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette use mapping groups colors plot. Must character vector colors. Default palette used NULL. specified, length number groups/levels group.var. Colors mapped groups order levels. pdf logical value. TRUE (default), saves plot PDF file. FALSE, plot displayed interactively without creating PDF. file.ann (Optional) character string specifying file annotation include generated PDF file's name. pdf.wid Width PDF plots. pdf.hei Height PDF plots. ... Additional parameters passed.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_spaghettiplot_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate longitudinal spaghettiplot plots of taxonomic composition — generate_taxa_spaghettiplot_long","text":"ggplot object containing longitudinal line plot.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_spaghettiplot_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate longitudinal spaghettiplot plots of taxonomic composition — generate_taxa_spaghettiplot_long","text":"","code":"if (FALSE) { data(ecam.obj) generate_taxa_spaghettiplot_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   strata.var = \"antiexposedall\",   feature.level = c(\"Phylum\"),   features.plot = NULL,   feature.dat.type = \"proportion\",   top.k.plot = 10,   top.k.func = \"mean\",   prev.filter = 0,   abund.filter = 0,   base.size = 16,   theme.choice = \"bw\",   palette = NULL,   pdf = TRUE,   file.ann = NULL ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Taxa Test Generation — generate_taxa_test_long","title":"Longitudinal Taxa Test Generation — generate_taxa_test_long","text":"Generate longitudinal taxa test statistics based provided MicrobiomeStat data object user-specified variables.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Taxa Test Generation — generate_taxa_test_long","text":"","code":"generate_taxa_test_long(   data.obj,   subject.var,   time.var = NULL,   t0.level,   ts.levels,   group.var,   adj.vars,   feature.level,   prev.filter = 0,   abund.filter = 0,   feature.dat.type = c(\"count\", \"proportion\"),   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Taxa Test Generation — generate_taxa_test_long","text":"data.obj MicrobiomeStat formatted list object. subject.var string specifying subject variable column metadata. time.var string specifying time variable column metadata. Default NULL. t0.level numeric specifying baseline time level. ts.levels vector numerics specifying time points considered analysis. group.var string specifying grouping variable column metadata. adj.vars string vector specifying additional covariates metadata. feature.level string specifying taxonomic level analysis. prev.filter numeric specifying minimum prevalence filter taxa. Default 0. abund.filter numeric specifying minimum abundance filter taxa. Default 0. feature.dat.type string specifying feature data type. Either \"count\" \"proportion\". Default \"count\". ... Additional arguments pass function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Taxa Test Generation — generate_taxa_test_long","text":"list dataframes, corresponding feature level. dataframe contains calculated taxa changes, p-values statistics linear model.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Taxa Test Generation — generate_taxa_test_long","text":"","code":"if (FALSE) { # Load example data data(peerj32.obj)  results <- generate_taxa_test_long(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   t0.level = \"1\",   ts.levels = \"2\",   group.var = \"group\",   adj.vars = \"sex\",   feature.level = \"Phylum\",   prev.filter = 0.001,   abund.filter = 0.001,   feature.dat.type = \"count\" ) data(ecam.obj) results <- generate_taxa_test_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month\",   t0.level = NULL,   ts.levels = NULL,   group.var = \"diet\",   adj.vars = \"antiexposedall\",   feature.level = \"Phylum\",   prev.filter = 0.001,   abund.filter = 0.001,   feature.dat.type = \"proportion\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Taxa Test Pair — generate_taxa_test_pair","title":"Generate Taxa Test Pair — generate_taxa_test_pair","text":"function takes MicrobiomeStat data object input, filters taxa based prevalence abundance thresholds, aggregates taxon abundances sample, fits linear mixed effects models using linda method identify significant taxon changes across groups time, accounting specified covariates.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Taxa Test Pair — generate_taxa_test_pair","text":"","code":"generate_taxa_test_pair(   data.obj,   subject.var,   time.var = NULL,   group.var,   adj.vars,   feature.level,   prev.filter = 0,   abund.filter = 0,   feature.dat.type = c(\"count\", \"proportion\"),   feature.sig.level = 0.1,   feature.mt.method = \"fdr\",   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Taxa Test Pair — generate_taxa_test_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var string specifies name subject variable column metadata. time.var string specifies name time variable column metadata. provided, NULL default. group.var string specifies name grouping variable column metadata linear modelling. adj.vars vector strings specify names additional variables used covariates analysis. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.sig.level numeric threshold, usually 0 1, assessing significance individual taxa. Default 0.1. feature.mt.method character string specifying method employed multiple testing correction (e.g., \"fdr\" False Discovery Rate). Default \"fdr\". ... Additional parameters passed linda function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Taxa Test Pair — generate_taxa_test_pair","text":"named list containing data frames summarizing taxon test results taxonomic level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Taxa Test Pair — generate_taxa_test_pair","text":"list element corresponds taxonomic level specified `feature.level`. data frame contains columns taxon name, log2 fold change, p-values, adjusted p-values, mean abundance, mean prevalence, output element `linda` taxon found significant.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Taxa Test Pair — generate_taxa_test_pair","text":"","code":"if (FALSE) { data(peerj32.obj) test.list <- generate_taxa_test_pair(   data.obj = peerj32.obj,   subject.var = \"subject\",   time.var = \"time\",   group.var = \"group\",   adj.vars = c(\"sex\"),   feature.level = c(\"Genus\"),   prev.filter = 0.1,   abund.filter = 0.0001,   feature.dat.type = \"count\" ) plot.list <- generate_taxa_volcano_single(  data.obj = peerj32.obj,  group.var = \"group\",  test.list = test.list,  feature.sig.level = 0.1,  feature.mt.method = \"none\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","title":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","text":"function applies differential abundance analysis using LinDA data set. function filters taxa based prevalence abundance, aggregates applies LinDA method. Finally, creates report significant taxa relevant statistics.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","text":"","code":"generate_taxa_test_single(   data.obj,   time.var = NULL,   t.level = NULL,   group.var,   adj.vars,   prev.filter = 0,   abund.filter = 0,   feature.level,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.sig.level = 0.1,   feature.mt.method = \"fdr\",   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. time.var Character string specifying column name metadata containing time variable. Used subset data single timepoint provided. Default NULL subset. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. group.var Character string specifying column name metadata containing grouping categories. used predictor differential abundance testing. adj.vars Character vector specifying column names metadata containing covariates. used adjustment differential abundance testing. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. feature.level column name feature annotation matrix (feature.ann) data.obj use summarization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.sig.level numeric threshold, usually 0 1, assessing significance individual taxa. Default 0.1. feature.mt.method character string specifying method employed multiple testing correction (e.g., \"fdr\" False Discovery Rate). Default \"fdr\". ... Additional arguments passed ZicoSeq function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","text":"list tibble(s) containing information significant taxa, including R.Squared, F.Statistic, Estimate, P.Value, Adjusted.P.Value, Mean.Proportion, Mean.Prevalence, SD.Abundance SD.Prevalence.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","text":"function facilitates differential abundance analysis utilizing LinDA method: 1. specific time variable level provided, data subsetted accordingly. 2. Extracts OTU table sample metadata. 3. feature data type \"count\", normalizes data using \"TSS\" transformation. 4. feature level \"original\", aggregates OTU table taxonomic levels specified feature.level. 5. Executes LinDA method aggregated original table considering grouping adjustment variables. 6. Extracts significant taxa's statistics results tables, include coefficients, standard errors, p-values, adjusted p-values, average abundances, prevalence. 7. Returns list result tables element corresponds particular taxonomic level. essence, function streamlines preprocessing, executes LinDA-based differential abundance testing, assembles tables pertinent results significant taxa. also supports adjusting covariates allows taxonomic aggregation diverse levels customized analyses.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_test_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct Differential Abundance Testing Using LinDA Method in MicrobiomeStat Package — generate_taxa_test_single","text":"","code":"if (FALSE) { data(peerj32.obj) test.list <- generate_taxa_test_single(     data.obj = peerj32.obj,     time.var = \"time\",     t.level = \"2\",     group.var = \"group\",     adj.vars = \"sex\",     feature.dat.type = \"count\",     feature.level = c(\"Phylum\",\"Genus\",\"Family\"),     prev.filter = 0.1,     abund.filter = 0.0001,     feature.sig.level = 0.1,     feature.mt.method = \"none\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","title":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","text":"function designed conduct longitudinal trend test microbiome data. primary aim discern abundance various microbial taxa changes time /response different experimental observational groups. function delivers robust statistical insights enable researchers draw meaningful conclusions dynamics microbial populations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","text":"","code":"generate_taxa_trend_test_long(   data.obj,   subject.var,   time.var = NULL,   group.var = NULL,   adj.vars = NULL,   feature.level,   prev.filter = 0,   abund.filter = 0,   feature.dat.type = c(\"count\", \"proportion\"),   feature.sig.level = 0.1,   feature.mt.method = \"fdr\",   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. subject.var character string indicates column name metadata uniquely identifies subject sample. time.var character string representing time variable column metadata. Time points numeric. , function convert numeric. Default NULL. group.var character string specifying grouping variable column metadata. variable differentiates different experimental observational groups. adj.vars vector character strings. string denote column name metadata serve covariate analysis. variables might account potential confounding influences. Default NULL. feature.level character string indicating taxonomic resolution analysis (e.g., \"Phylum\", \"Class\"). choice determine granularity analysis. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. feature.dat.type character string, either \"count\" \"proportion\", indicating nature data `data.obj`. helps function determine normalization required. Default \"count\". feature.sig.level numeric threshold, usually 0 1, assessing significance individual taxa. Default 0.1. feature.mt.method character string specifying method employed multiple testing correction (e.g., \"fdr\" False Discovery Rate). Default \"fdr\". ... Additional arguments cater specialized requirements. now, placeholder used.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","text":"list dataframes, dataframe representing specific taxonomic level (specified `feature.level`). dataframes contain essential statistics, including taxa changes, p-values, metrics derived linear model.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","text":"Based whether group.var, adj.vars, time.var NULL, formula tests: - time.var NULL:   - group.var NULL adj.vars NULL:     - Tests adj.vars main effects .     - Adjusted adj.vars group.var time.var.   - group.var NULL adj.vars NULL:     - Tests adj.vars group.var main effects.     - Adjusted adj.vars time.var.   - group.var NULL adj.vars NULL:     - Tests group.var main effects .     - Unadjusted adj.vars adjusted group.var.   - group.var adj.vars NULL:     - Tests intercept .     - Unadjusted analysis. - time.var NULL:   - group.var NULL adj.vars NULL:     - Tests adj.vars time.var main effects.     - Adjusted adj.vars group.var.   - group.var NULL adj.vars NULL:     - Tests adj.vars main effects.     - Tests group.var time.var main effects.     - Tests group.var x time.var interaction.     - Adjusted adj.vars.   - group.var NULL adj.vars NULL:     - Tests group.var time.var main effects.     - Tests group.var x time.var interaction.     - Unadjusted analysis.   - group.var adj.vars NULL:     - Tests time.var main effect .     - Unadjusted analysis. formula combines appropriate terms based variables NULL. Subject variability accounted random effects. group.var = NULL adj.vars = NULL time.var NULL, slope time.var tested without adjusting additional covariates.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Taxa Trend Test Generation — generate_taxa_trend_test_long","text":"","code":"if (FALSE) { # Example 1 data(\"ecam.obj\") generate_taxa_trend_test_long(   data.obj = ecam.obj,   subject.var = \"studyid\",   time.var = \"month_num\",   group.var = \"delivery\",   feature.level = c(\"Phylum\",\"Class\"),   feature.dat.type = c(\"count\") )  # Example 2 data(\"subset_T2D.obj\") test.list <- generate_taxa_trend_test_long(   data.obj = subset_T2D.obj,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   group.var = \"subject_race\",   adj.vars = \"sample_body_site\",   prev.filter = 0.1,   abund.filter = 0.001,   feature.level = c(\"Genus\",\"Family\"),   feature.dat.type = c(\"count\") )  plot.list <- generate_taxa_trend_volcano_long(   data.obj = subset_T2D.obj,   group.var = \"subject_race\",   time.var = \"visit_number_num\",   test.list = test.list,   feature.sig.level = 0.1,   feature.mt.method = \"none\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_volcano_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate volcano plots for longitudinal taxa trend test — generate_taxa_trend_volcano_long","title":"Generate volcano plots for longitudinal taxa trend test — generate_taxa_trend_volcano_long","text":"Generate volcano plots longitudinal taxa trend test","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_volcano_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate volcano plots for longitudinal taxa trend test — generate_taxa_trend_volcano_long","text":"","code":"generate_taxa_trend_volcano_long(   data.obj,   group.var = NULL,   time.var = NULL,   test.list,   feature.sig.level = 0.1,   feature.mt.method = \"fdr\" )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_volcano_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate volcano plots for longitudinal taxa trend test — generate_taxa_trend_volcano_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. group.var grouping variable tested, found metadata time.var time variable used analysis test.list list test results returned generate_taxa_trend_test_long feature.sig.level significance level cutoff highlighting taxa feature.mt.method Multiple testing correction method, \"fdr\" \"none\"","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_volcano_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate volcano plots for longitudinal taxa trend test — generate_taxa_trend_volcano_long","text":"list ggplot objects volcano plots taxonomic level","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_trend_volcano_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate volcano plots for longitudinal taxa trend test — generate_taxa_trend_volcano_long","text":"","code":"# data(\"subset_T2D.obj\") # test_list <- generate_taxa_trend_test_long(data.obj, ...) # volcano_plots <- generate_taxa_trend_volcano_long(data.obj,                                                  # group.var,                                                  # time.var,                                                  # test_list,                                                  # feature.sig.level = 0.05,                                                  # feature.mt.method = \"fdr\")"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_test_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","title":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","text":"function calculates volatility taxa abundances longitudinal microbiome data. tests association abundance volatility grouping variable.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_test_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","text":"","code":"generate_taxa_volatility_test_long(   data.obj,   time.var,   subject.var,   group.var,   adj.vars = NULL,   prev.filter = 0,   abund.filter = 0,   feature.level,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.mt.method = c(\"fdr\", \"none\"),   feature.sig.level = 0.1,   transform = \"CLR\",   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_test_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. time.var Character string specifying column name metadata containing numeric time variable. contain ordered time points subject. Required calculate volatility time. subject.var Character string specifying column name metadata containing unique subject IDs. Required calculate volatility within subjects time. group.var Character string specifying column name metadata containing grouping categories. Volatility compared groups using linear models. Required. adj.vars Character vector specifying column names metadata containing covariates adjust linear models. Optional, can NULL. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. feature.level Character vector specifying taxonomic level(s) aggregate abundance data volatility calculation, e.g. c(\"Phylum\", \"Genus\"). special value \"original\" can also provided, use original taxon identifiers. feature.dat.type Character string specifying data type abundance data. one \"count\", \"proportion\", \"\". Determines transform. match units data used feature.level. feature.mt.method Character string specifying multiple testing correction method. Either \"fdr\" BH FDR control \"none\" correction. Default \"fdr\". feature.sig.level Numeric specifying significance threshold statistical testing. Taxa adj.p level considered significant. Default 0.1. transform Character string specifying transformation method. \"CLR\", count proportion data CLR transformed volatility calculation. Default \"CLR\". ... Additional arguments passed methods.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_test_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","text":"list test results. results returned tidy dataframe format, including coefficients, standard errors, statistics, p-values linear models ANOVA tests.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_test_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","text":"Volatility calculated mean absolute difference abundance consecutive time points, normalized time difference:   mean(|abundance(t+1) - abundance(t)| / (time(t+1) - time(t))) function transforms abundance data first volatility calculation. Default transform 'CLR' count proportion data. transform types. count data, pseudocount 0.5 added CLR transform. proportion data, zeros replaced 1/2 minimum positive value CLR. calculates volatility within subject, tests association grouping variable using linear models. grouping variable multiple levels, ANOVA performed.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_test_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal Taxa Abundance Volatility Test — generate_taxa_volatility_test_long","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") test.list <- generate_taxa_volatility_test_long( data.obj = subset_T2D.obj, time.var = \"visit_number\", subject.var = \"subject_id\", group.var = \"subject_race\", adj.vars = \"sample_body_site\", prev.filter = 0.1, abund.filter = 0.0001, feature.level = c(\"Genus\"), feature.dat.type = \"count\", transform = \"CLR\" ) plot.list <- generate_taxa_volatility_volcano_long(data.obj = subset_T2D.obj,                                                    group.var = \"subject_race\",                                                    test.list = test.list,                                                    feature.sig.level = 0.1,                                                    feature.mt.method = \"none\")  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_volcano_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate volcano plots for longitudinal taxa abundance volatility test — generate_taxa_volatility_volcano_long","title":"Generate volcano plots for longitudinal taxa abundance volatility test — generate_taxa_volatility_volcano_long","text":"Generate volcano plots longitudinal taxa abundance volatility test","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_volcano_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate volcano plots for longitudinal taxa abundance volatility test — generate_taxa_volatility_volcano_long","text":"","code":"generate_taxa_volatility_volcano_long(   data.obj,   group.var,   test.list,   feature.sig.level = 0.1,   feature.mt.method = c(\"fdr\", \"none\") )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_volcano_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate volcano plots for longitudinal taxa abundance volatility test — generate_taxa_volatility_volcano_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. group.var grouping variable tested, found metadata test.list list test results returned generate_taxa_volatility_test_long feature.sig.level significance level cutoff highlighting taxa feature.mt.method Multiple testing correction method, \"fdr\" \"none\"","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_volcano_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate volcano plots for longitudinal taxa abundance volatility test — generate_taxa_volatility_volcano_long","text":"list ggplot objects volcano plots taxonomic level","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volatility_volcano_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate volcano plots for longitudinal taxa abundance volatility test — generate_taxa_volatility_volcano_long","text":"","code":"# data(\"subset_T2D.obj\") # test_list <- generate_taxa_volatility_test_long(data.obj, ...) # volcano_plots <- generate_taxa_volatility_volcano_long(data.obj,                                                       # group.var,                                                       # test.list,                                                       # feature.sig.level = 0.05,                                                       # feature.mt.method = \"fdr\")"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volcano_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate volcano plots for taxa differential test for a single time point — generate_taxa_volcano_single","title":"Generate volcano plots for taxa differential test for a single time point — generate_taxa_volcano_single","text":"Generate volcano plots taxa differential test single time point","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volcano_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate volcano plots for taxa differential test for a single time point — generate_taxa_volcano_single","text":"","code":"generate_taxa_volcano_single(   data.obj,   group.var = NULL,   test.list,   feature.sig.level = 0.1,   feature.mt.method = \"fdr\" )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volcano_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate volcano plots for taxa differential test for a single time point — generate_taxa_volcano_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. group.var grouping variable tested, found metadata test.list list test results returned generate_taxa_trend_test_long feature.sig.level significance level cutoff highlighting taxa feature.mt.method Multiple testing correction method, \"fdr\" \"none\"","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volcano_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate volcano plots for taxa differential test for a single time point — generate_taxa_volcano_single","text":"list ggplot objects volcano plots taxonomic level","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/generate_taxa_volcano_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate volcano plots for taxa differential test for a single time point — generate_taxa_volcano_single","text":"","code":"data(peerj32.obj) test.list <- generate_taxa_test_single(     data.obj = peerj32.obj,     time.var = \"time\",     t.level = \"2\",     group.var = \"group\",     adj.vars = \"sex\",     feature.dat.type = \"count\",     feature.level = c(\"Phylum\",\"Genus\",\"Family\"),     prev.filter = 0.1,     abund.filter = 0.0001,     feature.sig.level = 0.1,     feature.mt.method = \"none\" ) #> Rule 1 passed: data.obj is a list. #> Rule 2 passed: meta.dat is a data.frame. #> Rule 3 passed: The row names of feature.tab match the row names of feature.ann. #> Rule 4 passed: The column names of feature.tab match the row names of meta.dat. #> Rule 5 passed: feature.tab is a matrix. #> Rule 6 passed: feature.ann is a matrix. #> Please note: The data components should follow base R data.frame and matrix structures, not phyloseq's formal class. #> Validation passed. #> Note: Passing validation does not guarantee the absence of all data issues. Further data exploration may be needed. #> Data has been subsetted based on the provided condition. #> Updated metadata to match the subsetted data. #> The following samples were excluded: sample-1, sample-3, sample-5, sample-7, sample-9, sample-11, sample-13, sample-15, sample-17, sample-19, sample-21, sample-23, sample-25, sample-27, sample-29, sample-31, sample-33, sample-35, sample-37, sample-39, sample-41, sample-43 #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> Your data is in raw format ('Raw'). Normalization is crucial for further analyses. Now, 'mStat_normalize_data' function is automatically applying 'TSS' transformation. #> Data has been successfully normalized using TSS method. #> 0 features are filtered! #> The filtered data has 22 samples and 6 features that will be tested! #> Fit linear models ... #> Completed. #> 0 features are filtered! #> The filtered data has 22 samples and 115 features that will be tested! #> Fit linear models ... #> Completed. #> 0 features are filtered! #> The filtered data has 22 samples and 18 features that will be tested! #> Fit linear models ... #> Completed.    volcano_plots <- generate_taxa_volcano_single(data.obj = peerj32.obj,                                                  group.var = \"group\",                                                  test.list = test.list,                                                  feature.sig.level = 0.1,                                                  feature.mt.method = \"none\")"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is.na.null.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is NA or NULL — is.na.null","title":"Check if an Object is NA or NULL — is.na.null","text":"function checks given object `NA` `NULL`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is.na.null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is NA or NULL — is.na.null","text":"","code":"# S3 method for null is.na(x)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is.na.null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is NA or NULL — is.na.null","text":"x object check.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is.na.null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is NA or NULL — is.na.null","text":"logical value indicating whether input `NA` `NULL`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is.na.null.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if an Object is NA or NULL — is.na.null","text":"function first checks object `x` `NULL`. , checks first element `x` `NA`. either condition true, returns `TRUE`; otherwise, returns `FALSE`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is.na.null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an Object is NA or NULL — is.na.null","text":"","code":"if (FALSE) { # Check if a variable is NA or NULL is.na.null(NA)  # TRUE is.na.null(NULL)  # TRUE is.na.null(1)  # FALSE }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a variable is categorical — is_categorical","title":"Determine if a variable is categorical — is_categorical","text":"function checks given variable categorical. variable considered categorical factor, character, logical type. Additionally, numeric variables small number unique values (less specified threshold) also considered categorical.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a variable is categorical — is_categorical","text":"","code":"is_categorical(x)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a variable is categorical — is_categorical","text":"x variable tested categorical.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if a variable is categorical — is_categorical","text":"logical value indicating whether input variable categorical (TRUE) (FALSE).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if a variable is categorical — is_categorical","text":"","code":"is_categorical(factor(c(\"A\", \"B\", \"C\"))) #> [1] TRUE is_categorical(c(\"A\", \"B\", \"C\")) #> [1] TRUE is_categorical(c(TRUE, FALSE)) #> [1] TRUE is_categorical(c(1, 2, 3, 4)) #> [1] TRUE is_categorical(c(1.2, 3.5, 4.6, 7.8)) #> [1] TRUE"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_continuous_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Variable is Continuous Numeric — is_continuous_numeric","title":"Check if a Variable is Continuous Numeric — is_continuous_numeric","text":"function checks given variable continuous numeric checking numeric least 10 unique values.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_continuous_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Variable is Continuous Numeric — is_continuous_numeric","text":"","code":"is_continuous_numeric(x)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_continuous_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Variable is Continuous Numeric — is_continuous_numeric","text":"x variable want check.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_continuous_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Variable is Continuous Numeric — is_continuous_numeric","text":"Logical. Returns TRUE variable continuous numeric, FALSE otherwise.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_continuous_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Variable is Continuous Numeric — is_continuous_numeric","text":"","code":"is_continuous_numeric(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) # TRUE #> [1] TRUE is_continuous_numeric(c(1, 2, 3, 4, 5)) # FALSE #> [1] FALSE is_continuous_numeric(c('a', 'b', 'c')) # FALSE #> [1] FALSE"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_rarefied.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the data has been rarefied — is_rarefied","title":"Check if the data has been rarefied — is_rarefied","text":"function checks data rarefied inspecting sum column (represents sample OTU table) equal.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_rarefied.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the data has been rarefied — is_rarefied","text":"","code":"is_rarefied(data.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_rarefied.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the data has been rarefied — is_rarefied","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_rarefied.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the data has been rarefied — is_rarefied","text":"boolean value indicating whether data rarefied. returns   TRUE data rarefied, FALSE otherwise.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/is_rarefied.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the data has been rarefied — is_rarefied","text":"","code":"# Assuming peerj32.obj is a data object with OTU and metadata tables data(peerj32.obj) is_rarefied(peerj32.obj) #> [1] FALSE"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear (Lin) model for differential abundance (DA) analysis — linda","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"function implements simple, robust, highly scalable approach tackle compositional effects differential abundance analysis. fits linear regression models centered log2-ratio transformed data, identifies bias term due transformation compositional effect, corrects bias using mode regression coefficients. fit mixed-effect models. Note linda developed separately MicrobiomeStat functions, usage different.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"","code":"linda(   feature.dat,   meta.dat,   phyloseq.obj = NULL,   formula,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   prev.filter = 0,   mean.abund.filter = 0,   max.abund.filter = 0,   is.winsor = TRUE,   outlier.pct = 0.03,   adaptive = TRUE,   zero.handling = c(\"pseudo-count\", \"imputation\"),   pseudo.cnt = 0.5,   corr.cut = 0.1,   p.adj.method = \"BH\",   alpha = 0.05,   n.cores = 1,   verbose = TRUE )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"feature.dat data frame matrix representing observed OTU table. Rows represent taxa; columns represent samples. NAs expected OTU tables allowed function linda. meta.dat data frame covariates. rows meta.dat correspond columns feature.dat. NAs allowed. NAs, corresponding samples removed analysis. phyloseq.obj phyloseq object (optional). provided, feature.dat meta.dat extracted object. formula Character. example: formula = '~x1*x2+x3+(1|id)'. least one fixed effect required. feature.dat.type Character. Specifies type data feature.dat. Options \"count\" (default), \"proportion\" \"\". \"count\", data treated count data undergo zero-handling. \"proportion\", data treated compositional data undergo half minimum imputation zeros. \"\", filters (max.abund.filter, mean.abund.filter, prev.filter) reset 0. prev.filter real value 0 1; taxa prevalence (percentage nonzeros) less prev.filter excluded. Default 0 (taxa excluded). mean.abund.filter real value; taxa mean abundance less mean.abund.filter excluded. Default 0 (taxa excluded). max.abund.filter real value; taxa max abundance less max.abund.filter excluded. Default 0 (taxa excluded). .winsor Boolean. TRUE (default), Winsorization process conducted OTU table. outlier.pct real value 0 1; Winsorization cutoff (percentile) OTU table, e.g., 0.03. Default NULL. NULL, Winsorization process conducted. adaptive Boolean. Default TRUE. TRUE, parameter imputation treated FALSE matter actually set . significant correlations sequencing depth explanatory variables tested via linear regression log sequencing depths formula. p-value smaller equal corr.cut, imputation approach used; otherwise, pseudo-count approach used. zero.handling Character. Specifies method handle zeros OTU table. Options \"pseudo-count\" \"imputation\" (default \"pseudo-count\"). \"imputation\", zeros OTU table imputed using formula referenced paper. \"pseudo-count\", small constant (pseudo.cnt) added value OTU table. pseudo.cnt positive real value. Default 0.5. zero.handling set \"pseudo-count\", constant added value OTU table. corr.cut real value 0 1; significance level correlations sequencing depth explanatory variables. Default 0.1. p.adj.method Character; p-value adjusting approach. See R function p.adjust. Default 'BH'. alpha real value 0 1; significance level differential abundance. Default 0.05. n.cores positive integer. n.cores > 1 formula form mixed-effect model, n.cores parallels conducted. Default 1. verbose boolean; TRUE, progress messages printed. Default TRUE.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"list elements variables vector variable names fixed effects formula. example: formula = '~x1*x2+x3+(1|id)'. Suppose x1 x2 numerical, x3 categorical variable three levels: , b c. elements variables ('x1', 'x2', 'x3b', 'x3c', 'x1:x2'). bias numeric vector; element corresponds one variable variables; estimated bias regression coefficients due compositional effect. output list data frames columns 'baseMean', 'log2FoldChange', 'lfcSE', 'stat', 'pvalue', 'padj', 'reject',  'df'; names(output) equal variables; rows data frame corresponds taxa.  Note: taxa excluded due prev.cut, number rows output data frame  equal number rows otu.tab. Taxa identified rownames.  rownames otu.tab NULL, 1 : nrow(otu.tab) set rownames otu.tab. baseMean: 2 power intercept coefficients (normalized one million) log2FoldChange: bias-corrected coefficients lfcSE: standard errors coefficients stat: log2FoldChange / lfcSE pvalue: 2 * pt(-abs(stat), df) padj: p.adjust(pvalue, method = p.adj.method) reject: padj <= alpha df: degrees freedom. number samples minus number explanatory variables (intercept included)  fixed-effect models; estimates R package lmerTest Satterthwaite method approximation mixed-effect models. otu.tab.use OTU table used abundance analysis (otu.tab preprocessing: samples NAs variables formula less lib.cut read counts removed; taxa prevalence less prev.cut removed data winsorized !.null(winsor.quan); zeros treated, .e., imputed pseudo-count added). meta.use meta data used abundance analysis (variables formula stored; samples NAs less lib.cut read counts removed; numerical variables scaled).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"Huijuan Zhou, Kejun , Jun Chen, Xianyang Zhang. LinDA: Linear Models Differential Abundance Analysis Microbiome Compositional Data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"Huijuan Zhou huijuanzhou2019@gmail.com Jun Chen Chen.Jun2@mayo.edu Maintainer: Huijuan Zhou","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear (Lin) model for differential abundance (DA) analysis — linda","text":"","code":"if (FALSE) { library(ggrepel) data(smokers) ind <- smokers$meta$AIRWAYSITE == \"Throat\" otu.tab <- as.data.frame(smokers$otu[, ind]) meta <- cbind.data.frame(   Smoke = factor(smokers$meta$SMOKER[ind]),   Sex = factor(smokers$meta$SEX[ind]),   Site = factor(smokers$meta$SIDEOFBODY[ind]),   SubjectID = factor(smokers$meta$HOST_SUBJECT_ID[ind]) ) ind1 <- which(meta$Site == \"Left\") res.left <- linda(otu.tab[, ind1], meta[ind1, ],   formula = \"~Smoke+Sex\", alpha = 0.1,   prev.filter = 0.1 ) ind2 <- which(meta$Site == \"Right\") res.right <- linda(otu.tab[, ind2], meta[ind2, ],   formula = \"~Smoke+Sex\", alpha = 0.1,   prev.filter = 0.1 ) rownames(res.left$output[[1]])[which(res.left$output[[1]]$reject)] rownames(res.right$output[[1]])[which(res.right$output[[1]]$reject)]  linda.obj <- linda(otu.tab, meta,   formula = \"~Smoke+Sex+(1|SubjectID)\", alpha = 0.1,   prev.filter = 0.1 ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot linda results — linda.plot","title":"Plot linda results — linda.plot","text":"function plots effect size plot volcano plot based output linda.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot linda results — linda.plot","text":"","code":"linda.plot(   linda.obj,   variables.plot,   titles = NULL,   alpha = 0.05,   lfc.cut = 1,   legend = FALSE,   directory = NULL,   width = 11,   height = 8 )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot linda results — linda.plot","text":"linda.obj return function linda. variables.plot vector; variables whose results plotted. example, suppose return value variables equal ('x1', 'x2', 'x3b', 'x3c', 'x1:x2'), one set variables.plot = c('x3b', 'x1:x2'). titles vector; titles effect size plot volcano plot variable variables.plot. Default NULL. NULL, titles set variables.plot. alpha real value 0 1; cutoff padj. lfc.cut positive value; cutoff log2FoldChange. legend TRUE FALSE; whether show legends effect size plot volcano plot. directory character; directory save figures, e.g., getwd(). Default NULL. NULL, figures saved. width width graphics region inches. See R function pdf. height height graphics region inches. See R function pdf.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot linda results — linda.plot","text":"list ggplot2 objects. plot.lfc list effect size plots. plot corresponds one variable variables.plot. plot.volcano list volcano plots. plot corresponds one variable variables.plot.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot linda results — linda.plot","text":"Huijuan Zhou, Kejun , Jun Chen, Xianyang Zhang. LinDA: Linear Models Differential Abundance Analysis Microbiome Compositional Data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot linda results — linda.plot","text":"Huijuan Zhou huijuanzhou2019@gmail.com Jun Chen Chen.Jun2@mayo.edu Maintainer: Huijuan Zhou","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/linda.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot linda results — linda.plot","text":"","code":"if (FALSE) { library(ggrepel) data(smokers) ind <- smokers$meta$AIRWAYSITE == \"Throat\" otu.tab <- as.data.frame(smokers$otu[, ind]) meta <- cbind.data.frame(   Smoke = factor(smokers$meta$SMOKER[ind]),   Sex = factor(smokers$meta$SEX[ind]),   Site = factor(smokers$meta$SIDEOFBODY[ind]),   SubjectID = factor(smokers$meta$HOST_SUBJECT_ID[ind]) ) ind1 <- which(meta$Site == \"Left\") res.left <- linda(otu.tab[, ind1], meta[ind1, ],   formula = \"~Smoke+Sex\" ) ind2 <- which(meta$Site == \"Right\") res.right <- linda(otu.tab[, ind2], meta[ind2, ],   formula = \"~Smoke+Sex\" ) rownames(res.left$output[[1]])[which(res.left$output[[1]]$reject)] rownames(res.right$output[[1]])[which(res.right$output[[1]]$reject)]  linda.obj <- linda(otu.tab, meta,   formula = \"~Smoke+Sex+(1|SubjectID)\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"function, part MicrobiomeStat package, aggregates OTU table specified taxonomy level. checks consistency row names OTU table taxonomy table stops execution mismatches found.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"","code":"mStat_aggregate_by_taxonomy(data.obj, feature.level = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. feature.level character vector specifies taxonomy levels aggregate .","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"list modified version input data object. includes original data object additional element, 'feature.agg.list', list aggregated OTU tables specified taxonomy level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"function first checks consistency row names OTU table taxonomy table. mismatches found, displays message stops execution. row names consistent, merges OTU table taxonomy table aggregates OTU table specified taxonomy level. aggregation done summing values sample taxonomy level. aggregated OTU tables added data object list named 'feature.agg.list'.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"Caffery(Chen) YANG","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy","text":"","code":"if (FALSE) { # Load required libraries library(vegan) data(peerj32.obj)  # Specify the taxonomy level feature.level <- c(\"Phylum\", \"Family\")  # Aggregate data object by taxonomy level peerj32.obj <- mStat_aggregate_by_taxonomy(peerj32.obj, feature.level) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy2.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","text":"function aggregates OTU table specified taxonomy level. checks consistency OTU taxonomy tables aggregation.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","text":"","code":"mStat_aggregate_by_taxonomy2(feature.tab, feature.ann, feature.level = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","text":"feature.tab OTU table matrix data.frame feature.ann Taxonomy table matrix data.frame feature.level Taxonomy level aggregate character vector.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","text":"Aggregated OTU table matrix.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","text":"function first checks row names OTU taxonomy tables match. mismatches found, message displayed function continues. OTU taxonomy tables joined row names. OTU table aggregated summing abundance values sample specified taxonomy level. Rows zero values aggregation removed.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_aggregate_by_taxonomy2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate OTU Table by Taxonomy Level — mStat_aggregate_by_taxonomy2","text":"","code":"if (FALSE) { # Load required libraries library(vegan) data(peerj32.obj)  # Specify the taxonomy level feature.level <- c(\"Family\")  # Aggregate data object by taxonomy level mStat_aggregate_by_taxonomy2(peerj32.obj$feature.tab, peerj32.obj$feature.ann, feature.level) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_PC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Principal Coordinates using MDS, NMDS — mStat_calculate_PC","title":"Calculate Principal Coordinates using MDS, NMDS — mStat_calculate_PC","text":"function calculates Principal Coordinates based different methods Metric Multi-Dimensional Scaling (MDS), Non-Metric Multi-Dimensional Scaling (NMDS)","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_PC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Principal Coordinates using MDS, NMDS — mStat_calculate_PC","text":"","code":"mStat_calculate_PC(dist.obj, method = c(\"mds\"), k = 2, dist.name = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_PC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Principal Coordinates using MDS, NMDS — mStat_calculate_PC","text":"dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. method character vector specifying methods use calculating PCoA. Supported methods \"mds\" (MDS), \"nmds\" (NMDS) k integer specifying number principal coordinates retain. Default 2. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. used dist.obj list. Default 'BC'.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_PC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Principal Coordinates using MDS, NMDS — mStat_calculate_PC","text":"list containing PCoA results specified method   distance matrix. results named method's abbreviation.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_PC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Principal Coordinates using MDS, NMDS — mStat_calculate_PC","text":"","code":"if (FALSE) { library(vegan) data(peerj32.obj) dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = c('BC'))  pc.obj <- mStat_calculate_PC(dist.obj, method = c('mds'), k = 2, dist.name = c('BC')) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_adjusted_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","title":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","text":"Computes adjusted distance matrices set variables using dynamic model matrix.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_adjusted_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","text":"","code":"mStat_calculate_adjusted_distance(data.obj, dist.obj, adj.vars, dist.name)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_adjusted_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","text":"data.obj MicrobiomeStat data object. central component contains: feature.tab: Matrix representation linking research objects samples. meta.dat: Data frame rows representing samples columns annotations. feature.ann: Matrix annotations classification data. phylogenetic tree: (Optional) Tree depicting evolutionary relationships. feature.agg.list: (Optional) Aggregated results feature.tab feature.ann. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. adj.vars Character vector listing variable names intended adjustment. dist.name Character vector specifying names distance matrices present `dist.obj`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_adjusted_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","text":"list adjusted distance matrices. matrix named according `dist.name` parameter.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_adjusted_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","text":"Calculate Adjusted Distances Based Specified Adjustment Variables function provides way calculate distances adjusted specified variables dataset. incorporates results multidimensional scaling (MDS) adjusts distances based linear model. function uses cmdscale multidimensional scaling adjusts resultant distances based linear model using variables provided `adj.vars`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_adjusted_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Adjusted Distances for Specified Variables — mStat_calculate_adjusted_distance","text":"","code":"if (FALSE) { data(\"subset_T2D.obj\") subset_T2D.dist.obj <- mStat_calculate_beta_diversity(subset_T2D.obj, c(\"BC\",\"Jaccard\")) adj.dist.obj <- mStat_calculate_adjusted_distance( data.obj = subset_T2D.obj, dist.obj = subset_T2D.dist.obj, adj.vars = c(\"subject_gender\", \"subject_race\"), dist.name = c(\"BC\")) } data(\"peerj32.obj\") peerj32.dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, c(\"BC\")) #> Initializing distance objects... #> Calculating Bray-Curtis dissimilarity... #> All calculations complete. adj.dist.obj <- mStat_calculate_adjusted_distance( data.obj = peerj32.obj, dist.obj = peerj32.dist.obj, adj.vars = c(\"sex\"), dist.name = c(\"BC\")) #> Calculating adjusted distances using the provided adjustment variables and distance matrices... #> Additive constant c* is being added to the non-diagonal dissimilarities to ensure they are Euclidean."},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_alpha_diversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate alpha diversity indices — mStat_calculate_alpha_diversity","title":"Calculate alpha diversity indices — mStat_calculate_alpha_diversity","text":"function calculates several alpha diversity indices (Shannon, Simpson, Observed Species, Chao1, ACE, Pielou) using vegan package. function takes OTU table (x) input returns list containing requested alpha diversity indices.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_alpha_diversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate alpha diversity indices — mStat_calculate_alpha_diversity","text":"","code":"mStat_calculate_alpha_diversity(x, alpha.name)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_alpha_diversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate alpha diversity indices — mStat_calculate_alpha_diversity","text":"x OTU table taxa rows samples columns. alpha.name character vector containing names alpha diversity indices calculate. Possible values : \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\".","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_alpha_diversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate alpha diversity indices — mStat_calculate_alpha_diversity","text":"list containing requested alpha diversity indices.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_alpha_diversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate alpha diversity indices — mStat_calculate_alpha_diversity","text":"","code":"if (FALSE) { # Create example OTU table otu.tab <- matrix(data = rpois(100, 5), nrow = 10, ncol = 10) rownames(otu.tab) <- paste0(\"Taxon_\", 1:10) colnames(otu.tab) <- paste0(\"Sample_\", 1:10)  # Calculate alpha diversity indices alpha.obj <- mStat_calculate_alpha_diversity(x = otu.tab, alpha.name = c(\"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\")) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_beta_diversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate various beta diversity indices — mStat_calculate_beta_diversity","title":"Calculate various beta diversity indices — mStat_calculate_beta_diversity","text":"function calculates variety beta diversity indices based input data, Bray-Curtis (BC), Jaccard, unweighted UniFrac (UniFrac), generalized UniFrac (GUniFrac), weighted UniFrac (WUniFrac), Jensen-Shannon divergence (JS).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_beta_diversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate various beta diversity indices — mStat_calculate_beta_diversity","text":"","code":"mStat_calculate_beta_diversity(   data.obj,   dist.name = c(\"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\") )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_beta_diversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate various beta diversity indices — mStat_calculate_beta_diversity","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_beta_diversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate various beta diversity indices — mStat_calculate_beta_diversity","text":"list containing calculated beta diversity indices. indices named abbreviation.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_calculate_beta_diversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate various beta diversity indices — mStat_calculate_beta_diversity","text":"","code":"if (FALSE) { library(vegan) library(GUniFrac) library(ape) library(philentropy) library(phyloseq)  # Load example data data(GlobalPatterns)  GlobalPatterns.obj <- mStat_convert_phyloseq_to_data_obj(GlobalPatterns)  # Calculate various beta diversity indices dist.obj <- mStat_calculate_beta_diversity(GlobalPatterns.obj, dist.name = c('BC')) dist.obj <- mStat_calculate_beta_diversity(GlobalPatterns.obj, dist.name = c(\"Jaccard\")) dist.obj <- mStat_calculate_beta_diversity(GlobalPatterns.obj, dist.name = c('UniFrac')) dist.obj <- mStat_calculate_beta_diversity(GlobalPatterns.obj, dist.name = c('WUniFrac')) dist.obj <- mStat_calculate_beta_diversity(GlobalPatterns.obj, dist.name = c('JS')) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_combine_data.html","id":null,"dir":"Reference","previous_headings":"","what":"mStat_combine_data — mStat_combine_data","title":"mStat_combine_data — mStat_combine_data","text":"function designed specifically combining two MicrobiomeStat data objects, assuming 'Raw' format. MicrobiomeStat data object list contains 'feature.tab' (matrix features), 'meta.dat' (data frame metadata), 'feature.ann' (matrix feature annotations).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_combine_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mStat_combine_data — mStat_combine_data","text":"","code":"mStat_combine_data(data.obj1, data.obj2)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_combine_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mStat_combine_data — mStat_combine_data","text":"data.obj1 first MicrobiomeStat data object combined. data.obj2 second MicrobiomeStat data object combined.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_combine_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mStat_combine_data — mStat_combine_data","text":"list combined 'feature.tab', 'meta.dat' 'feature.ann'.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_combine_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mStat_combine_data — mStat_combine_data","text":"","code":"# combined_data <- mStat_combine_data(data_obj1, data_obj2)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"function part MicrobiomeStat package. converts DESeqDataSet object list (MicrobiomeStat data object) containing counts, samples data feature annotations. returned list represents microbiome dataset features (OTUs taxa), sample metadata feature annotations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"","code":"mStat_convert_DESeqDataSet_to_data_obj(dds.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"dds.obj DESeqDataSet object converted.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"MicrobiomeStat data object (list) containing following elements: feature.tab: matrix containing counts data rows features columns samples. meta.dat: data frame containing samples data. feature.ann: matrix containing feature annotations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"function first checks component (counts, samples, feature annotations) DESeqDataSet object null. component null, converted appropriate format added output list. counts data feature annotations converted matrix, samples data converted data frame. Note rows (features) counts data sum > 0 retained.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"Caffery Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DESeqDataSet_to_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a DESeqDataSet Object to a MicrobiomeStat Data Object — mStat_convert_DESeqDataSet_to_data_obj","text":"","code":"if (FALSE) {   # Load necessary packages   # library(airway)   # library(DESeq2)    # Load dataset   # data(\"airway\")   # dds <- DESeqDataSet(airway, design = ~ cell + dex)    # Convert to MicrobiomeStat data object   # data.obj <- mStat_convert_DESeqDataSet_to_data_obj(dds) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"function part MicrobiomeStat package. converts DGEList object list (MicrobiomeStat data object) containing counts samples data. returned list represents microbiome dataset features (OTUs taxa) metadata.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"","code":"mStat_convert_DGEList_to_data_obj(dge.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"dge.obj DGEList object converted.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"MicrobiomeStat data object (list) containing following elements: feature.tab: matrix containing counts data rows features columns samples. meta.dat: data frame containing samples data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"function first checks component (counts, samples) DGEList object null. component null, converted appropriate format added output list. counts data converted matrix, samples data converted data frame. Note rows (features) counts data sum > 0 retained.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"Caffery Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_DGEList_to_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a DGEList Object to a MicrobiomeStat Data Object — mStat_convert_DGEList_to_data_obj","text":"","code":"if (FALSE) {   # Load necessary packages   # library(airway)   # library(DESeq2)   # library(edgeR)    # Load dataset   # data(\"airway\")   # dds <- DESeqDataSet(airway, design = ~ cell + dex)   # dge <- DGEList(counts = counts(dds), group = dds$dex)    # Convert to MicrobiomeStat data object   # data.obj <- mStat_convert_DGEList_to_data_obj(dge) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"function part MicrobiomeStat package. converts MRExperiment object list (MicrobiomeStat data object) containing expression data, samples data, feature annotations. returned list represents microbiome dataset features (OTUs taxa), sample metadata, feature annotations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"","code":"mStat_convert_MRExperiment_to_data_obj(mr.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"mr.obj MRExperiment object converted.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"MicrobiomeStat data object (list) containing following elements: feature.tab: matrix containing expression data rows features columns samples. meta.dat: data frame containing samples data. feature.ann: matrix containing feature annotations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"function first checks component (expression data, samples, feature annotations) MRExperiment object null. component null, converted appropriate format added output list. expression data feature annotations converted matrix, samples data converted data frame. Note rows (features) expression data sum > 0 retained.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"Paulson JN, Stine OC, Bravo HC, Pop M. Differential abundance analysis microbial marker-gene surveys. Nature Methods. 2013;10(12):1200-1202.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"Chen Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MRExperiment_to_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a MRExperiment Object to a MicrobiomeStat Data Object — mStat_convert_MRExperiment_to_data_obj","text":"","code":"if (FALSE) {   # Load necessary packages   # library(MetagenomeSeq)    # Load dataset   # data(\"MRexperiment\")   # mr <- MRexperiment(counts = counts(MRexperiment), pData = pData(MRexperiment)   # , fData = fData(MRexperiment))   # Convert to MicrobiomeStat data object   # data.obj <- mStat_convert_MRExperiment_to_data_obj(mr) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"function converts MultiAssayExperiment object list (data object) containing assays data, colData. returned list represents dataset features (OTUs taxa), metadata, feature annotations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"","code":"mStat_convert_MultiAssayExperiment_to_data_obj(mae.obj, experiment_name = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"mae.obj MultiAssayExperiment object converted. experiment_name string specify experiment MultiAssayExperiment object converted. Default first experiment.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"data object (list) containing following elements: feature.tab: matrix containing assay data rows features columns samples. meta.dat: data frame containing colData (metadata).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"function first checks component (assays, colData) MultiAssayExperiment object null. component null, converted appropriate format added output list. assays data converted matrix, colData converted data frame. Note rows (features) assay data sum > 0 retained.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"Caffery Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_MultiAssayExperiment_to_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert MultiAssayExperiment Object to a Data Object — mStat_convert_MultiAssayExperiment_to_data_obj","text":"","code":"if (FALSE) {   # Assuming 'mae' is your MultiAssayExperiment object   # data_obj <- mStat_convert_MultiAssayExperiment_to_data_obj(mae, \"16S\")    # If you have an experiment data available as a MultiAssayExperiment object   # you can convert it to a data object using:   # library(MultiAssayExperiment)   # data(mae)   # data_obj <- mStat_convert_MultiAssayExperiment_to_data_obj(mae, \"16S\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"function converts SummarizedExperiment object list (MicrobiomeStat data object) containing assays data, rowData, colData. returned list represents microbiome dataset features (OTUs taxa), metadata, feature annotations.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"","code":"mStat_convert_SummarizedExperiment_to_data_obj(se.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"se.obj SummarizedExperiment object converted.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"MicrobiomeStat data object (list) containing following elements: feature.tab: matrix containing assay data rows features columns samples. feature.ann: matrix containing rowData (feature annotations). features present assay data included. meta.dat: data frame containing colData (metadata).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"function first checks component (assays, rowData, colData) SummarizedExperiment object null. component null, converted appropriate format added output list. assays data converted matrix, rowData colData converted data frames. Note rows (features) assay data sum > 0 retained.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"Caffery Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_SummarizedExperiment_to_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert SummarizedExperiment Object to a MicrobiomeStat Data Object — mStat_convert_SummarizedExperiment_to_data_obj","text":"","code":"if (FALSE) {   # Assuming 'se' is your SummarizedExperiment object   # data_obj <- mStat_convert_SummarizedExperiment_to_data_obj(se)    # If you have airway data available as a SummarizedExperiment object   # you can convert it to a MicrobiomeStat data object using:   # library(airway)   # data(airway)   # airway_obj <- mStat_convert_SummarizedExperiment_to_data_obj(airway) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"function part MicrobiomeStat package. takes phyloseq object, extracts relevant information repackages MicrobiomeStat's data object format. enables easy use phyloseq data MicrobiomeStat's analysis functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"","code":"mStat_convert_phyloseq_to_data_obj(phylo.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"phylo.obj phyloseq object converted. contain OTU (operational taxonomic unit) table, sample data, taxonomy table, phylogenetic tree.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"MicrobiomeStat data object (list) containing following elements: feature.tab: matrix feature table (OTU table). Rows sum zero removed, features present samples included. meta.dat: data frame sample data. contains metadata samples. feature.ann: matrix feature annotation table (taxonomy table). rows exist feature table included. tree: phylogenetic tree. tree rooted midpointing already rooted. Tips present OTU table dropped.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"function checks component (OTU table, sample data, taxonomy table, phylogenetic tree) phyloseq object null values. component null, converted appropriate format added MicrobiomeStat data object. OTU taxonomy tables converted matrices, sample data converted data frame. phylogenetic tree checked rooted, , rooted midpointing. Tips present OTU table dropped tree. ensures output data object consistent ready microbiome statistical analysis.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"McMurdie PJ, Holmes S. phyloseq: R Package Reproducible Interactive Analysis Graphics Microbiome Census Data. PLoS ONE. 2013;8(4):e61217.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"Jun Chen","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_convert_phyloseq_to_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Phyloseq Object to a MicrobiomeStat's Data Object — mStat_convert_phyloseq_to_data_obj","text":"","code":"if (FALSE) {   #library(microbiome)   #data(peerj32)   #peerj32.phy <- peerj32$phyloseq   #data.obj <- mStat_convert_phyloseq_to_data_obj(peerj32.phy) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","title":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","text":"function filters taxa microbiome matrix based specified prevalence average abundance thresholds.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","text":"","code":"mStat_filter(x, prev.filter, abund.filter)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","text":"x matrix containing taxa (rows) sample (columns) microbial abundance data. prev.filter Numeric, minimum prevalence threshold taxon retained. Prevalence calculated proportion samples taxon present. abund.filter Numeric, minimum average abundance threshold taxon retained.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","text":"matrix taxa filtered based specified thresholds.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","text":"function first converts input data long format groups taxa. computes average abundance prevalence taxon. Subsequently, filters taxa meet provided prevalence average abundance thresholds.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter a Microbiome Data Matrix by Prevalence and Average Abundance — mStat_filter","text":"","code":"# Example with simulated data if (FALSE) { data_matrix <- matrix(c(0, 3, 4, 0, 2, 7, 8, 9, 10), ncol=3) colnames(data_matrix) <- c(\"sample1\", \"sample2\", \"sample3\") rownames(data_matrix) <- c(\"taxa1\", \"taxa2\", \"taxa3\")  filtered_data_simulated <- mStat_filter(data_matrix, 0.5, 5) print(filtered_data_simulated) }  # Example with real dataset: peerj32.obj if (FALSE) { data(peerj32.obj) data_matrix_real <- peerj32.obj$feature.tab  # Assuming the matrix contains counts with taxa in rows and samples in columns filtered_data_real <- mStat_filter(data_matrix_real, 0.5, 5) print(filtered_data_real) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_change_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_change_pair","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_change_pair","text":"function generates comprehensive report microbial ecology analysis, including changes alpha diversity, beta diversity, taxonomic features paired data. function specifically designed analysis paired data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_change_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_change_pair","text":"","code":"mStat_generate_report_change_pair(   data.obj,   dist.obj = NULL,   alpha.obj = NULL,   group.var,   adj.vars,   subject.var,   time.var,   alpha.name = c(\"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\"),   dist.name = c(\"BC\", \"Jaccard\", \"UniFrac\", \"GUniFrac\", \"WUniFrac\", \"JS\"),   change.base,   change.func,   top.k.plot = NULL,   top.k.func = NULL,   strata.var = NULL,   base.size = 16,   theme.choice = \"prism\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   prev.filter = 0,   abund.filter = 0,   features.plot = NULL,   feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   output.file,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_change_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_change_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. group.var Variable name used grouping samples. adj.vars Variables adjust analysis. subject.var Variable name used subject identification. time.var Variable name used time points paired data. alpha.name Names alpha diversity indices include analysis. dist.name Names beta diversity distance metrics include analysis. change.base base level calculating changes paired data. change.func function calculating changes paired data. top.k.plot Number top taxa plot taxa change analysis. top.k.func Function selecting top taxa (default based adjusted p-value). strata.var Variable stratify analysis (optional). base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf Logical indicating whether save plots PDF files (default: TRUE). file.ann Annotation text PDF file names. pdf.wid Width PDF plots. pdf.hei Height PDF plots. prev.filter Prevalence filter feature analysis. abund.filter Abundance filter feature analysis. features.plot character vector specifying feature IDs (e.g. OTU IDs) plot. Default NULL, case features selected based `top.k.plot` `top.k.func`. feature.level Taxonomic level feature analysis. feature.dat.type Data type feature analysis (count, proportion, ). output.file Output file name report. ... Additional arguments passed internal functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_change_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_change_pair","text":"report file containing microbial ecology analysis results paired data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_change_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_change_pair","text":"","code":"if (FALSE) { library(GUniFrac) library(pheatmap) library(vegan) library(ggh4x)   data(peerj32.obj)  # Generate a report for microbial ecology analysis mStat_generate_report_change_pair(   data.obj = peerj32.obj,   dist.obj = NULL,   alpha.obj = NULL,   group.var = \"group\",   adj.vars = c(\"sex\"),   subject.var = \"subject\",   time.var = \"time\",   alpha.name = c(\"shannon\",\"simpson\"),   dist.name = c(\"BC\",'Jaccard'),   change.base = \"1\",   change.func = \"relative change\",   strata.var = \"sex\",   features.plot = NULL,   feature.level = c(\"Phylum\",\"Family\"),   feature.dat.type = \"count\",   theme.choice = \"bw\",   base.size = 12,   palette = NULL,   output.file = \"mStat_generate_report_change_pair_example.pdf\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"function performs extensive -depth longitudinal analysis microbiome data using MicrobiomeStat package generates comprehensive PDF report. report contains thorough statistical analysis along data visualizations, statistical graphics, result tables microbial alpha diversity, beta diversity, taxonomic composition, temporal dynamics MicrobiomeStat.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"","code":"mStat_generate_report_long(   data.obj,   group.var,   vis.adj.vars = NULL,   test.adj.vars = NULL,   strata.var = NULL,   subject.var,   time.var,   t0.level = NULL,   ts.levels = NULL,   depth = NULL,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   dist.obj = NULL,   dist.name = c(\"BC\", \"Jaccard\"),   pc.obj = NULL,   prev.filter = 0.1,   abund.filter = 1e-04,   bar.area.feature.no = 30,   heatmap.feature.no = 30,   vis.feature.level = NULL,   test.feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.analysis.rarafy = TRUE,   feature.change.func = \"relative change\",   feature.mt.method = \"none\",   feature.sig.level = 0.1,   feature.box.axis.transform = c(\"sqrt\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   output.file,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). group.var Character, column name metadata containing grouping variable, e.g. \"treatment\". Required present metadata. vis.adj.vars Character vector, names columns metadata containing covariates visualize plots, addition primary variables interest groups. example, sex provided vis.adj.vars, plots display facets colors different sex groups. allows visualization effects across multiple covariates. Default NULL, indicates primary variables interest visualized without additional covariates. test.adj.vars Character vector, names columns metadata containing covariates adjusted statistical tests models, linear mixed effects models longitudinal data analysis. allows user account effects additional variables assessing effects primary variables interest time groups. Default NULL, indicates covariates adjusted statistical testing. strata.var Character, column name metadata containing stratification variable, e.g \"sex\". Optional. subject.var Character, column name metadata containing subject/sample IDs, e.g. \"subject_id\". Required. time.var Character, column name metadata containing time variable, e.g. \"week\". Required. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required. depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Feature prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Feature mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. bar.area.feature.numeric value indicating number top abundant features retain barplot areaplot. Features average relative abundance ranked number grouped ''. Default 20. heatmap.feature.numeric value indicating number top abundant features retain heatmap. Features average relative abundance ranked number grouped ''. Default 20. vis.feature.level column name feature annotation matrix (feature.ann) data.obj use visualization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. test.feature.level column name feature annotation matrix (feature.ann) data.obj use testing analytical purposes. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data analyzed separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.analysis.rarafy Logical, indicating whether rarefy data feature-level analysis. TRUE, feature data rarefied analysis. Default TRUE. feature.change.func function character string specifying calculate change baseline value. allows flexible options: - function provided, applied row calculate change.   function take 2 arguments: value timepoint t value baseline t0. - character string provided, following options supported:   - 'relative change': (value_t - value_t0) / (value_t + value_t0)   - 'absolute change': value_t - value_t0   - 'log fold change': log2(value_t + 1e-5) - log2(value_t0 + 1e-5) - Default 'relative change'. none options matched, error thrown indicating acceptable options prompting user provide custom function. feature.mt.method Character, multiple testing method features, \"fdr\" \"none\", default \"fdr\". feature.sig.level Numeric, significance level cutoff highlighting features, default 0.1. feature.box.axis.transform string indicating transformation apply y-axis feature's boxplot visualization plotting. Options : - \"identity\": transformation (default). - \"sqrt\": Square root transformation. - \"log\": Logarithmic transformation. Zeros replaced half minimum non-zero value taxon log transformation. base.size Numeric, base font size plots, default 16. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Character vector function defining color palette plots, default NULL. pdf Logical, TRUE save plots PDF files, default TRUE. file.ann Character, annotation text add PDF plot filenames, default NULL. pdf.wid Numeric, width PDF plots inches, default 11. pdf.hei Numeric, height PDF plots inches, default 8.5. output.file Character, output PDF report filename (required). ... Additional arguments passed generate_taxa_trend_test_long().","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"PDF report containing: - Summary statistics table: Sample size, covariates, time points - Alpha diversity boxplots: Boxplots colored time groups - Alpha diversity spaghetti plots: Line plots trajectories - Alpha diversity trends: Tables LME model results - Alpha volatility: Tables LM model results - Beta diversity PCoA plots: Ordination plots colored time groups - Beta distance boxplots: Boxplots colored time groups - Beta spaghetti plots: Individual line plots - Beta diversity trends: Tables LME results distances - Beta volatility: Tables LM results distances - Feature area plots: Stacked area plots showing composition - Feature heatmaps: Heatmaps colored relative abundance - Feature volcano plots: trend/volatility significance - Feature boxplots: Distribution time groups - Feature spaghetti plots: Individual line plots","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"function generates comprehensive longitudinal microbiome report : 1. Summary Statistics - Table sample size, number timepoints, covariates 2. Alpha Diversity Analysis - Boxplots alpha diversity vs time, colored groups - Spaghetti plots alpha trajectories subject - Linear mixed effects model results alpha diversity trend - Linear model results alpha diversity volatility 3. Beta Diversity Analysis - PCoA plots colored time points groups - Boxplots PCoA coordinate 1 vs time, colored groups - Spaghetti plots distance baseline vs time - Linear mixed effects models beta diversity distance trend - Linear models beta diversity volatility 4. Taxonomic Composition Analysis - Stacked area plots average composition time groups - Heatmaps relative abundance colored low (blue) high (red) - Volcano plots highlighting significant taxa trend volatility - Boxplots significant taxa time groups - Spaghetti plots significant taxa vs time","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"Chen Yang cafferychen7850@email.com","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Comprehensive Longitudinal Microbiome Analysis Report for MicrobiomeStat — mStat_generate_report_long","text":"","code":"if (FALSE) { data(subset_T2D.obj) mStat_generate_report_long(   data.obj = subset_T2D.obj,   group.var = \"subject_race\",   strata.var = NULL,   test.adj.vars = NULL,   vis.adj.vars = NULL,   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   t0.level = NULL,   ts.levels = NULL,   alpha.obj = NULL,   alpha.name = c(\"shannon\",\"observed_species\"),   dist.obj = NULL,   dist.name = c(\"BC\",'Jaccard'),   pc.obj = NULL,   feature.mt.method = \"none\",   feature.sig.level = 0.3,   vis.feature.level = c(\"Family\",\"Genus\"),   test.feature.level = c(\"Family\"),   feature.change.func = \"relative change\",   feature.dat.type = \"count\",   prev.filter = 0.1,   abund.filter = 1e-4,   bar.area.feature.no = 40,   heatmap.feature.no = 40,   feature.box.axis.transform = \"sqrt\",   theme.choice = \"bw\",   base.size = 20,   output.file = \"/Users/apple/MicrobiomeStat/report.pdf\" ) data(ecam.obj) mStat_generate_report_long(   data.obj = ecam.obj,   group.var = \"antiexposedall\",   strata.var = NULL,   test.adj.vars = \"delivery\",   vis.adj.vars = \"delivery\",   subject.var = \"subject.id\",   time.var = \"month_num\",   t0.level = NULL,   ts.levels = NULL,   alpha.obj = NULL,   alpha.name = c(\"shannon\",\"observed_species\"),   dist.obj = NULL,   dist.name = c(\"BC\",'Jaccard'),   pc.obj = NULL,   feature.mt.method = \"none\",   feature.sig.level = 0.3,   vis.feature.level = c(\"Family\",\"Genus\"),   test.feature.level = c(\"Family\"),   feature.change.func = \"relative change\",   feature.dat.type = \"proportion\",   prev.filter = 0.1,   abund.filter = 1e-4,   bar.area.feature.no = 40,   heatmap.feature.no = 40,   feature.box.axis.transform = \"sqrt\",   theme.choice = \"bw\",   base.size = 20,   output.file = \"/Users/apple/MicrobiomeStat/ecam_obj_report_long.pdf\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_pair","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_pair","text":"function generates comprehensive report microbial ecology analysis, including changes alpha diversity, beta diversity, taxonomic features paired data. function specifically designed analysis paired data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_pair","text":"","code":"mStat_generate_report_pair(   data.obj,   group.var = NULL,   strata.var = NULL,   test.adj.vars = NULL,   vis.adj.vars = NULL,   subject.var,   time.var,   change.base,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   alpha.change.func = \"log fold change\",   depth = NULL,   dist.obj = NULL,   dist.name = c(\"BC\", \"Jaccard\"),   pc.obj = NULL,   prev.filter = 0.1,   abund.filter = 1e-04,   bar.area.feature.no = 30,   heatmap.feature.no = 30,   dotplot.feature.no = 30,   vis.feature.level,   test.feature.level,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.analysis.rarafy = TRUE,   feature.change.func = \"log fold change\",   feature.mt.method = c(\"fdr\"),   feature.sig.level = 0.1,   feature.box.axis.transform = c(\"identity\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   output.file )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_pair","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. group.var Variable name used grouping samples. strata.var Character, column name metadata containing stratification variable, e.g \"sex\". Optional. test.adj.vars Character vector, names columns metadata containing covariates adjusted statistical tests models, linear mixed effects models longitudinal data analysis. allows user account effects additional variables assessing effects primary variables interest time groups. Default NULL, indicates covariates adjusted statistical testing. vis.adj.vars Character vector, names columns metadata containing covariates visualize plots, addition primary variables interest groups. example, sex provided vis.adj.vars, plots display facets colors different sex groups. allows visualization effects across multiple covariates. Default NULL, indicates primary variables interest visualized without additional covariates. subject.var Variable name used subject identification. time.var Character, column name metadata containing time variable, e.g. \"week\". Required. change.base base level calculating changes paired data. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name Names alpha diversity indices include analysis. alpha.change.func Function method calculating change alpha diversity   two timepoints. allows flexible options quantify change: - function provided: function applied compare alpha diversity     timepoint t vs baseline t0. function take two arguments     representing alpha diversity values t t0. instance, custom function     calculate percentage change might look like: can pass function value `alpha.change.func`. - string provided, following options supported:     - 'log fold change': Calculates log2 fold change alpha diversity t compared t0.     - 'absolute change': Calculates absolute difference alpha diversity t compared t0.     - value: warning given provided method recognized,       default method ('absolute change') used. - Default behavior (recognized string function provided) compute absolute difference t t0. depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. bar.area.feature.numeric value indicating number top abundant features retain barplot areaplot. Features average relative abundance ranked number grouped ''. Default 40. heatmap.feature.numeric value indicating number top abundant features retain heatmap. Features average relative abundance ranked number grouped ''. Default 40. dotplot.feature.numeric value indicating number top abundant features retain dotplot. Features average relative abundance ranked number grouped ''. Default 40. vis.feature.level column name feature annotation matrix (feature.ann) data.obj use visualization plotting. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data plotted separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. test.feature.level column name feature annotation matrix (feature.ann) data.obj use testing analytical purposes. can taxonomic level like \"Phylum\", annotation columns like \"Genus\" \"OTU_ID\". character vector specifying one column names feature.ann. Multiple columns can provided, data analyzed separately column. Default NULL, defaults columns feature.ann `features.plot` also NULL. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.analysis.rarafy Logical, indicating whether rarefy data feature-level analysis. TRUE, feature data rarefied analysis. Default TRUE. feature.change.func function character string specifying calculate change baseline value. allows flexible options: - function provided, applied row calculate change.   function take 2 arguments: value timepoint t value baseline t0. - character string provided, following options supported:   - 'relative change': (value_t - value_t0) / (value_t + value_t0)   - 'absolute change': value_t - value_t0   - 'log fold change': log2(value_t + 1e-5) - log2(value_t0 + 1e-5) - Default 'relative change'. none options matched, error thrown indicating acceptable options prompting user provide custom function. feature.mt.method Character, multiple testing method features, \"fdr\" \"none\", default \"fdr\". feature.sig.level Numeric, significance level cutoff highlighting features, default 0.1. feature.box.axis.transform string indicating transformation apply y-axis feature's boxplot visualization plotting. Options : - \"identity\": transformation (default). - \"sqrt\": Square root transformation. - \"log\": Logarithmic transformation. Zeros replaced half minimum non-zero value taxon log transformation. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf Logical indicating whether save plots PDF files (default: TRUE). file.ann Annotation text PDF file names. pdf.wid Width PDF plots. pdf.hei Height PDF plots. output.file Output file name report.","code":"percentage_change <- function(t, t0) {         return ((t - t0) / t0) * 100       }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_pair","text":"report file containing microbial ecology analysis results paired data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a report for microbial ecology analysis of paired data — mStat_generate_report_pair","text":"","code":"if (FALSE) { data(peerj32.obj) mStat_generate_report_pair(   data.obj = peerj32.obj,   dist.obj = NULL,   alpha.obj = NULL,   group.var = \"group\",   test.adj.vars = NULL,   vis.adj.vars = NULL,   subject.var = \"subject\",   time.var = \"time\",   alpha.name = c(\"shannon\", \"observed_species\"),   dist.name = c(\"BC\",'Jaccard'),   change.base = \"1\",   feature.change.func = \"relative change\",   strata.var = NULL,   vis.feature.level = c(\"Phylum\",\"Family\",\"Genus\"),   test.feature.level = c(\"Genus\"),   feature.dat.type = \"count\",   feature.mt.method = \"none\",   feature.sig.level = 0.1,   theme.choice = \"bw\",   base.size = 18,   output.file = \"/Users/apple/MicrobiomeStat/report.pdf\" )  data(peerj32.obj) mStat_generate_report_pair(   data.obj = peerj32.obj,   group.var = \"group\",   test.adj.vars = NULL,   vis.adj.vars = NULL,   strata.var = \"sex\",   subject.var = \"subject\",   time.var = \"time\",   change.base = \"1\",   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   dist.obj = NULL,   dist.name = c(\"BC\",'Jaccard'),   feature.change.func = \"relative change\",   vis.feature.level = c(\"Genus\"),   test.feature.level = c(\"Genus\"),   bar.area.feature.no = 30,   heatmap.feature.no = 30,   dotplot.feature.no = 20,   feature.dat.type = \"count\",   feature.mt.method = \"none\",   feature.sig.level = 0.1,   theme.choice = \"bw\",   base.size = 18,   output.file = \"/Users/apple/MicrobiomeStat/report.pdf\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point — mStat_generate_report_single","title":"Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point — mStat_generate_report_single","text":"function generates comprehensive report microbial ecology analysis, including alpha diversity, beta diversity, taxonomic feature analyses. function designed perform analysis cross-sectional data, single time point longitudinal paired data.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point — mStat_generate_report_single","text":"","code":"mStat_generate_report_single(   data.obj,   group.var,   vis.adj.vars = NULL,   test.adj.vars = NULL,   strata.var = NULL,   subject.var,   time.var,   t.level = NULL,   alpha.obj = NULL,   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   dist.obj = NULL,   dist.name = c(\"BC\", \"Jaccard\"),   pc.obj = NULL,   prev.filter = 0.1,   abund.filter = 1e-04,   bar.area.feature.no = 40,   heatmap.feature.no = 40,   dotplot.feature.no = 40,   vis.feature.level = NULL,   test.feature.level = NULL,   feature.dat.type = c(\"count\", \"proportion\", \"other\"),   feature.analysis.rarafy = TRUE,   feature.mt.method = c(\"fdr\", \"none\"),   feature.sig.level = 0.1,   feature.box.axis.transform = c(\"identity\", \"sqrt\", \"log\"),   base.size = 16,   theme.choice = \"bw\",   custom.theme = NULL,   palette = NULL,   pdf = TRUE,   file.ann = NULL,   pdf.wid = 11,   pdf.hei = 8.5,   output.file,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point — mStat_generate_report_single","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. group.var Variable name used grouping samples. vis.adj.vars Character vector, names columns metadata containing covariates visualize plots, addition primary variables interest groups. example, sex provided vis.adj.vars, plots display facets colors different sex groups. allows visualization effects across multiple covariates. Default NULL, indicates primary variables interest visualized without additional covariates. test.adj.vars Character vector, names columns metadata containing covariates adjusted statistical tests models, linear mixed effects models longitudinal data analysis. allows user account effects additional variables assessing effects primary variables interest time groups. Default NULL, indicates covariates adjusted statistical testing. strata.var Variable stratify analysis (optional). subject.var Variable name used subject identification. time.var Variable name used time points. t.level Character string specifying time level/value subset data , time variable provided. Default NULL subset data. alpha.obj optional list containing pre-calculated alpha diversity indices. NULL (default), alpha diversity indices calculated using mStat_calculate_alpha_diversity function MicrobiomeStat package. alpha.name alpha diversity index plotted. Supported indices include \"shannon\", \"simpson\", \"observed_species\", \"chao1\", \"ace\", \"pielou\". depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth. dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. dist.name character vector specifying beta diversity indices calculate. Supported indices \"BC\" (Bray-Curtis), \"Jaccard\", \"UniFrac\" (unweighted UniFrac), \"GUniFrac\" (generalized UniFrac), \"WUniFrac\" (weighted UniFrac), \"JS\" (Jensen-Shannon divergence). name provided corresponding object exist within dist.obj, computed internally. specific index supported, error message returned. Default c('BC', 'Jaccard'). pc.obj list containing results dimension reduction/Principal Component Analysis. output functions like mStat_calculate_PC, containing PC coordinates metadata. NULL (default), dimension reduction automatically performed using metric multidimensional scaling (MDS) via mStat_calculate_PC. pc.obj list structure contain: $points:matrix samples rows PCs columns containing coordinates. $eig:Eigenvalues PC dimension. $vectors:Loadings vectors features onto PC. metadata like $method, $dist.name, etc. See mStat_calculate_PC function details output format. prev.filter Numeric value specifying minimum prevalence threshold filtering taxa analysis. Taxa prevalence value removed. Prevalence calculated proportion samples taxon present. Default 0 removes taxa prevalence filtering. abund.filter Numeric value specifying minimum abundance threshold filtering taxa analysis. Taxa mean abundance value removed. Abundance refers counts proportions depending feature.dat.type. Default 0 removes taxa abundance filtering. bar.area.feature.numeric value indicating number top abundant features retain barplot areaplot. Features average relative abundance ranked number grouped ''. Default 20. heatmap.feature.numeric value indicating number top abundant features retain heatmap. Features average relative abundance ranked number grouped ''. Default 20. dotplot.feature.numeric value indicating number top abundant features retain dotplot. Features average relative abundance ranked number grouped ''. Default 40. vis.feature.level character vector specifying one column names feature annotation matrix (feature.ann) data.obj use visualization plotting. can taxonomic level like \"Phylum\" \"Genus\" microbiome data, cell type identifier \"CellType\" single-cell data, pathway level \"Pathway_L1\", \"Pathway_L2\", \"Pathway_L3\" KEGG data. Multiple columns can provided, data plotted separately column. want avoid aggregation, can set \"original\", aggregation performed. test.feature.level character vector specifying one column names feature annotation matrix (feature.ann) data.obj use testing analytical purposes. can taxonomic level like \"Phylum\" \"Genus\" microbiome data, cell type identifier \"CellType\" single-cell data, pathway level \"Pathway_L1\", \"Pathway_L2\", \"Pathway_L3\" KEGG data. Multiple columns can provided, data analyzed separately column. want avoid aggregation, can set \"original\", aggregation performed. feature.dat.type type feature data, determines data handled downstream analyses. one : - \"count\": Raw count data, normalized function. - \"proportion\": Data already normalized proportions/percentages. - \"\": Custom abundance data unknown scaling. normalization applied. choice affects preprocessing steps well plot axis labels. Default \"count\", assumes raw OTU table input. feature.analysis.rarafy Logical, indicating whether rarefy data feature-level analysis. TRUE, feature data rarefied analysis. Default TRUE. feature.mt.method character specifying multiple testing method features. specifically used volcano plot visualization. options \"fdr\" false discovery rate \"none\" multiple testing correction. default \"fdr\". feature.sig.level numeric value specifying significance level cutoff highlighting features volcano plot. default 0.1. feature.box.axis.transform string indicating transformation apply data plotting. Options : \"identity\" transformation (default), \"sqrt\" square root transformation, \"log\" logarithmic transformation. function `mStat_generate_report_single`, parameter used `generate_taxa_boxplot_single` `generate_taxa_indiv_boxplot_single`. functions, also used solely adjust boxplots related feature functions. base.size Base font size generated plots. theme.choice Plot theme choice. Can one :   - \"prism\": ggprism::theme_prism()   - \"classic\": theme_classic()   - \"gray\": theme_gray()   - \"bw\": theme_bw() Default \"bw\". custom.theme custom ggplot theme provided ggplot2 theme object. allows users override default theme provide theme plotting. use custom theme, first create theme object ggplot2::theme(), pass argument. example: ```r my_theme <- ggplot2::theme(   axis.title = ggplot2::element_text(size=16, color=\"red\"),   legend.position = \"none\" ) ``` pass `my_theme` `custom.theme`. Default NULL, use default theme based `theme.choice`. palette Color palette used plots. pdf Logical indicating whether save plots PDF files (default: TRUE). file.ann Annotation text PDF file names. pdf.wid Width PDF plots. pdf.hei Height PDF plots. output.file character string specifying output file name report. also determine title generated report. example, set \"path_to_your_location/report.pdf\", title report \"report\". ... Additional arguments passed internal functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point — mStat_generate_report_single","text":"report file containing microbial ecology analysis results.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_generate_report_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a report for microbial ecology analysis of cross-sectional, longitudinal or paired data at a single time point — mStat_generate_report_single","text":"","code":"if (FALSE) { library(aplot) data(peerj32.obj) mStat_generate_report_single(   data.obj = peerj32.obj,   dist.obj = NULL,   alpha.obj = NULL,   group.var = \"group\",   vis.adj.vars = NULL,   test.adj.vars = NULL,   subject.var = \"subject\",   time.var = \"time\",   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   dist.name = c(\"BC\",'Jaccard'),   t.level = \"1\",   feature.box.axis.transform = \"sqrt\",   strata.var = NULL,   vis.feature.level = c(\"Phylum\", \"Family\", \"Genus\"),   test.feature.level = \"Family\",   feature.dat.type = \"count\",   theme.choice = \"bw\",   base.size = 20,   feature.mt.method = \"none\",   feature.sig.level = 0.2,   output.file = \"/Users/apple/MicrobiomeStat/report.pdf\" ) data(subset_T2D.obj) mStat_generate_report_single(   data.obj = subset_T2D.obj,   dist.obj = NULL,   alpha.obj = NULL,   group.var = \"subject_race\",   vis.adj.vars = \"sample_body_site\",   test.adj.vars = \"sample_body_site\",   subject.var = \"subject_id\",   time.var = \"visit_number_num\",   alpha.name = c(\"shannon\", \"observed_species\"),   depth = 2000,   dist.name = c(\"BC\",'Jaccard'),   t.level = 1,   feature.box.axis.transform = \"sqrt\",   strata.var = \"subject_gender\",   vis.feature.level = c(\"Phylum\", \"Family\", \"Genus\"),   test.feature.level = \"Family\",   feature.dat.type = \"count\",   theme.choice = \"bw\",   base.size = 20,   feature.mt.method = \"none\",   feature.sig.level = 0.2,   output.file = \"/Users/apple/MicrobiomeStat/report.pdf\" ) data(ecam.obj) mStat_generate_report_single(   data.obj = ecam.obj,   dist.obj = NULL,   alpha.obj = NULL,   group.var = \"delivery\",   vis.adj.vars = \"diet\",   test.adj.vars = \"diet\",   subject.var = \"subject.id\",   time.var = \"month_num\",   alpha.name = c(\"shannon\", \"observed_species\"),   depth = NULL,   dist.name = c(\"BC\",'Jaccard'),   t.level = 1,   feature.box.axis.transform = \"sqrt\",   strata.var = \"antiexposedall\",   vis.feature.level = c(\"Phylum\", \"Family\", \"Genus\"),   test.feature.level = \"Family\",   feature.dat.type = \"proportion\",   theme.choice = \"bw\",   base.size = 20,   feature.mt.method = \"none\",   feature.sig.level = 0.2,   output.file = \"/Users/apple/MicrobiomeStat/ecam.obj_report.pdf\" ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"`mStat_import_biom_as_data_obj` function facilitates conversion BIOM (Biological Observation Matrix) file mStat data object. includes importing parsing relevant metadata, taxonomic information, optionally phylogenetic tree.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"","code":"mStat_import_biom_as_data_obj(   BIOMfilename,   treefilename = NULL,   parseFunction = parse_taxonomy_default,   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"BIOMfilename character string specifying path BIOM file, 'biom-class' object. file contains essential biological observation matrix related metadata. treefilename (Optional) character string specifying path phylogenetic tree file, 'phylo' object. file represents phylogenetic tree associated biological observation. provided, function continues without incorporating phylogenetic tree. parseFunction user-specified function parsing taxonomy metadata BIOM file. Default function 'parse_taxonomy_default'. ... Additional arguments passed 'read_tree' function reading phylogenetic tree file.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"list representing mStat data object. list includes following elements:  feature.tab: matrix contains biological observations (OTU table). feature.ann: matrix contains parsed taxonomic annotations feature. meta.dat: data frame contains metadata sample. tree: phylogenetic tree, provided.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"function reads BIOM file, typically contains biological observation matrix related metadata. also optionally accepts phylogenetic tree file. creates list object follows mStat data object structure subsequent analysis. required elements missing BIOM file, warnings issued, function continue run. Please ensure BIOM file optional phylogenetic tree file properly formatted successful conversion.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"Biological Observation Matrix (BIOM) format : learned stop worrying love ome-ome. Daniel McDonald et al. GigaScience 2012.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_biom_as_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a BIOM formatted data file into an mStat data object — mStat_import_biom_as_data_obj","text":"","code":"if (FALSE) {   #rich_dense_biom <- system.file(\"extdata\", \"rich_dense_otu_table.biom\",  package=\"phyloseq\")   #treefilename <- system.file(\"extdata\", \"biom-tree.phy\",  package=\"phyloseq\")   #data.obj <- mStat_import_biom_as_data_obj(rich_dense_biom,   #treefilename) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_dada2_as_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DADA2 Data into MicrobiomeStat's Data Object — mStat_import_dada2_as_data_obj","title":"Convert DADA2 Data into MicrobiomeStat's Data Object — mStat_import_dada2_as_data_obj","text":"`mStat_import_dada2_as_data_obj` function acts bridge DADA2 output MicrobiomeStat, effectively enabling smooth data transition two. accepts essential DADA2 outputs converts MicrobiomeStat compatible format subsequent microbiome data analysis.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_dada2_as_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert DADA2 Data into MicrobiomeStat's Data Object — mStat_import_dada2_as_data_obj","text":"","code":"mStat_import_dada2_as_data_obj(   seq_tab,   tax_tab = NULL,   sam_tab = NULL,   phy_tree = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_dada2_as_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DADA2 Data into MicrobiomeStat's Data Object — mStat_import_dada2_as_data_obj","text":"seq_tab sequence table DADA2, rows represent samples, columns represent sequences (features). table crucial subsequent MicrobiomeStat analyses. tax_tab (Optional) taxonomy assignment table derived DADA2. row corresponds feature (sequence), column corresponds different taxonomic rank. table enriches feature information. sam_tab (Optional) sample metadata table. row corresponds sample, column provides different metadata attributes. table enriches sample information. phy_tree (Optional) phylogenetic tree class 'phylo'. tree represents phylogenetic relationships features (sequences) can incorporated certain analyses.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_dada2_as_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DADA2 Data into MicrobiomeStat's Data Object — mStat_import_dada2_as_data_obj","text":"MicrobiomeStat data object, containing following elements:  feature.tab: matrix feature (sequence) table. meta.dat: data frame sample metadata. feature.ann: matrix feature (sequence) taxonomy annotations. tree: phylogenetic tree, provided. object readily accepted MicrobiomeStat's downstream analysis functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_dada2_as_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert DADA2 Data into MicrobiomeStat's Data Object — mStat_import_dada2_as_data_obj","text":"","code":"if (FALSE) {  # library(Biostrings)  # seq_tab <- readRDS(  #   system.file(  #       \"extdata\", \"dada2_seqtab.rds\",  #       package = \"microbiomeMarker\"  #   )  # )  # tax_tab <- readRDS(  #   system.file(  #       \"extdata\", \"dada2_taxtab.rds\",  #       package = \"microbiomeMarker\"  #   )  # )  # sam_tab <- read.table(  #   system.file(  #       \"extdata\", \"dada2_samdata.txt\",  #       package = \"microbiomeMarker\"  #   ),  #   sep = \"\\t\",  #   header = TRUE,  #   row.names = 1  # )  # data_obj <- mStat_import_dada2_as_data_obj(seq_tab = seq_tab,  # tax_tab = tax_tab, sam_tab = sam_tab)  }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"function serves bridge Mothur MicrobiomeStat, allowing seamless integration Mothur data powerful MicrobiomeStat analysis toolkit. accepts various Mothur microbiome study-related files converts MicrobiomeStat data object.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"","code":"mStat_import_mothur_as_data_obj(   mothur_list_file = NULL,   mothur_group_file = NULL,   mothur_tree_file = NULL,   cutoff = NULL,   mothur_shared_file = NULL,   mothur_constaxonomy_file = NULL,   parseFunction = parse_taxonomy_default )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"mothur_list_file (Optional) list file Mothur. mothur_group_file (Optional) group file Mothur. mothur_tree_file (Optional) tree file Mothur. cutoff (Optional) cutoff value OTU. mothur_shared_file (Optional) shared file Mothur. mothur_constaxonomy_file (Optional) constaxonomy file Mothur. parseFunction (Optional) function parsing taxonomy. Defaults parse_taxonomy_default.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"MicrobiomeStat data object contains feature table, metadata, feature annotations, phylogenetic tree, normalization status. object ready used MicrobiomeStat's downstream analysis functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"MicrobiomeStat comprehensive user-friendly tool designed robust microbiome data analysis. resulting data object function can directly fed series MicrobiomeStat's statistical tools analysis.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"Caffery Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_mothur_as_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Mothur Data into MicrobiomeStat's Data Object — mStat_import_mothur_as_data_obj","text":"","code":"if (FALSE) { # Make sure to load the plyr package # library(plyr) # path_to_list_file <- \"/Users/apple/Downloads/esophagus/Esophagus/esophagus.fn.list\" # path_to_group_file <- \"/Users/apple/Downloads/esophagus/Esophagus/esophagus.good.groups\" # path_to_tree_file <- \"/Users/apple/Downloads/esophagus/Esophagus/esophagus.tree\" # path_to_shared_file <- \"/Users/apple/Downloads/esophagus/Esophagus/esophagus.fn.shared\"  # data_obj <- mStat_import_mothur_as_data_obj(mothur_list_file = path_to_list_file,                                            # mothur_group_file = path_to_group_file,                                            # mothur_tree_file = path_to_tree_file,                                            # mothur_shared_file = path_to_shared_file                                            # ) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_qiime2_as_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","title":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","text":"function serves bridge Qiime2 MicrobiomeStat, allowing seamless integration Qiime2 data powerful MicrobiomeStat analysis toolkit. accepts various Qiime2 microbiome study-related files converts MicrobiomeStat data object.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_qiime2_as_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","text":"","code":"mStat_import_qiime2_as_data_obj(   otu_qza,   taxa_qza = NULL,   sam_tab = NULL,   refseq_qza = NULL,   tree_qza = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_qiime2_as_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","text":"otu_qza feature table observations (OTUs, ASVs, etc.) .qza format Qiime2. taxa_qza (Optional) taxonomy assignment table .qza format Qiime2. sam_tab (Optional) sample metadata table. refseq_qza (Optional) representative sequences table .qza format Qiime2. tree_qza (Optional) phylogenetic tree .qza format Qiime2.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_qiime2_as_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","text":"MicrobiomeStat data object contains feature table, metadata, feature annotations, phylogenetic tree, normalization status. object ready used MicrobiomeStat's downstream analysis functions.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_qiime2_as_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","text":"MicrobiomeStat comprehensive user-friendly tool designed robust microbiome data analysis. resulting data object function can directly fed series MicrobiomeStat's statistical tools analysis.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_import_qiime2_as_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Qiime2 Data into MicrobiomeStat's Data Object — mStat_import_qiime2_as_data_obj","text":"","code":"if (FALSE) { # This function requires the `Biostrings` and `yaml` packages. # If you encounter issues when running the example code, # please ensure that you have installed and loaded these packages. # library(Biostrings) # library(yaml) #data_obj <- mStat_import_qiime2_as_data_obj(otu_qza = \"path_to_otu.qza\", #                                             taxa_qza = \"path_to_taxa.qza\", #                                              sam_tab = \"path_to_sample_metadata\", #                                             refseq_qza = \"path_to_refseq.qza\", #                                              tree_qza = \"path_to_tree.qza\", #                                            norm.status = \"Raw\")  #otuqza_file <- system.file(\"extdata\", \"table.qza\", package = \"microbiomeMarker\") #taxaqza_file <- system.file(\"extdata\", \"taxonomy.qza\", package = \"microbiomeMarker\") #sample_file <- system.file(\"extdata\", \"sample-metadata.tsv\", package = \"microbiomeMarker\") #treeqza_file <- system.file(\"extdata\", \"tree.qza\", package = \"microbiomeMarker\") #data.obj <- mStat_import_qiime2_as_data_obj( #     otu_qza = otuqza_file, taxa_qza = taxaqza_file, #     sam_tab = sample_file, tree_qza = treeqza_file, #) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_normalize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","title":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","text":"function part MicrobiomeStat package. normalizes data object based chosen method.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_normalize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","text":"","code":"mStat_normalize_data(   data.obj,   method = c(\"Rarefy-TSS\", \"Rarefy\", \"TSS\", \"GMPR\", \"CSS\", \"DESeq\", \"TMM\"),   depth = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_normalize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. method string. normalization method applied. must one following: \"Rarefy-TSS\", \"Rarefy\", \"TSS\", \"GMPR\", \"CSS\", \"DESeq\", \"TMM\". default \"Rarefy-TSS\". - \"Rarefy-TSS\": Rarefaction followed Total Sum Scaling normalization. - \"Rarefy\": Rarefaction normalization . - \"TSS\": Total Sum Scaling normalization . - \"GMPR\": Geometric Mean Pairwise Ratios normalization method. - \"CSS\": Cumulative Sum Scaling normalization method. - \"DESeq\": Normalization using DESeq method RNA-seq data. - \"TMM\": Normalization using Trimmed Mean M-values (TMM) method edgeR package. depth integer. sequencing depth used \"Rarefy\" \"Rarefy-TSS\" methods. NULL, smallest total count dplyr::across samples used rarefaction depth.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_normalize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","text":"list. normalized data object scale factor used normalization.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_normalize_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","text":"function first checks 'data.obj' list. retrieves OTU table estimates normalization/scale factor based chosen method. data object updated normalized OTU table chosen method added 'norm.status'. function returns normalized data object scale factor.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_normalize_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize a MicrobiomeStat Data Object — mStat_normalize_data","text":"","code":"if (FALSE) { data(peerj32.obj) peerj32.obj <- mStat_normalize_data(peerj32.obj, method = \"TSS\") # library(edgeR) # peerj32.obj <- mStat_normalize_data(peerj32.obj, method = \"TMM\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"function handles time variable meta data table. sets levels time variable based provided parameters subsets data necessary.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"","code":"mStat_process_time_variable(   data.obj,   time.var,   t0.level = NULL,   ts.levels = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. table (`feature.tab`), feature names, full feature name list, feature aggregation list (`feature.agg.list`). time.var character string specifies name time variable meta data table. t0.level Character numeric, baseline time point longitudinal analysis, e.g. \"week_0\" 0. Required. ts.levels Character vector, names follow-time points, e.g. c(\"week_4\", \"week_8\"). Required.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"data frame modified version input meta data table.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"function first gets unique values time variable. , sets levels time variable based provided t0.level ts.levels. parameters provided, levels set unique values time variable. function modifies time variable meta data table based type (factor, numeric, character). time variable character, converted numeric. NA values generated conversion, message displayed. Finally, levels set include unique values time variable, function subsets data exclude missing levels displays message.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"Name","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_process_time_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle Time Variable in Meta Data Table — mStat_process_time_variable","text":"","code":"# Assuming 'meta_data' is your meta data table and 'time' is your time variable # meta_data_handled <- mStat_process_time_variable(meta_data, 'time') data(ecam.obj) mStat_process_time_variable(data.obj = ecam.obj,time.var = \"month\", t0.level = \"0\",ts.levels = c(\"1\",\"2\")) #> The data is subsetted to exclude the following levels as they are not in t0.level or ts.levels: 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 3, 4, 5, 6, 7, 8, 9 #> Data has been subsetted based on the provided condition. #> Updated metadata to match the subsetted data. #> The following samples were excluded: 10249.C001.07SS, 10249.C001.08SS, 10249.C001.09SS, 10249.C001.10SS, 10249.C001.11SS, 10249.C001.12SS, 10249.C001.13SS, 10249.C001.14SS, 10249.C001.15SS, 10249.C001.16SS, 10249.C001.17SS, 10249.C001.18SS, 10249.C001.19SS, 10249.C001.20SS, 10249.C001.25SS, 10249.C001.26SS, 10249.C001.27SS, 10249.C001.29SS, 10249.C001.30SS, 10249.C001.31SS, 10249.C001.32SS, 10249.C001.34SD, 10249.C001.34SS, 10249.C001.35SS, 10249.C001.36SD, 10249.C001.36SS, 10249.C002.05SS, 10249.C002.06SS, 10249.C002.07SS, 10249.C002.08SS, 10249.C002.09SS, 10249.C002.10SS, 10249.C002.11SS, 10249.C002.12SS, 10249.C002.13SS, 10249.C002.15SS, 10249.C002.16SS, 10249.C002.18SS, 10249.C002.19SD, 10249.C002.19SS, 10249.C002.20SS, 10249.C002.21SD, 10249.C002.21SS, 10249.C004.04SS, 10249.C004.05SS, 10249.C004.06SS, 10249.C004.07SS, 10249.C004.08SS, 10249.C004.09SS, 10249.C004.10SS, 10249.C004.11SS, 10249.C004.12SS, 10249.C004.13SS, 10249.C004.14SS, 10249.C004.15SS, 10249.C005.05SS, 10249.C005.07SS, 10249.C005.08SS, 10249.C005.09SS, 10249.C005.10SS, 10249.C005.11SS, 10249.C005.12SS, 10249.C005.13SS, 10249.C005.14SS, 10249.C005.15SS, 10249.C005.16SS, 10249.C005.17SS, 10249.C005.18SS, 10249.C005.19SD, 10249.C005.19SS, 10249.C005.20SS, 10249.C005.21SD, 10249.C005.21SS, 10249.C005.22SS, 10249.C007.05SS, 10249.C007.06SS, 10249.C007.07SS, 10249.C007.08SS, 10249.C007.09SS, 10249.C007.10SS, 10249.C007.11SS, 10249.C007.12SS, 10249.C007.13SS, 10249.C007.14SS, 10249.C007.15SS, 10249.C007.16SS, 10249.C007.17SS, 10249.C007.18SS, 10249.C007.19SS, 10249.C007.20SS, 10249.C007.21SS, 10249.C007.22SD, 10249.C007.22SS, 10249.C007.23SD, 10249.C007.23SS, 10249.C007.24SD, 10249.C007.24SS, 10249.C007.26SS, 10249.C008.04SS, 10249.C008.05SS, 10249.C008.06SS, 10249.C008.07SS, 10249.C008.08SS, 10249.C008.09SS, 10249.C008.10SS, 10249.C008.11SS, 10249.C008.12SS, 10249.C008.13SS, 10249.C008.14SS, 10249.C008.15SS, 10249.C008.16SD, 10249.C008.16SS, 10249.C008.18SS, 10249.C009.04SS, 10249.C009.05SS, 10249.C009.06SS, 10249.C009.07SS, 10249.C009.08SS, 10249.C009.09SS, 10249.C009.10SS, 10249.C009.11SS, 10249.C009.12SS, 10249.C009.13SS, 10249.C009.14SS, 10249.C009.16SS, 10249.C009.17SS, 10249.C009.18SD, 10249.C009.18SS, 10249.C009.19SS, 10249.C009.20SD, 10249.C009.20SS, 10249.C009.21SS, 10249.C010.06SS, 10249.C010.07SS, 10249.C010.08SS, 10249.C010.09SS, 10249.C010.10SS, 10249.C010.11SS, 10249.C010.12SS, 10249.C010.13SS, 10249.C010.14SS, 10249.C010.15SS, 10249.C010.16SS, 10249.C010.18SD, 10249.C010.18SS, 10249.C010.19SS, 10249.C010.20SD, 10249.C010.20SS, 10249.C010.21SS, 10249.C011.04SS, 10249.C011.05SS, 10249.C011.06SS, 10249.C011.07SS, 10249.C011.08SS, 10249.C011.09SS, 10249.C011.10SS, 10249.C011.11SS, 10249.C011.12SS, 10249.C011.13SD, 10249.C011.14SS, 10249.C011.16SS, 10249.C011.17SD, 10249.C011.17SS, 10249.C011.18SS, 10249.C011.19SD, 10249.C011.19SS, 10249.C011.20SS, 10249.C011.21SS, 10249.C012.05SS, 10249.C012.06SS, 10249.C012.07SS, 10249.C012.08SS, 10249.C012.09SS, 10249.C012.10SS, 10249.C012.11SS, 10249.C012.12SS, 10249.C012.13SS, 10249.C012.14SS, 10249.C012.15SS, 10249.C012.16SS, 10249.C012.17SS, 10249.C012.18SS, 10249.C012.19SD, 10249.C012.19SS, 10249.C012.20SS, 10249.C012.21SD, 10249.C012.21SS, 10249.C012.22SD, 10249.C012.22SS, 10249.C014.04SS, 10249.C014.05SS, 10249.C014.06SS, 10249.C014.07SS, 10249.C014.08SS, 10249.C014.09SS, 10249.C014.10SS, 10249.C014.12SS, 10249.C014.13SS, 10249.C014.15SS, 10249.C014.16SS, 10249.C014.17SS, 10249.C014.18SS, 10249.C014.19SD, 10249.C014.19SS, 10249.C014.20SD, 10249.C014.20SS, 10249.C014.21SS, 10249.C014.22SS, 10249.C016.06SS, 10249.C016.07SS, 10249.C016.08SS, 10249.C016.09SS, 10249.C016.10SS, 10249.C016.11SS, 10249.C016.12SS, 10249.C016.13SS, 10249.C016.14SS, 10249.C016.15SS, 10249.C016.17SS, 10249.C016.18SS, 10249.C016.19SS, 10249.C016.20SS, 10249.C016.21SD, 10249.C016.21SS, 10249.C016.22SD, 10249.C016.22SS, 10249.C016.23SS, 10249.C016.24SS, 10249.C017.07SS, 10249.C017.08SS, 10249.C017.09SS, 10249.C017.10SS, 10249.C017.11SS, 10249.C017.12SS, 10249.C018.03SS, 10249.C018.04SS, 10249.C018.05SS, 10249.C018.06SS, 10249.C018.07SS, 10249.C018.08SS, 10249.C018.09SS, 10249.C018.10SS, 10249.C018.11SD, 10249.C018.11SS, 10249.C018.12SD, 10249.C018.12SS, 10249.C018.13SS, 10249.C018.14SS, 10249.C018.15SS, 10249.C018.16SS, 10249.C018.17SS, 10249.C018.18SS, 10249.C018.19SS, 10249.C020.09SS, 10249.C020.10SS, 10249.C020.11SS, 10249.C020.12SS, 10249.C020.13SS, 10249.C020.14SS, 10249.C020.15SS, 10249.C020.16SS, 10249.C020.17SS, 10249.C020.18SS, 10249.C020.19SS, 10249.C020.20SS, 10249.C020.21SS, 10249.C020.22SD, 10249.C020.22SS, 10249.C020.23SD, 10249.C020.23SS, 10249.C020.24SD, 10249.C020.24SS, 10249.C020.25SD, 10249.C020.25SS, 10249.C020.26SD, 10249.C020.26SS, 10249.C020.28SS, 10249.C020.29SS, 10249.C021.04SS, 10249.C021.05SS, 10249.C021.06SS, 10249.C021.07SS, 10249.C021.08SS, 10249.C021.09SS, 10249.C021.10SS, 10249.C021.12SS, 10249.C021.13SS, 10249.C022.04SS, 10249.C022.05SS, 10249.C022.06SS, 10249.C022.07SS, 10249.C022.08SS, 10249.C022.09SS, 10249.C022.10SS, 10249.C022.11SS, 10249.C022.12SS, 10249.C022.13SS, 10249.C022.15SS, 10249.C022.16SS, 10249.C022.18SD, 10249.C022.18SS, 10249.C022.19SS, 10249.C022.20SS, 10249.C022.21SS, 10249.C024.05SS, 10249.C024.06SS, 10249.C024.07SS, 10249.C024.08SS, 10249.C024.09SS, 10249.C024.10SS, 10249.C024.12SS, 10249.C024.13SS, 10249.C024.14SS, 10249.C024.15SS, 10249.C024.16SS, 10249.C024.17SS, 10249.C024.18SS, 10249.C024.19SD, 10249.C024.19SS, 10249.C024.20SD, 10249.C024.20SS, 10249.C024.21SS, 10249.C024.22SS, 10249.C025.05SS, 10249.C025.06SS, 10249.C025.07SS, 10249.C025.08SS, 10249.C025.09SS, 10249.C025.10SS, 10249.C025.11SS, 10249.C025.12SS, 10249.C025.13SD, 10249.C025.13SS, 10249.C025.14SD, 10249.C025.14SS, 10249.C025.15SS, 10249.C025.16SS, 10249.C025.17SS, 10249.C025.18SS, 10249.C025.19SD, 10249.C025.19SS, 10249.C025.20SS, 10249.C025.21SS, 10249.C027.04SS, 10249.C027.05SS, 10249.C027.06SS, 10249.C027.07SS, 10249.C027.08SS, 10249.C027.09SS, 10249.C027.10SS, 10249.C027.11SD, 10249.C027.12SD, 10249.C027.12SS, 10249.C027.13SS, 10249.C027.14SS, 10249.C027.15SS, 10249.C027.16SS, 10249.C027.17SD, 10249.C027.17SS, 10249.C027.18SS, 10249.C027.19SD, 10249.C027.19SS, 10249.C027.20SD, 10249.C027.20SS, 10249.C027.21SS, 10249.C027.22SS, 10249.C030.05SS, 10249.C030.06SS, 10249.C030.07SS, 10249.C030.08SS, 10249.C030.09SS, 10249.C030.10SS, 10249.C030.11SD, 10249.C030.11SS, 10249.C030.12SS, 10249.C030.13SS, 10249.C030.14SS, 10249.C030.16SS, 10249.C030.17SD, 10249.C030.17SS, 10249.C030.18SS, 10249.C030.19SD, 10249.C030.19SS, 10249.C030.20SS, 10249.C031.05SS, 10249.C031.06SS, 10249.C031.07SS, 10249.C031.08SS, 10249.C031.09SS, 10249.C031.10SS, 10249.C031.11SD, 10249.C031.11SS, 10249.C031.12SS, 10249.C031.13SS, 10249.C031.14SS, 10249.C031.16SS, 10249.C031.17SD, 10249.C031.17SS, 10249.C031.18SS, 10249.C031.19SD, 10249.C031.19SS, 10249.C031.20SS, 10249.C031.21SS, 10249.C032.05SS, 10249.C032.06SS, 10249.C032.07SS, 10249.C032.09SS, 10249.C032.10SS, 10249.C032.11SD, 10249.C032.11SS, 10249.C032.12SD, 10249.C032.13SS, 10249.C032.14SS, 10249.C032.15SS, 10249.C032.16SS, 10249.C032.17SS, 10249.C032.19SD, 10249.C032.19SS, 10249.C032.20SD, 10249.C032.20SS, 10249.C032.21SS, 10249.C032.22SS, 10249.C033.04SS, 10249.C033.05SS, 10249.C033.06SS, 10249.C033.07SS, 10249.C033.08SS, 10249.C033.09SD, 10249.C033.09SS, 10249.C033.10SD, 10249.C033.10SS, 10249.C033.11SD, 10249.C033.11SS, 10249.C033.12SS, 10249.C033.13SS, 10249.C033.14SS, 10249.C033.15SS, 10249.C033.16SS, 10249.C033.17SD, 10249.C033.17SS, 10249.C033.18SD, 10249.C033.18SS, 10249.C033.19SS, 10249.C034.05SS, 10249.C034.06SS, 10249.C034.07SS, 10249.C034.08SS, 10249.C034.09SS, 10249.C034.10SS, 10249.C034.11SS, 10249.C034.12SS, 10249.C034.13SS, 10249.C034.14SS, 10249.C034.15SD, 10249.C034.15SS, 10249.C034.16SS, 10249.C034.17SD, 10249.C034.17SS, 10249.C035.04SS, 10249.C035.05SS, 10249.C035.06SD, 10249.C035.06SS, 10249.C035.07SD, 10249.C035.07SS, 10249.C035.08SS, 10249.C035.09SS, 10249.C035.10SS, 10249.C035.11SS, 10249.C035.12SD, 10249.C035.12SS, 10249.C035.13SD, 10249.C035.13SS, 10249.C035.14SD, 10249.C035.14SS, 10249.C035.15SD, 10249.C035.15SS, 10249.C035.16SS, 10249.C035.17SS, 10249.C036.04SS, 10249.C036.05SD, 10249.C036.05SS, 10249.C036.07SS, 10249.C036.08SS, 10249.C036.09SS, 10249.C036.10SS, 10249.C036.11SS, 10249.C036.12SS, 10249.C036.13SS, 10249.C036.14SD, 10249.C036.14SS, 10249.C036.15SS, 10249.C036.16SS, 10249.C037.04SS, 10249.C037.05SS, 10249.C037.06SS, 10249.C037.07SS, 10249.C037.08SS, 10249.C037.09SS, 10249.C037.10SS, 10249.C037.11SS, 10249.C037.12SD, 10249.C037.12SS, 10249.C037.13SD, 10249.C037.13SS, 10249.C037.14SS, 10249.C037.15SS, 10249.C037.16SS, 10249.C037.17SS, 10249.C037.18SS, 10249.C038.05SD, 10249.C038.05SS, 10249.C038.06SD, 10249.C038.06SS, 10249.C038.07SD, 10249.C038.07SS, 10249.C038.08SS, 10249.C038.09SS, 10249.C038.10SS, 10249.C038.11SS, 10249.C038.12SD, 10249.C038.12SS, 10249.C038.13SD, 10249.C038.13SS, 10249.C038.14SS, 10249.C038.15SD, 10249.C038.15SS, 10249.C038.16SD, 10249.C038.16SS, 10249.C038.18SS, 10249.C041.04SS, 10249.C041.05SD, 10249.C041.05SS, 10249.C041.06SD, 10249.C041.06SS, 10249.C041.08SS, 10249.C041.09SS, 10249.C041.10SS, 10249.C041.11SS, 10249.C041.12SS, 10249.C041.13SD, 10249.C041.13SS, 10249.C041.14SD, 10249.C041.14SS, 10249.C041.16SD, 10249.C041.16SS, 10249.C041.17SD, 10249.C041.17SS, 10249.C041.18SS, 10249.C041.19SS, 10249.C042.04SS, 10249.C042.05SS, 10249.C042.06SD, 10249.C042.06SS, 10249.C042.07SS, 10249.C042.08SS, 10249.C042.09SS, 10249.C042.10SS, 10249.C042.11SD, 10249.C042.11SS, 10249.C042.12SS, 10249.C042.13SS, 10249.C042.14SD, 10249.C042.14SS, 10249.C042.15SD, 10249.C042.15SS, 10249.C042.16SS, 10249.C042.17SS, 10249.C043.04SD, 10249.C043.04SS, 10249.C043.05SD, 10249.C043.05SS, 10249.C043.06SS, 10249.C043.07SS, 10249.C043.08SS, 10249.C043.09SS, 10249.C043.10SD, 10249.C043.10SS, 10249.C043.11SD, 10249.C043.11SS, 10249.C043.12SD, 10249.C043.12SS, 10249.C043.14SS, 10249.C043.15SD, 10249.C043.15SS, 10249.C043.16SS, 10249.C043.17SS, 10249.C043.18SS, 10249.C043.20SS, 10249.C044.05SS, 10249.C044.06SS, 10249.C044.07SS, 10249.C044.08SS, 10249.C044.09SS, 10249.C044.10SS, 10249.C044.11SS, 10249.C044.12SD, 10249.C044.12SS, 10249.C044.13SD, 10249.C044.13SS, 10249.C044.15SD, 10249.C044.15SS, 10249.C044.16SS, 10249.C044.17SS, 10249.C045.04SS, 10249.C045.05SD, 10249.C045.05SS, 10249.C045.06SS, 10249.C045.08SD, 10249.C045.08SS, 10249.C045.09SD, 10249.C045.09SS, 10249.C045.10SD, 10249.C045.10SS, 10249.C045.11SS, 10249.C045.12SS, 10249.C045.13SS, 10249.C046.04SS, 10249.C046.05SS, 10249.C046.06SD, 10249.C046.06SS, 10249.C046.07SD, 10249.C046.07SS, 10249.C046.08SS, 10249.C046.09SD, 10249.C046.09SS, 10249.C046.10SD, 10249.C046.10SS, 10249.C046.11SD, 10249.C046.11SS, 10249.C046.12SS, 10249.C046.13SS, 10249.C046.14SS, 10249.C047.05SS, 10249.C047.06SD, 10249.C047.06SS, 10249.C047.07SD, 10249.C047.07SS, 10249.C047.08SD, 10249.C047.08SS, 10249.C047.09SS, 10249.C047.10SS, 10249.C047.11SS, 10249.C047.13SS, 10249.C049.07SD, 10249.C049.07SS, 10249.C049.08SD, 10249.C049.08SS, 10249.C049.09SD, 10249.C049.09SS, 10249.C049.10SS, 10249.C049.11SS, 10249.C049.12SS, 10249.C049.13SS, 10249.C049.14SS, 10249.C052.05SD, 10249.C052.06SS, 10249.C052.07SS, 10249.C052.08SS, 10249.C052.09SS, 10249.C053.05SD, 10249.C053.05SS, 10249.C053.06SS, 10249.C053.07SS, 10249.C053.08SS, 10249.C053.09SS, 10249.C055.05SD, 10249.C055.05SS, 10249.C055.06SS, 10249.C055.07SS, 10249.C055.08SS, 10249.C055.09SS, 10249.C056.06SS, 10249.C056.07SS, 10249.C056.08SS, 10249.C056.09SS, 10249.C056.10SS, 10249.C057.04SD, 10249.C057.04SS, 10249.C057.05SD, 10249.C057.05SS, 10249.C057.06SS, 10249.C057.08SS, 10249.C057.09SS, 10249.C057.10SS, 10249.C057.11SS #> Updated feature table to match the subsetted data. #> Updated feature annotation to match the subsetted data. #> Data subsetting complete. Returning updated data object. #> $feature.tab #>      10249.C001.01SS 10249.C001.02SS 10249.C001.03SS 10249.C001.04SS #> sp1     0.0354682923    0.0000000000    0.0002409224    0.0000000000 #> sp2     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp3     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp4     0.0000000000    0.1247777119    0.0005162623    0.0000000000 #> sp5     0.0003958515    0.0017783047    0.0000000000    0.0000000000 #> sp6     0.0285013063    0.2783046829    0.0000000000    0.0000000000 #> sp7     0.0068086454    0.2700059277    0.0000000000    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.0003441748    0.0000000000 #> sp9     0.0022167683    0.0213396562    0.0000000000    0.0000000000 #> sp10    0.0011083841    0.0000000000    0.0003785923    0.0007443799 #> sp11    0.0007125327    0.0003951788    0.1113405610    0.0301473872 #> sp12    0.0026126197    0.0000000000    0.0000000000    0.0008932559 #> sp13    0.0022167683    0.0013831259    0.0473928756    0.0168229865 #> sp14    0.0015834059    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0039585148    0.0000000000    0.0000000000    0.0000000000 #> sp16    0.0093420948    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp18    0.0000000000    0.0000000000    0.4690758906    0.2819711181 #> sp19    0.0000000000    0.0000000000    0.0127000516    0.1136668155 #> sp20    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0062544533    0.0000000000    0.0000000000    0.0000000000 #> sp22    0.0046710474    0.0000000000    0.0000000000    0.0000000000 #> sp23    0.0022959386    0.0000000000    0.0000000000    0.0000000000 #> sp24    0.0020584277    0.0000000000    0.0000000000    0.0000000000 #> sp25    0.0003166812    0.0000000000    0.0002409224    0.0000000000 #> sp26    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp27    0.0008708732    0.0048409405    0.0003097574    0.0000000000 #> sp28    0.0000000000    0.0001975894    0.0115298572    0.0038707756 #> sp29    0.0031668118    0.0000000000    0.0000000000    0.0000000000 #> sp30    0.0078378592    0.0017783047    0.0000000000    0.0000000000 #> sp31    0.0032459821    0.0000000000    0.0015487868    0.0000000000 #> sp32    0.0020584277    0.0000000000    0.0000000000    0.0000000000 #> sp33    0.0013458950    0.0000000000    0.0000000000    0.0000000000 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0000000000    0.0261805967    0.0922044399    0.1511835641 #> sp37    0.0000000000    0.0584864651    0.0000000000    0.0000000000 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0018209168    0.0734044655    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.0033590200    0.0000000000    0.0000000000 #> sp43    0.0011083841    0.0685635250    0.0000000000    0.0000000000 #> sp44    0.8612144723    0.0042481723    0.2476682155    0.3818669049 #> sp45    0.0000000000    0.0004939735    0.0045086904    0.0180884323 #> sp46    0.0015834059    0.0013831259    0.0000000000    0.0000000000 #> sp47    0.0042751959    0.0000000000    0.0000000000    0.0007443799 #> sp48    0.0009500435    0.0590792334    0.0000000000    0.0000000000 #>      10249.C001.05SS 10249.C001.06SS 10249.C002.01SS 10249.C002.01SS.r #> sp1     0.000000e+00    0.0000000000    0.0137990228      0.0006655131 #> sp2     0.000000e+00    0.0000000000    0.0003961442      0.0000000000 #> sp3     0.000000e+00    0.0000000000    0.0003301202      0.0000000000 #> sp4     3.200745e-04    0.0003524495    0.0025089132      0.3434047651 #> sp5     0.000000e+00    0.0000000000    0.0000000000      0.0000000000 #> sp6     3.491722e-04    0.0002013997    0.0316255117      0.1927325968 #> sp7     0.000000e+00    0.0000000000    0.0019146969      0.0000000000 #> sp8     1.047517e-03    0.0001510498    0.0003961442      0.0000000000 #> sp9     0.000000e+00    0.0000000000    0.0000000000      0.0420604286 #> sp10    6.110513e-04    0.0000000000    0.0025089132      0.0000000000 #> sp11    5.417988e-02    0.0505009818    0.0000000000      0.0000000000 #> sp12    0.000000e+00    0.0000000000    0.0006602403      0.0035937708 #> sp13    2.544883e-01    0.0963194200    0.0015845768      0.0113137229 #> sp14    0.000000e+00    0.0000000000    0.0000000000      0.0005324105 #> sp15    0.000000e+00    0.0000000000    0.0040934900      0.0000000000 #> sp16    0.000000e+00    0.0000000000    0.0038954179      0.0103820045 #> sp17    4.364652e-04    0.0000000000    0.0000000000      0.0039930787 #> sp18    0.000000e+00    0.4245506269    0.0008583124      0.0000000000 #> sp19    1.329473e-01    0.0851920850    0.0000000000      0.0000000000 #> sp20    0.000000e+00    0.0000000000    0.0019807210      0.0030613603 #> sp21    0.000000e+00    0.0000000000    0.0051498746      0.0089178757 #> sp22    0.000000e+00    0.0000000000    0.0036313218      0.0053241049 #> sp23    0.000000e+00    0.0000000000    0.0023768652      0.0002662052 #> sp24    0.000000e+00    0.0000000000    0.0005281923      0.0151736989 #> sp25    0.000000e+00    0.0000000000    0.0000000000      0.0023958472 #> sp26    0.000000e+00    0.0000000000    0.0013865047      0.0397976840 #> sp27    1.745861e-04    0.0002517497    0.0052819226      0.0552375882 #> sp28    2.333634e-02    0.0081566890    0.0011884326      0.0106482098 #> sp29    0.000000e+00    0.0000000000    0.0029710815      0.0022627446 #> sp30    0.000000e+00    0.0000000000    0.0068004754      0.0019965393 #> sp31    0.000000e+00    0.0000000000    0.0023768652      0.1027552243 #> sp32    0.000000e+00    0.0000000000    0.0044896342      0.0135764675 #> sp33    0.000000e+00    0.0000000000    0.0011224086      0.0065220285 #> sp34    0.000000e+00    0.0000000000    0.0000000000      0.0000000000 #> sp35    0.000000e+00    0.0000000000    0.0000000000      0.0000000000 #> sp36    1.920447e-03    0.0467750869    0.0000000000      0.0408625050 #> sp37    8.729304e-05    0.0000000000    0.0000000000      0.0145081858 #> sp38    0.000000e+00    0.0000000000    0.0000000000      0.0000000000 #> sp39    0.000000e+00    0.0000000000    0.0000000000      0.0025289498 #> sp40    0.000000e+00    0.0000000000    0.0013865047      0.0000000000 #> sp41    0.000000e+00    0.0000000000    0.0012544566      0.0399307866 #> sp42    0.000000e+00    0.0000000000    0.0000000000      0.0053241049 #> sp43    5.237583e-04    0.0000000000    0.0000000000      0.0006655131 #> sp44    5.182006e-01    0.2798449222    0.8810907170      0.0000000000 #> sp45    1.137719e-02    0.0077035396    0.0020467450      0.0019965393 #> sp46    0.000000e+00    0.0000000000    0.0054139707      0.0058565154 #> sp47    0.000000e+00    0.0000000000    0.0017166249      0.0007986157 #> sp48    0.000000e+00    0.0000000000    0.0032351776      0.0109144150 #>      10249.C002.02SS 10249.C002.03SS 10249.C002.04SS 10249.C004.01SS #> sp1     0.0000000000    0.0001605072    9.431738e-05    0.0147956787 #> sp2     0.0014508045    0.0000000000    2.640887e-03    0.0000000000 #> sp3     0.0015826959    0.0000000000    1.273285e-03    0.0000000000 #> sp4     0.0009232393    0.0005617752    2.862061e-01    0.2263973697 #> sp5     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp6     0.0007913479    0.0003611412    3.667531e-01    0.0000000000 #> sp7     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.000000e+00    0.0199624237 #> sp9     0.1783170667    0.0000000000    0.000000e+00    0.0201972757 #> sp10    0.0007913479    0.0000000000    0.000000e+00    0.0143259746 #> sp11    0.0159588499    0.0134023514    0.000000e+00    0.0000000000 #> sp12    0.0000000000    0.0000000000    1.810894e-02    0.0000000000 #> sp13    0.0029016091    0.0812567714    3.489743e-02    0.0093940817 #> sp14    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp15    0.0087048272    0.0000000000    0.000000e+00    0.0061061531 #> sp16    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp17    0.2227644421    0.0000000000    0.000000e+00    0.0000000000 #> sp18    0.0211026114    0.0001605072    8.488564e-04    0.0000000000 #> sp19    0.1142178845    0.0002407608    2.027824e-03    0.0082198215 #> sp20    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp21    0.0000000000    0.0000000000    3.937751e-02    0.0798496947 #> sp22    0.0000000000    0.0000000000    2.008960e-02    0.1275246595 #> sp23    0.0000000000    0.0000000000    0.000000e+00    0.0075152654 #> sp24    0.0117383276    0.0000000000    0.000000e+00    0.0091592297 #> sp25    0.0000000000    0.0000000000    0.000000e+00    0.0293565054 #> sp26    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp27    0.0000000000    0.0000000000    3.626503e-02    0.1521841240 #> sp28    0.0000000000    0.0000000000    5.187456e-04    0.0000000000 #> sp29    0.0000000000    0.0000000000    0.000000e+00    0.0147956787 #> sp30    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp31    0.0000000000    0.0000000000    0.000000e+00    0.1423203382 #> sp32    0.0000000000    0.0000000000    2.216458e-03    0.0000000000 #> sp33    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp34    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp35    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp36    0.0002637826    0.1461418081    1.304881e-01    0.0110380460 #> sp37    0.0000000000    0.0000000000    8.205612e-03    0.0685767966 #> sp38    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.000000e+00    0.0004697041 #> sp41    0.0000000000    0.0000000000    0.000000e+00    0.0119774542 #> sp42    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp43    0.4144025323    0.7577143774    1.414761e-03    0.0000000000 #> sp44    0.0000000000    0.0000000000    4.819618e-02    0.0077501174 #> sp45    0.0036929570    0.0000000000    3.772695e-04    0.0070455613 #> sp46    0.0000000000    0.0000000000    0.000000e+00    0.0110380460 #> sp47    0.0003956740    0.0000000000    0.000000e+00    0.0000000000 #> sp48    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #>      10249.C004.02SS 10249.C004.03SS 10249.C005.01SS 10249.C005.01SS.r #> sp1     0.0000000000     0.000000000    0.0103350271       0.009366637 #> sp2     0.0001300390     0.000000000    0.0000000000       0.000000000 #> sp3     0.0000000000     0.000000000    0.0015502541       0.000000000 #> sp4     0.0002167317     0.000182332    0.0022392559       0.013380910 #> sp5     0.0000000000     0.000000000    0.0004306261       0.000000000 #> sp6     0.3865626355     0.475111678    0.0213590561       0.013826940 #> sp7     0.0000000000     0.000000000    0.0007751270       0.000000000 #> sp8     0.0000000000     0.000000000    0.0000000000       0.014272971 #> sp9     0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp10    0.0000000000     0.000273498    0.0049952631       0.004014273 #> sp11    0.0003901170     0.000000000    0.0000000000       0.000000000 #> sp12    0.0006068487     0.017321543    0.0032727586       0.003568243 #> sp13    0.0054182922     0.010575258    0.0114546551       0.008474576 #> sp14    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp15    0.0000000000     0.000000000    0.0058565154       0.005352364 #> sp16    0.0000000000     0.000000000    0.0068900181       0.000000000 #> sp17    0.0000000000     0.000000000    0.0006028766       0.000000000 #> sp18    0.0000000000     0.000000000    0.0009473775       0.000000000 #> sp19    0.3919809276     0.127814751    0.0005167514       0.010258698 #> sp20    0.0000000000     0.000000000    0.0018947550       0.000000000 #> sp21    0.0672735154     0.000000000    0.0028421325       0.005798394 #> sp22    0.0000000000     0.000000000    0.0034450090       0.000000000 #> sp23    0.0000000000     0.000000000    0.0022392559       0.000000000 #> sp24    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp25    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp26    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp27    0.0000000000     0.000000000    0.0021531307       0.006244425 #> sp28    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp29    0.0000000000     0.000000000    0.0030143829       0.000000000 #> sp30    0.0000000000     0.000000000    0.0084402722       0.000000000 #> sp31    0.0000000000     0.000000000    0.0049091379       0.000000000 #> sp32    0.0000000000     0.000000000    0.0054258892       0.000000000 #> sp33    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp34    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp35    0.0000000000     0.000000000    0.0002583757       0.000000000 #> sp36    0.0106631990     0.037469231    0.0000000000       0.000000000 #> sp37    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp38    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp39    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp40    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp41    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp42    0.0000000000     0.000000000    0.0000000000       0.000000000 #> sp43    0.0000000000     0.000000000    0.0053397640       0.113737734 #> sp44    0.1367576940     0.331251709    0.8842476961       0.299732382 #> sp45    0.0000000000     0.000000000    0.0000000000       0.010704728 #> sp46    0.0000000000     0.000000000    0.0025837568       0.013826940 #> sp47    0.0000000000     0.000000000    0.0019808802       0.467439786 #> sp48    0.0000000000     0.000000000    0.0000000000       0.000000000 #>      10249.C005.02SS 10249.C005.03SS 10249.C005.04SS 10249.C007.01SS #> sp1     0.000000e+00    0.0000000000    0.0000000000    0.0092926335 #> sp2     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp3     0.000000e+00    0.0000000000    0.0003476326    0.0006758279 #> sp4     3.252184e-04    0.0092237884    0.2600987277    0.0139671097 #> sp5     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp6     3.716781e-04    0.0003347343    0.0003476326    0.0202748367 #> sp7     9.291953e-05    0.0001115781    0.0000000000    0.0062514080 #> sp8     0.000000e+00    0.0000000000    0.0000000000    0.0007884659 #> sp9     0.000000e+00    0.0000000000    0.0000000000    0.0005068709 #> sp10    0.000000e+00    0.0000000000    0.0000000000    0.0088420815 #> sp11    5.946850e-03    0.0000000000    0.0020162692    0.0021964406 #> sp12    3.716781e-04    0.0000000000    0.0000000000    0.0097431854 #> sp13    2.251905e-01    0.0836463719    0.0019467427    0.0057445371 #> sp14    0.000000e+00    0.0000000000    0.0000000000    0.0067019599 #> sp15    0.000000e+00    0.0059880240    0.0095946604    0.0059134940 #> sp16    0.000000e+00    0.0000000000    0.0000000000    0.0137418337 #> sp17    0.000000e+00    0.0269275114    0.0034763262    0.0000000000 #> sp18    2.304404e-02    0.0121248187    0.0000000000    0.0025343546 #> sp19    4.385802e-02    0.0410979284    0.0363623722    0.0000000000 #> sp20    0.000000e+00    0.0418045896    0.0927831468    0.0021964406 #> sp21    0.000000e+00    0.0338825455    0.0092122645    0.0068145979 #> sp22    0.000000e+00    0.0000000000    0.0000000000    0.0085604866 #> sp23    0.000000e+00    0.0000000000    0.0000000000    0.0011826988 #> sp24    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp25    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp26    0.000000e+00    0.0000000000    0.0000000000    0.0023653976 #> sp27    2.787586e-04    0.0000000000    0.0328512828    0.0108695652 #> sp28    2.062814e-02    0.0166995202    0.0050059098    0.0000000000 #> sp29    0.000000e+00    0.0021943690    0.0338941806    0.0037733724 #> sp30    0.000000e+00    0.0570535947    0.0035458527    0.0046744762 #> sp31    0.000000e+00    0.2664484695    0.2129945074    0.0070961928 #> sp32    0.000000e+00    0.0389779447    0.2424737537    0.0024217166 #> sp33    0.000000e+00    0.0000000000    0.0000000000    0.0058571750 #> sp34    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp36    2.124140e-01    0.0000000000    0.0015295835    0.0001126380 #> sp37    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp38    0.000000e+00    0.0922750772    0.0012514774    0.0000000000 #> sp39    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.000000e+00    0.0000000000    0.0000000000    0.0032101825 #> sp42    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp43    4.674782e-01    0.2586751962    0.0483209344    0.0014642938 #> sp44    0.000000e+00    0.0125339383    0.0018424529    0.7935908989 #> sp45    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp46    0.000000e+00    0.0000000000    0.0000000000    0.0084478486 #> sp47    0.000000e+00    0.0000000000    0.0001042898    0.0118269881 #> sp48    0.000000e+00    0.0000000000    0.0000000000    0.0183599910 #>      10249.C007.02SS 10249.C007.03SS 10249.C007.04SS 10249.C008.01SS #> sp1     0.0000000000    0.0000000000    0.0000000000    0.0049048316 #> sp2     0.0000000000    0.0002116761    0.0003044526    0.0002196193 #> sp3     0.0000000000    0.0004656873    0.0000000000    0.0000000000 #> sp4     0.0007637086    0.0051648956    0.0001775974    0.0308931186 #> sp5     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp6     0.0004582251    0.0002116761    0.0001775974    0.0000000000 #> sp7     0.0000000000    0.0000000000    0.0000507421    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp9     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp10    0.0027493508    0.0030481351    0.0044906761    0.0000000000 #> sp11    0.0000000000    0.0002540113    0.0000000000    0.0000000000 #> sp12    0.0224530319    0.0172304305    0.0078142839    0.0000000000 #> sp13    0.0664426455    0.0544430803    0.0674869973    0.0016105417 #> sp14    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0000000000    0.0003386817    0.0000000000    0.0099560761 #> sp16    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.1176111196    0.4244528174    0.4339210960    0.0039531479 #> sp18    0.0406292959    0.0420388637    0.0389191932    0.0009516837 #> sp19    0.3711623644    0.0338681682    0.0021311683    0.0060029283 #> sp20    0.0000000000    0.0012277211    0.0000000000    0.0005124451 #> sp21    0.0000000000    0.0000000000    0.0000000000    0.1600292826 #> sp22    0.0000000000    0.0000000000    0.0000000000    0.0678623719 #> sp23    0.0000000000    0.0000000000    0.0000000000    0.0146412884 #> sp24    0.0000000000    0.0000000000    0.0000000000    0.0448023426 #> sp25    0.0000000000    0.0001693408    0.0000000000    0.0013177160 #> sp26    0.0000000000    0.0000000000    0.0000000000    0.1007320644 #> sp27    0.0000000000    0.0004656873    0.0000000000    0.0767203514 #> sp28    0.0771345654    0.0417001820    0.0343270329    0.0087847731 #> sp29    0.0000000000    0.0004656873    0.0000000000    0.0000000000 #> sp30    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp31    0.0000000000    0.0037254985    0.0000000000    0.3218155198 #> sp32    0.0000000000    0.0032598112    0.0000000000    0.0412152269 #> sp33    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0005856515 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0145104628    0.0019897549    0.0013700368    0.0000000000 #> sp37    0.0000000000    0.0002540113    0.0001268553    0.0768667643 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.0000000000    0.0065153734 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0020497804 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.2844050710    0.3557851065    0.3973360396    0.0080527086 #> sp44    0.0000000000    0.0000000000    0.0000000000    0.0006588580 #> sp45    0.0016801589    0.0092290758    0.0113662311    0.0083455344 #> sp46    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp47    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp48    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #>      10249.C008.02SS 10249.C008.03SS 10249.C009.01SS 10249.C009.02SS #> sp1     0.0000000000    0.0000000000    0.0034936588    0.0000000000 #> sp2     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp3     0.0132264112    0.0000000000    0.0000000000    0.0000000000 #> sp4     0.6178400333    0.3473928474    0.0070351759    0.0004455137 #> sp5     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp6     0.0055717559    0.3948266448    0.0273271117    0.0000000000 #> sp7     0.0002603624    0.0003412503    0.0032543671    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.0026322087    0.0000000000 #> sp9     0.0000000000    0.0000000000    0.0065087341    0.0000000000 #> sp10    0.0034888565    0.0000000000    0.0040679588    0.0000000000 #> sp11    0.0035409290    0.0056647557    0.0009571668    0.0017820547 #> sp12    0.0000000000    0.0000000000    0.0065565925    0.0000000000 #> sp13    0.2333368048    0.0290062790    0.0061258674    0.0022275684 #> sp14    0.0000000000    0.0000000000    0.0029672170    0.0000000000 #> sp15    0.0000000000    0.0000000000    0.0096195262    0.0000000000 #> sp16    0.0000000000    0.0000000000    0.0221584111    0.0000000000 #> sp17    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp18    0.0000000000    0.0000000000    0.0036850921    0.0000000000 #> sp19    0.0000000000    0.0000000000    0.0030629337    0.0143455404 #> sp20    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0000000000    0.0000000000    0.0087102178    0.0000000000 #> sp22    0.0000000000    0.0000000000    0.0030150754    0.0000000000 #> sp23    0.0000000000    0.0000000000    0.0042593922    0.0000000000 #> sp24    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp25    0.0000000000    0.0000000000    0.0002392917    0.0000000000 #> sp26    0.0002603624    0.0000000000    0.0000000000    0.0000000000 #> sp27    0.0003124349    0.0000000000    0.0023929170    0.3229974160 #> sp28    0.0000000000    0.0000000000    0.0000000000    0.0002673082 #> sp29    0.0000000000    0.0000000000    0.0047379756    0.0000000000 #> sp30    0.0000000000    0.0000000000    0.0062694425    0.0000000000 #> sp31    0.0000000000    0.0004095004    0.0074659009    0.0000000000 #> sp32    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp33    0.0000000000    0.0001365001    0.0065565925    0.0000000000 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.0026617527    0.0000000000    0.0000000000 #> sp36    0.0010935222    0.0004095004    0.0000000000    0.0973001871 #> sp37    0.0001562175    0.0000000000    0.0000000000    0.2643678161 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.0106227869    0.0004095004    0.0010050251    0.2407555912 #> sp44    0.1102895230    0.2187414687    0.8178511606    0.0555110042 #> sp45    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp46    0.0000000000    0.0000000000    0.0087580761    0.0000000000 #> sp47    0.0000000000    0.0000000000    0.0173247188    0.0000000000 #> sp48    0.0000000000    0.0000000000    0.0019621919    0.0000000000 #>      10249.C009.03SS 10249.C010.01SS 10249.C010.01SS.r 10249.C010.02SS #> sp1     0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp2     0.000000e+00    0.000000e+00       0.000000000    1.365188e-04 #> sp3     0.000000e+00    0.000000e+00       0.000000000    5.005688e-04 #> sp4     4.349495e-04    0.000000e+00       0.000723275    7.513993e-01 #> sp5     0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp6     0.000000e+00    2.411910e-01       0.314769275    8.268487e-02 #> sp7     0.000000e+00    0.000000e+00       0.000000000    9.101251e-05 #> sp8     0.000000e+00    0.000000e+00       0.000000000    2.275313e-04 #> sp9     1.023411e-04    2.374395e-04       0.000289310    6.825939e-04 #> sp10    7.419726e-04    2.849273e-04       0.000000000    1.183163e-03 #> sp11    3.095817e-03    4.810523e-02       0.002603790    0.000000e+00 #> sp12    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp13    5.884610e-04    0.000000e+00       0.000000000    3.658703e-02 #> sp14    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp15    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp16    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp17    0.000000e+00    0.000000e+00       0.000000000    5.005688e-04 #> sp18    1.279263e-04    0.000000e+00       0.000000000    0.000000e+00 #> sp19    3.929896e-02    0.000000e+00       0.000000000    1.638225e-03 #> sp20    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp21    1.790968e-04    0.000000e+00       0.000000000    1.911263e-03 #> sp22    0.000000e+00    0.000000e+00       0.000000000    3.640501e-04 #> sp23    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp24    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp25    0.000000e+00    0.000000e+00       0.000000000    6.370876e-04 #> sp26    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp27    3.070232e-04    4.273910e-04       0.000289310    1.501706e-03 #> sp28    0.000000e+00    0.000000e+00       0.000000000    9.101251e-05 #> sp29    0.000000e+00    0.000000e+00       0.000000000    1.820250e-04 #> sp30    1.023411e-04    0.000000e+00       0.000000000    0.000000e+00 #> sp31    0.000000e+00    0.000000e+00       0.000000000    2.138794e-03 #> sp32    0.000000e+00    1.044734e-03       0.002025170    3.640501e-04 #> sp33    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp34    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp35    0.000000e+00    1.149207e-02       0.019383770    2.730375e-04 #> sp36    1.023411e-04    0.000000e+00       0.000723275    1.638225e-03 #> sp37    7.675579e-05    1.306867e-01       0.140460003    2.002275e-03 #> sp38    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp39    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp40    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp41    0.000000e+00    0.000000e+00       0.000000000    4.550626e-04 #> sp42    0.000000e+00    2.041979e-03       0.001446550    0.000000e+00 #> sp43    1.357298e-01    6.942730e-02       0.068277159    2.093288e-03 #> sp44    8.191122e-01    4.949663e-01       0.449009113    1.100341e-01 #> sp45    0.000000e+00    0.000000e+00       0.000000000    5.460751e-04 #> sp46    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp47    0.000000e+00    0.000000e+00       0.000000000    0.000000e+00 #> sp48    0.000000e+00    9.497578e-05       0.000000000    1.365188e-04 #>      10249.C010.03SS 10249.C010.04SS 10249.C010.05SS 10249.C011.01SS #> sp1     0.000000e+00    7.669594e-05    0.0000000000    0.0077292668 #> sp2     0.000000e+00    2.684358e-04    0.0010735897    0.0000000000 #> sp3     1.725874e-04    1.265483e-03    0.0000000000    0.0000000000 #> sp4     3.419819e-01    3.358899e-01    0.4616435682    0.0083559641 #> sp5     0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp6     2.338559e-01    3.276451e-01    0.2399960960    0.0772926676 #> sp7     5.752912e-05    0.000000e+00    0.0000000000    0.0049091289 #> sp8     0.000000e+00    0.000000e+00    0.0000000000    0.0004177982 #> sp9     5.752912e-05    0.000000e+00    0.0000000000    0.0045957802 #> sp10    0.000000e+00    3.067838e-04    0.0000000000    0.0061625235 #> sp11    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp12    0.000000e+00    0.000000e+00    0.0022447785    0.0537915187 #> sp13    9.492305e-03    2.266365e-02    0.0031231700    0.0000000000 #> sp14    0.000000e+00    0.000000e+00    0.0004879953    0.0421976186 #> sp15    0.000000e+00    0.000000e+00    0.0024399766    0.0382285356 #> sp16    0.000000e+00    0.000000e+00    0.0000000000    0.0414664717 #> sp17    0.000000e+00    0.000000e+00    0.0059535428    0.0000000000 #> sp18    0.000000e+00    0.000000e+00    0.0032207691    0.0442866096 #> sp19    5.177621e-04    0.000000e+00    0.0205934023    0.0000000000 #> sp20    0.000000e+00    4.601756e-04    0.0000000000    0.0121161479 #> sp21    0.000000e+00    0.000000e+00    0.0040991606    0.0161896804 #> sp22    0.000000e+00    0.000000e+00    0.0000000000    0.0041779820 #> sp23    0.000000e+00    0.000000e+00    0.0000000000    0.0014622937 #> sp24    0.000000e+00    0.000000e+00    0.0008783916    0.0000000000 #> sp25    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp26    0.000000e+00    0.000000e+00    0.0000000000    0.0043868811 #> sp27    2.876456e-04    2.684358e-04    0.0188366192    0.0030290370 #> sp28    0.000000e+00    0.000000e+00    0.0000000000    0.0113850010 #> sp29    0.000000e+00    0.000000e+00    0.0000000000    0.0126383957 #> sp30    0.000000e+00    0.000000e+00    0.0011711888    0.0047002298 #> sp31    0.000000e+00    0.000000e+00    0.0713449151    0.0000000000 #> sp32    0.000000e+00    0.000000e+00    0.0000000000    0.0139962398 #> sp33    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp34    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp35    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp36    1.725874e-04    7.669594e-04    0.0766152645    0.0014622937 #> sp37    1.150582e-04    7.669594e-05    0.0091743119    0.0034468352 #> sp38    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp39    0.000000e+00    0.000000e+00    0.0002927972    0.0000000000 #> sp40    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp41    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp42    0.000000e+00    0.000000e+00    0.0000000000    0.0000000000 #> sp43    4.314684e-04    5.752195e-04    0.0565098575    0.0016711928 #> sp44    4.127715e-01    3.094298e-01    0.0051727503    0.5697723000 #> sp45    8.629369e-05    3.067838e-04    0.0000000000    0.0000000000 #> sp46    0.000000e+00    0.000000e+00    0.0000000000    0.0058491748 #> sp47    0.000000e+00    0.000000e+00    0.0010735897    0.0042824316 #> sp48    0.000000e+00    0.000000e+00    0.0140542651    0.0000000000 #>      10249.C011.02SS 10249.C011.03SS 10249.C012.01SS 10249.C012.01SS.r #> sp1     0.000000e+00    0.0000000000    0.0028744104      0.000000e+00 #> sp2     0.000000e+00    0.0001196029    0.0000000000      8.292236e-04 #> sp3     0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp4     6.814732e-04    0.0004784117    0.0014740566      2.683629e-01 #> sp5     0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp6     2.787845e-04    0.0000000000    0.0207841981      4.364335e-04 #> sp7     0.000000e+00    0.0000000000    0.0031692217      0.000000e+00 #> sp8     0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp9     2.428523e-02    0.0000000000    0.0000000000      6.764719e-03 #> sp10    1.517827e-03    0.0000000000    0.0036114387      0.000000e+00 #> sp11    1.694390e-02    0.0083722043    0.0000000000      3.185964e-03 #> sp12    4.863241e-03    0.0000000000    0.0066332547      1.178370e-02 #> sp13    1.672707e-03    0.0023322569    0.0016951651      6.110069e-04 #> sp14    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp15    0.000000e+00    0.0000000000    0.0015477594      0.000000e+00 #> sp16    0.000000e+00    0.0000000000    0.0099498821      0.000000e+00 #> sp17    6.837964e-01    0.0000000000    0.0000000000      6.982935e-04 #> sp18    1.734659e-03    0.0088506160    0.0003685142      0.000000e+00 #> sp19    6.814732e-04    0.0000000000    0.0000000000      1.079736e-01 #> sp20    0.000000e+00    0.0000000000    0.0014003538      0.000000e+00 #> sp21    0.000000e+00    0.0000000000    0.0064121462      2.662244e-03 #> sp22    0.000000e+00    0.0717617510    0.0011055425      0.000000e+00 #> sp23    0.000000e+00    0.0000000000    0.0002211085      1.920307e-02 #> sp24    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp25    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp26    0.000000e+00    0.0000000000    0.0018425708      1.991882e-01 #> sp27    5.885451e-04    0.5458079177    0.0024321934      2.411295e-01 #> sp28    1.548803e-04    0.0000000000    0.0023584906      3.666041e-03 #> sp29    0.000000e+00    0.0000000000    0.0077387972      0.000000e+00 #> sp30    0.000000e+00    0.0000000000    0.0060436321      0.000000e+00 #> sp31    0.000000e+00    0.0000000000    0.0026533019      0.000000e+00 #> sp32    1.867856e-02    0.0000000000    0.0072228774      0.000000e+00 #> sp33    0.000000e+00    0.0000000000    0.0041273585      2.182167e-04 #> sp34    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp35    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp36    2.447108e-03    0.0033488817    0.0000000000      1.592982e-02 #> sp37    0.000000e+00    0.0000000000    0.0000000000      8.728669e-05 #> sp38    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp39    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp40    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp41    6.195211e-05    0.0000000000    0.0002948113      0.000000e+00 #> sp42    0.000000e+00    0.0000000000    0.0000000000      0.000000e+00 #> sp43    1.804975e-01    0.1189451023    0.0036114387      9.950683e-03 #> sp44    5.801815e-02    0.2399832556    0.7917158019      9.723738e-02 #> sp45    3.097606e-03    0.0000000000    0.0000000000      1.008161e-02 #> sp46    0.000000e+00    0.0000000000    0.0082547170      0.000000e+00 #> sp47    0.000000e+00    0.0000000000    0.0095076651      0.000000e+00 #> sp48    0.000000e+00    0.0000000000    0.0909492925      0.000000e+00 #>      10249.C012.02SS 10249.C012.03SS 10249.C012.04SS 10249.C014.01SS #> sp1     0.0000000000    0.0000000000     0.000000000    0.0062466051 #> sp2     0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp3     0.0000000000    0.0039123631     0.000000000    0.0004752852 #> sp4     0.4003231967    0.4732655190     0.411908187    0.0000000000 #> sp5     0.0000000000    0.0003912363     0.000000000    0.0000000000 #> sp6     0.0000000000    0.0083029038     0.000437801    0.0275665399 #> sp7     0.0000000000    0.0007390019     0.000000000    0.0069255839 #> sp8     0.0000000000    0.0000000000     0.000000000    0.0018332428 #> sp9     0.0000000000    0.0007824726     0.000000000    0.0048886475 #> sp10    0.0568532393    0.0063467223     0.002063919    0.0050244432 #> sp11    0.0000000000    0.0002608242     0.009819251    0.0000000000 #> sp12    0.0045541354    0.0031298905     0.000000000    0.0026480174 #> sp13    0.0656676950    0.0353851504     0.105009694    0.0022406301 #> sp14    0.0000000000    0.0000000000     0.000000000    0.0009505703 #> sp15    0.0000000000    0.0003477656     0.000000000    0.0069255839 #> sp16    0.0004407228    0.0000000000     0.000000000    0.0087588267 #> sp17    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp18    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp19    0.0000000000    0.0000000000     0.000437801    0.0000000000 #> sp20    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp21    0.0000000000    0.0019996522     0.000000000    0.0049565454 #> sp22    0.0000000000    0.0004347070     0.000000000    0.0003394894 #> sp23    0.0000000000    0.0000000000     0.000000000    0.0035985877 #> sp24    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp25    0.0000000000    0.0003477656     0.000000000    0.0000000000 #> sp26    0.0000000000    0.0060424274     0.000000000    0.0000000000 #> sp27    0.0000000000    0.0009563554     0.000312715    0.0031233026 #> sp28    0.0000000000    0.0000000000     0.007817875    0.0035306898 #> sp29    0.0000000000    0.0000000000     0.000000000    0.0012900598 #> sp30    0.0000000000    0.0012606503     0.000000000    0.0081477458 #> sp31    0.0000000000    0.0021735350     0.000000000    0.0078082564 #> sp32    0.0000000000    0.0002608242     0.000000000    0.0020369364 #> sp33    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp34    0.0000000000    0.0003912363     0.000000000    0.0000000000 #> sp35    0.0000000000    0.0000000000     0.000000000    0.0001357958 #> sp36    0.0000000000    0.0001738828     0.000000000    0.0000000000 #> sp37    0.0000000000    0.0002608242     0.000187629    0.0013579576 #> sp38    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp39    0.0000000000    0.0000000000     0.000000000    0.0019011407 #> sp40    0.0000000000    0.0000000000     0.000000000    0.0000000000 #> sp41    0.0000000000    0.0003477656     0.000000000    0.0000000000 #> sp42    0.0000000000    0.0000000000     0.000000000    0.0021048343 #> sp43    0.4156015866    0.4239697444     0.136718994    0.0027159153 #> sp44    0.0558248861    0.0252999478     0.308899869    0.8741173275 #> sp45    0.0007345380    0.0018692401     0.016198637    0.0000000000 #> sp46    0.0000000000    0.0000869414     0.000000000    0.0059750136 #> sp47    0.0000000000    0.0012606503     0.000000000    0.0023764259 #> sp48    0.0000000000    0.0000000000     0.000187629    0.0000000000 #>      10249.C014.01SS.r 10249.C014.02SS 10249.C014.03SS 10249.C016.01SS #> sp1       0.0000000000    0.0000000000    0.0000000000    0.0104161823 #> sp2       0.0022086996    0.0000000000    0.0196614680    0.0000000000 #> sp3       0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp4       0.0015325670    0.0003664514    0.0010348141    0.0047895838 #> sp5       0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp6       0.0001803020    0.0002290321    0.0000000000    0.0353871193 #> sp7       0.0000000000    0.0000000000    0.0000000000    0.0019065334 #> sp8       0.0002253775    0.0000000000    0.0000000000    0.0038595675 #> sp9       0.0000000000    0.0000000000    0.0407273265    0.0051615903 #> sp10      0.0000000000    0.0000000000    0.0004434918    0.0062776099 #> sp11      0.0000000000    0.0283083688    0.0136743292    0.0015345269 #> sp12      0.0000000000    0.0000000000    0.0015522212    0.0077656359 #> sp13      0.1593418977    0.0068251569    0.0115307857    0.0025110439 #> sp14      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15      0.0000000000    0.0000000000    0.0000000000    0.0057661009 #> sp16      0.0000000000    0.0000000000    0.0000000000    0.0084166473 #> sp17      0.0000000000    0.0000000000    0.5165200680    0.0021390374 #> sp18      0.0004056795    0.0000000000    0.0000000000    0.0028830505 #> sp19      0.0000000000    0.0005038706    0.0439056841    0.0010230179 #> sp20      0.0000000000    0.0000000000    0.0000000000    0.0007440130 #> sp21      0.0000000000    0.0003206450    0.0000000000    0.0132527319 #> sp22      0.0000000000    0.1599102194    0.0000000000    0.0035805627 #> sp23      0.0000000000    0.0000000000    0.0000000000    0.0010230179 #> sp24      0.0000000000    0.0005496771    0.0000000000    0.0009300163 #> sp25      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp26      0.0000000000    0.0000000000    0.0737674625    0.0007905138 #> sp27      0.0004507550    0.0000000000    0.0000000000    0.0033015578 #> sp28      0.1763804372    0.0000000000    0.0215093503    0.0000000000 #> sp29      0.0000000000    0.0000000000    0.0000000000    0.0037200651 #> sp30      0.0000000000    0.0000000000    0.0000000000    0.0073936294 #> sp31      0.0000000000    0.0000000000    0.0000000000    0.0075796326 #> sp32      0.0000000000    0.0000000000    0.0013304753    0.0053475936 #> sp33      0.0000000000    0.0000000000    0.0000000000    0.0034875610 #> sp34      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36      0.6581473969    0.0628922175    0.0408012418    0.0000000000 #> sp37      0.0000000000    0.0000000000    0.0000000000    0.0017670309 #> sp38      0.0000000000    0.0000000000    0.0000000000    0.0007440130 #> sp39      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp40      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41      0.0000000000    0.0000000000    0.0000000000    0.0004650081 #> sp42      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43      0.0000000000    0.0597315744    0.1228472171    0.0006045106 #> sp44      0.0011268875    0.6767898859    0.0881809446    0.8172053011 #> sp45      0.0000000000    0.0000000000    0.0014783059    0.0000000000 #> sp46      0.0000000000    0.0012825798    0.0010348141    0.0099976750 #> sp47      0.0000000000    0.0022903211    0.0000000000    0.0046035806 #> sp48      0.0000000000    0.0000000000    0.0000000000    0.0136247384 #>      10249.C016.02SS 10249.C016.03SS 10249.C016.04SS 10249.C016.05SS #> sp1     0.0005536843    0.0011506783    0.0000000000    0.0000000000 #> sp2     0.0000000000    0.0008478682    0.0000000000    0.0000000000 #> sp3     0.0000000000    0.0018774225    0.0000000000    0.0000000000 #> sp4     0.0000000000    0.0922359496    0.0291854132    0.1756052712 #> sp5     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp6     0.5494393946    0.0003028101    0.6668245323    0.4839871284 #> sp7     0.0000000000    0.0002422481    0.0000000000    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp9     0.0000000000    0.0001816860    0.0000000000    0.0000000000 #> sp10    0.0000000000    0.0000000000    0.0009471939    0.0003064664 #> sp11    0.0000000000    0.0039365310    0.0000000000    0.0006895495 #> sp12    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp13    0.0000000000    0.0657703488    0.0023679848    0.0003064664 #> sp14    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp16    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.0000000000    0.0009689922    0.0130831163    0.0000000000 #> sp18    0.0000000000    0.0003633721    0.0000000000    0.0000000000 #> sp19    0.0000000000    0.1058018411    0.1446838740    0.0039840637 #> sp20    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0000000000    0.1474079457    0.0000000000    0.0000000000 #> sp22    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp23    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp24    0.0000000000    0.3251574612    0.0000000000    0.0000000000 #> sp25    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp26    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp27    0.0000000000    0.0397286822    0.0005327966    0.1428133619 #> sp28    0.0000000000    0.0162911822    0.0000000000    0.0000000000 #> sp29    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp30    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp31    0.0000000000    0.0000000000    0.0001775989    0.0000000000 #> sp32    0.0000000000    0.0004239341    0.0000000000    0.0000000000 #> sp33    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0000000000    0.1090116279    0.0000000000    0.0000000000 #> sp37    0.0000000000    0.0846656977    0.0003551977    0.0000000000 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.0027858527    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.4463618327    0.0003028101    0.1258583945    0.0686484830 #> sp44    0.0010612283    0.0004239341    0.0159838977    0.1236592093 #> sp45    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp46    0.0023070179    0.0000000000    0.0000000000    0.0000000000 #> sp47    0.0002768422    0.0001211240    0.0000000000    0.0000000000 #> sp48    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #>      10249.C017.01SS 10249.C017.01SS.r 10249.C017.02SS 10249.C017.03SS #> sp1     0.0085665068      0.0108577633     0.003030303    0.0000000000 #> sp2     0.0000000000      0.0000000000     0.000000000    0.0000000000 #> sp3     0.0000000000      0.0000000000     0.000000000    0.0000000000 #> sp4     0.0000000000      0.3977560623     0.639015152    0.0014111922 #> sp5     0.0000000000      0.0000000000     0.006818182    0.0000000000 #> sp6     0.0192746403      0.0322113645     0.044318182    0.2591727494 #> sp7     0.0015829415      0.0571842201     0.000000000    0.0000000000 #> sp8     0.0014432702      0.0000000000     0.000000000    0.0000000000 #> sp9     0.0032589972      0.0010857763     0.007954545    0.0000000000 #> sp10    0.0027003119      0.0068765834     0.020454545    0.0000000000 #> sp11    0.0000000000      0.0224393775     0.000000000    0.0017031630 #> sp12    0.0015829415      0.0028954035     0.000000000    0.0000000000 #> sp13    0.0030727688      0.0072385089     0.019696970    0.0000000000 #> sp14    0.0017226128      0.0000000000     0.000000000    0.0000000000 #> sp15    0.0071232366      0.0170104958     0.000000000    0.0000000000 #> sp16    0.0090320778      0.0000000000     0.000000000    0.0000000000 #> sp17    0.0006517994      0.0246109301     0.000000000    0.0004379562 #> sp18    0.0013035989      0.0000000000     0.000000000    0.0000000000 #> sp19    0.0031658830      0.0553745928     0.000000000    0.0000000000 #> sp20    0.0002793426      0.0000000000     0.000000000    0.0000000000 #> sp21    0.0104287909      0.0256967065     0.021212121    0.0002919708 #> sp22    0.0018622841      0.0448787550     0.017424242    0.0000000000 #> sp23    0.0000000000      0.0000000000     0.000000000    0.0000000000 #> sp24    0.0000000000      0.0000000000     0.000000000    0.0000000000 #> sp25    0.0016760557      0.0119435396     0.000000000    0.0000000000 #> sp26    0.0000000000      0.0152008686     0.000000000    0.0000000000 #> sp27    0.0110340332      0.0528411147     0.041666667    0.0002433090 #> sp28    0.0009311420      0.0083242852     0.000000000    0.0000000000 #> sp29    0.0034452256      0.0000000000     0.000000000    0.0000000000 #> sp30    0.0092648634      0.0000000000     0.000000000    0.0000000000 #> sp31    0.0027468690      0.0372783207     0.000000000    0.0000000000 #> sp32    0.0055402952      0.0054288817     0.000000000    0.0001459854 #> sp33    0.0031658830      0.0000000000     0.000000000    0.0000000000 #> sp34    0.0000000000      0.0000000000     0.000000000    0.0000000000 #> sp35    0.0000000000      0.0025334781     0.000000000    0.0090997567 #> sp36    0.0003258997      0.0434310532     0.000000000    0.0000000000 #> sp37    0.0000000000      0.0296778864     0.009848485    0.1267639903 #> sp38    0.0010708134      0.0000000000     0.000000000    0.0000000000 #> sp39    0.0009776991      0.0173724213     0.000000000    0.0000000000 #> sp40    0.0000000000      0.0126673905     0.000000000    0.0000000000 #> sp41    0.0000000000      0.0104958379     0.000000000    0.0000000000 #> sp42    0.0000000000      0.0000000000     0.000000000    0.0008272506 #> sp43    0.0034452256      0.0267824828     0.044696970    0.0656934307 #> sp44    0.8626565483      0.0101339124     0.038257576    0.5342092457 #> sp45    0.0000000000      0.0000000000     0.000000000    0.0000000000 #> sp46    0.0050747241      0.0090481361     0.000000000    0.0000000000 #> sp47    0.0072629080      0.0000000000     0.075378788    0.0000000000 #> sp48    0.0043298105      0.0007238509     0.010227273    0.0000000000 #>      10249.C017.04SS 10249.C017.05SS 10249.C017.06SS 10249.C018.01SS #> sp1     0.0002536140    0.0000000000    0.0000000000    0.000000e+00 #> sp2     0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp3     0.0000000000    0.0000000000    0.0000000000    1.296075e-04 #> sp4     0.0002536140    0.4022968041    0.3304225352    7.776453e-05 #> sp5     0.0000000000    0.0000000000    0.0002012072    0.000000e+00 #> sp6     0.0004057824    0.0000000000    0.0002414487    2.073721e-04 #> sp7     0.0022318032    0.0551054927    0.0000000000    0.000000e+00 #> sp8     0.0000000000    0.0000000000    0.0338832998    0.000000e+00 #> sp9     0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp10    0.0355059599    0.0010682810    0.0000000000    1.192130e-01 #> sp11    0.0000000000    0.0027597258    0.0006841046    0.000000e+00 #> sp12    0.0000000000    0.0000000000    0.0121931590    0.000000e+00 #> sp13    0.0537661679    0.0102376925    0.0191549296    8.605941e-03 #> sp14    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp15    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp16    0.0000000000    0.0000000000    0.0000000000    5.184302e-05 #> sp17    0.0000000000    0.0000000000    0.0050301811    3.914148e-02 #> sp18    0.0000000000    0.0000000000    0.0075653924    2.113640e-01 #> sp19    0.0000000000    0.0003560937    0.0704627767    0.000000e+00 #> sp20    0.0000000000    0.0000000000    0.0003621730    0.000000e+00 #> sp21    0.0000000000    0.0013353512    0.2313078471    6.175281e-01 #> sp22    0.0000000000    0.0008012107    0.0106639839    0.000000e+00 #> sp23    0.0001521684    0.0000000000    0.0000000000    0.000000e+00 #> sp24    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp25    0.0000000000    0.0000000000    0.0002414487    0.000000e+00 #> sp26    0.0000000000    0.0000000000    0.0000000000    1.296075e-04 #> sp27    0.0003550596    0.0000000000    0.1144064386    0.000000e+00 #> sp28    0.0003043368    0.0003560937    0.0030985915    0.000000e+00 #> sp29    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp30    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp31    0.0000000000    0.0013353512    0.0000000000    0.000000e+00 #> sp32    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp33    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp36    0.0110575704    0.0031158195    0.0585110664    0.000000e+00 #> sp37    0.3049454730    0.0040950770    0.0191146881    0.000000e+00 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp39    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp40    0.0000000000    0.0000000000    0.0016901408    0.000000e+00 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp43    0.5903119452    0.5168699368    0.0014084507    0.000000e+00 #> sp44    0.0004565052    0.0000000000    0.0761368209    2.073721e-04 #> sp45    0.0000000000    0.0002670702    0.0027364185    3.343875e-03 #> sp46    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #> sp47    0.0000000000    0.0000000000    0.0004828974    0.000000e+00 #> sp48    0.0000000000    0.0000000000    0.0000000000    0.000000e+00 #>      10249.C018.01SS.r 10249.C018.02SS 10249.C020.01SS 10249.C020.01SS.r #> sp1       0.0000000000    0.0000000000    0.0072079423      0.0099812118 #> sp2       0.0009700548    0.0000000000    0.0009519924      0.0079849695 #> sp3       0.0011387600    0.0000000000    0.0000000000      0.0000000000 #> sp4       0.2150991143    0.5270128965    0.0021079831      0.0608266792 #> sp5       0.0000000000    0.0000000000    0.0000000000      0.0009394082 #> sp6       0.1520033741    0.0967235971    0.0405956752      0.0436824800 #> sp7       0.0000000000    0.0001161845    0.0063919489      0.0541333960 #> sp8       0.0005061156    0.0000000000    0.0018359853      0.0000000000 #> sp9       0.0000000000    0.0014523063    0.0008159935      0.0000000000 #> sp10      0.0000000000    0.0000000000    0.0099959200      0.0009394082 #> sp11      0.0272880641    0.0013361218    0.0000000000      0.0000000000 #> sp12      0.2174188106    0.0376437783    0.0016319869      0.0009394082 #> sp13      0.0269084774    0.0035436273    0.0054399565      0.0183184594 #> sp14      0.0000000000    0.0000000000    0.0031279750      0.0000000000 #> sp15      0.0000000000    0.0095271291    0.0052359581      0.0055190230 #> sp16      0.0000000000    0.0000000000    0.0089759282      0.0000000000 #> sp17      0.0000000000    0.0002904613    0.0004759962      0.0081023955 #> sp18      0.0000000000    0.0000000000    0.0000000000      0.0014091123 #> sp19      0.0108393083    0.0000000000    0.0000000000      0.0345232504 #> sp20      0.0000000000    0.0000000000    0.0014279886      0.0008219822 #> sp21      0.0000000000    0.0060415941    0.0258397933      0.0736261155 #> sp22      0.0450864614    0.0025560590    0.0046239630      0.1176608736 #> sp23      0.0000000000    0.0000000000    0.0014959880      0.0135039925 #> sp24      0.0000000000    0.0161496456    0.0000000000      0.0502583372 #> sp25      0.0000000000    0.0000000000    0.0023799810      0.0016439643 #> sp26      0.0000000000    0.0000000000    0.0017679859      0.0874823861 #> sp27      0.0745255167    0.0563494830    0.0026519788      0.0288868013 #> sp28      0.0000000000    0.0000000000    0.0000000000      0.0252465946 #> sp29      0.0000000000    0.0000000000    0.0024479804      0.0000000000 #> sp30      0.0000000000    0.0619263390    0.0087719298      0.0028182245 #> sp31      0.0000000000    0.0000000000    0.0074119407      0.1336308126 #> sp32      0.0004639393    0.0072034391    0.0060519516      0.0245420385 #> sp33      0.0000000000    0.0000000000    0.0017679859      0.0019962424 #> sp34      0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp35      0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp36      0.0219738507    0.0026141513    0.0000000000      0.0126820103 #> sp37      0.0000000000    0.0003485535    0.0010199918      0.0320573039 #> sp38      0.0000000000    0.0000000000    0.0000000000      0.0024659465 #> sp39      0.0000000000    0.0012199373    0.0000000000      0.0568341945 #> sp40      0.0022775200    0.0000000000    0.0000000000      0.0003522781 #> sp41      0.1167861662    0.0107470663    0.0000000000      0.0018788163 #> sp42      0.0000000000    0.0000000000    0.0000000000      0.0017613903 #> sp43      0.0004217630    0.1553967701    0.0021759826      0.0643494598 #> sp44      0.0510754956    0.0004066458    0.8177614579      0.0106857680 #> sp45      0.0334879798    0.0013942140    0.0027199782      0.0000000000 #> sp46      0.0000000000    0.0000000000    0.0080239358      0.0000000000 #> sp47      0.0017292282    0.0000000000    0.0068679451      0.0000000000 #> sp48      0.0000000000    0.0000000000    0.0000000000      0.0075152654 #>      10249.C020.02SS 10249.C020.03SS 10249.C020.04SS 10249.C020.05SS #> sp1     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp2     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp3     0.0000000000    0.000000e+00    0.0027942855    0.0009020460 #> sp4     0.0000000000    4.990376e-04    0.0004329175    0.0006150314 #> sp5     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp6     0.0000000000    1.263634e-01    0.0001967807    0.0003690188 #> sp7     0.0000000000    7.129108e-05    0.0000000000    0.0000000000 #> sp8     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp9     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp10    0.0014814815    0.000000e+00    0.0042898186    0.0098405019 #> sp11    0.0620662768    0.000000e+00    0.0174741233    0.0268563697 #> sp12    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp13    0.0002339181    2.851643e-04    0.0091699791    0.0210340727 #> sp14    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp15    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp16    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp17    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp18    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp19    0.1074463938    4.402581e-01    0.0070053918    0.0061913158 #> sp20    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp21    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp22    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp23    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp24    0.0000000000    0.000000e+00    0.0001967807    0.0000000000 #> sp25    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp26    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp27    0.0000000000    3.564554e-04    0.0000000000    0.0002460125 #> sp28    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp29    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp30    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp31    0.0000000000    1.069366e-04    0.0000000000    0.0000000000 #> sp32    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp33    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp34    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp36    0.0000000000    5.703287e-04    0.0000000000    0.0000000000 #> sp37    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp38    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp43    0.0000000000    4.633920e-04    0.5919556063    0.6905572184 #> sp44    0.8287719298    4.295644e-01    0.3663662482    0.2384681619 #> sp45    0.0000000000    1.461467e-03    0.0001180684    0.0000000000 #> sp46    0.0000000000    0.000000e+00    0.0000000000    0.0049202509 #> sp47    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp48    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #>      10249.C020.06SS 10249.C020.07SS 10249.C020.08SS 10249.C021.01SS #> sp1     0.0009728623    0.000000e+00    0.0000000000    0.0122302719 #> sp2     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp3     0.0025089606    0.000000e+00    0.0001163196    0.0000000000 #> sp4     0.0000000000    1.453664e-03    0.0009305572    0.0006231986 #> sp5     0.0000000000    0.000000e+00    0.0000000000    0.0003894991 #> sp6     0.0001536098    5.572380e-03    0.4174130511    0.0314715276 #> sp7     0.0000000000    0.000000e+00    0.0000000000    0.0032717925 #> sp8     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp9     0.0000000000    0.000000e+00    0.0000000000    0.0093479785 #> sp10    0.0315924219    3.937008e-04    0.0017447947    0.0021032952 #> sp11    0.0117255504    0.000000e+00    0.0180877050    0.0009347978 #> sp12    0.0000000000    0.000000e+00    0.0000000000    0.0017137961 #> sp13    0.0104454685    4.875833e-03    0.0007560777    0.0032717925 #> sp14    0.0000000000    0.000000e+00    0.0000000000    0.0018695957 #> sp15    0.0000000000    0.000000e+00    0.0000000000    0.0014021968 #> sp16    0.0000000000    0.000000e+00    0.0000000000    0.0128534704 #> sp17    0.0000000000    3.028468e-04    0.0000000000    0.0000000000 #> sp18    0.0000000000    0.000000e+00    0.0000000000    0.0018695957 #> sp19    0.0422939068    3.028468e-04    0.0602535768    0.0000000000 #> sp20    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp21    0.0000000000    0.000000e+00    0.0000000000    0.0063098855 #> sp22    0.0000000000    0.000000e+00    0.0000000000    0.0004673989 #> sp23    0.0000000000    0.000000e+00    0.0000000000    0.0023369946 #> sp24    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp25    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp26    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp27    0.0000000000    9.430648e-02    0.0002326393    0.0062319857 #> sp28    0.0000000000    0.000000e+00    0.0000000000    0.0024927943 #> sp29    0.0000000000    0.000000e+00    0.0000000000    0.0059203864 #> sp30    0.0000000000    0.000000e+00    0.0000000000    0.0031938927 #> sp31    0.0000000000    0.000000e+00    0.0000000000    0.0021032952 #> sp32    0.0000000000    0.000000e+00    0.0000000000    0.0011684973 #> sp33    0.0000000000    0.000000e+00    0.0000000000    0.0007789982 #> sp34    0.0000000000    0.000000e+00    0.0000000000    0.0041286905 #> sp35    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp36    0.0000000000    2.119927e-04    0.0016284750    0.0000000000 #> sp37    0.0000000000    6.335857e-01    0.0000000000    0.0021811950 #> sp38    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.000000e+00    0.0000000000    0.0017137961 #> sp40    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.000000e+00    0.0000000000    0.0003115993 #> sp42    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp43    0.6904249872    9.930345e-02    0.0000000000    0.0000000000 #> sp44    0.2059395801    1.589643e-01    0.4894730720    0.8434213601 #> sp45    0.0000000000    3.331314e-04    0.0093637315    0.0031938927 #> sp46    0.0039426523    3.331314e-04    0.0000000000    0.0087247799 #> sp47    0.0000000000    0.000000e+00    0.0000000000    0.0165147620 #> sp48    0.0000000000    6.056935e-05    0.0000000000    0.0054529875 #>      10249.C021.02SS 10249.C021.03SS 10249.C022.01SS 10249.C022.01SS.r #> sp1     0.0069884254    0.000000e+00    0.0051349663      0.0010610080 #> sp2     0.0034942127    2.688269e-02    0.0002081743      0.0000000000 #> sp3     0.0000000000    2.692756e-04    0.0000000000      0.0003536693 #> sp4     0.2465603844    8.975855e-05    0.0022205260      0.0132625995 #> sp5     0.0000000000    0.000000e+00    0.0000000000      0.0000000000 #> sp6     0.0659532649    0.000000e+00    0.0258136146      0.0060123784 #> sp7     0.0054597074    0.000000e+00    0.0024980917      0.0042440318 #> sp8     0.0016379122    0.000000e+00    0.0000000000      0.0000000000 #> sp9     0.0029482420    0.000000e+00    0.0059676636      0.0000000000 #> sp10    0.3436339812    0.000000e+00    0.0028450489      0.0077807250 #> sp11    0.0000000000    1.705412e-03    0.0006939144      0.0189213086 #> sp12    0.0064424547    0.000000e+00    0.0016653945      0.0000000000 #> sp13    0.0362524569    2.953056e-02    0.0017347859      0.0546419098 #> sp14    0.0000000000    0.000000e+00    0.0000000000      0.0000000000 #> sp15    0.0003275824    0.000000e+00    0.0040247034      0.0000000000 #> sp16    0.0000000000    0.000000e+00    0.0077718410      0.0000000000 #> sp17    0.0066608430    0.000000e+00    0.0000000000      0.0000000000 #> sp18    0.0087355318    1.961224e-02    0.0028450489      0.0000000000 #> sp19    0.0136492684    4.609102e-02    0.0000000000      0.0060123784 #> sp20    0.0000000000    6.731891e-04    0.0000000000      0.0125552608 #> sp21    0.0093906967    0.000000e+00    0.0067309694      0.0162687887 #> sp22    0.0085171435    1.795171e-04    0.0032613975      0.0061892131 #> sp23    0.0033850186    0.000000e+00    0.0011796544      0.0000000000 #> sp24    0.0026206595    0.000000e+00    0.0000000000      0.0030061892 #> sp25    0.0006551649    0.000000e+00    0.0000000000      0.0000000000 #> sp26    0.0124481328    2.000269e-01    0.0011796544      0.0000000000 #> sp27    0.0409478052    0.000000e+00    0.0032613975      0.0014146773 #> sp28    0.0015287181    8.392424e-03    0.0000000000      0.0090185676 #> sp29    0.0006551649    0.000000e+00    0.0011102630      0.0000000000 #> sp30    0.0077527845    0.000000e+00    0.0216501284      0.0107869142 #> sp31    0.0136492684    2.243964e-04    0.0020123517      0.0404951370 #> sp32    0.0044769600    0.000000e+00    0.0007633058      0.0275862069 #> sp33    0.0000000000    4.936720e-04    0.0020817431      0.0000000000 #> sp34    0.0000000000    0.000000e+00    0.0000000000      0.0000000000 #> sp35    0.0000000000    0.000000e+00    0.0004163486      0.0000000000 #> sp36    0.0248962656    2.319361e-01    0.0000000000      0.0033598585 #> sp37    0.0767634855    2.567095e-01    0.0020123517      0.0010610080 #> sp38    0.0000000000    0.000000e+00    0.0000000000      0.0000000000 #> sp39    0.0010919415    0.000000e+00    0.0000000000      0.0106100796 #> sp40    0.0005459707    9.424648e-04    0.0000000000      0.0000000000 #> sp41    0.0024022712    0.000000e+00    0.0000000000      0.0000000000 #> sp42    0.0000000000    0.000000e+00    0.0000000000      0.0000000000 #> sp43    0.0168158987    1.754780e-01    0.0000000000      0.5796640141 #> sp44    0.0198733348    3.590342e-04    0.8665602665      0.1656940760 #> sp45    0.0000000000    4.039135e-04    0.0002081743      0.0000000000 #> sp46    0.0007643590    0.000000e+00    0.0015266116      0.0000000000 #> sp47    0.0000000000    0.000000e+00    0.0146415932      0.0000000000 #> sp48    0.0020746888    0.000000e+00    0.0079800153      0.0000000000 #>      10249.C022.02SS 10249.C022.03SS 10249.C023.01SS 10249.C023.01SS.r #> sp1     0.0000000000    0.0004204204     0.006734340      0.0000000000 #> sp2     0.0000000000    0.0000000000     0.000000000      0.0005463778 #> sp3     0.0000000000    0.1219219219     0.000000000      0.0000000000 #> sp4     0.0001702417    0.0340540541     0.002426343      0.0003535386 #> sp5     0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp6     0.8577630235    0.0000000000     0.029957910      0.0000000000 #> sp7     0.0000000000    0.0000000000     0.001485516      0.0000000000 #> sp8     0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp9     0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp10    0.0000000000    0.0032432432     0.014855162      0.0065565340 #> sp11    0.0022982635    0.0000000000     0.000000000      0.0000000000 #> sp12    0.0000000000    0.0000000000     0.003268136      0.0238799254 #> sp13    0.0021280218    0.2845645646     0.003911859      0.1670630584 #> sp14    0.0000000000    0.0000000000     0.006882892      0.0000000000 #> sp15    0.0000000000    0.0001801802     0.005644962      0.0000000000 #> sp16    0.0000000000    0.0000000000     0.003664273      0.0000000000 #> sp17    0.0181307457    0.0000000000     0.002574895      0.1160892203 #> sp18    0.0000000000    0.0000000000     0.010646200      0.0318184740 #> sp19    0.0000000000    0.0005405405     0.000000000      0.1819438195 #> sp20    0.0000000000    0.0000000000     0.003317653      0.0000000000 #> sp21    0.0000000000    0.0123723724     0.044714038      0.0000000000 #> sp22    0.0000000000    0.0000000000     0.002277792      0.0000000000 #> sp23    0.0000000000    0.0000000000     0.002376826      0.0000000000 #> sp24    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp25    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp26    0.0000000000    0.0007207207     0.002574895      0.0000000000 #> sp27    0.0003830439    0.0014414414     0.007972270      0.0002892589 #> sp28    0.0000000000    0.0000000000     0.000000000      0.1440509096 #> sp29    0.0000000000    0.0000000000     0.001584551      0.0000000000 #> sp30    0.0000000000    0.0000000000     0.001980688      0.0000000000 #> sp31    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp32    0.0000000000    0.0000000000     0.007774202      0.0000000000 #> sp33    0.0000000000    0.0000000000     0.003515722      0.0000000000 #> sp34    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp35    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp36    0.0169390535    0.0021621622     0.000000000      0.0202802597 #> sp37    0.0009363296    0.0000000000     0.002178757      0.0000000000 #> sp38    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp39    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp40    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp41    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp42    0.0000000000    0.0000000000     0.000000000      0.0000000000 #> sp43    0.0028089888    0.0000000000     0.006288685      0.3022433631 #> sp44    0.0984422880    0.0013213213     0.779202773      0.0000000000 #> sp45    0.0000000000    0.0000000000     0.001287447      0.0048852607 #> sp46    0.0000000000    0.2254054054     0.016736816      0.0000000000 #> sp47    0.0000000000    0.3116516517     0.009457787      0.0000000000 #> sp48    0.0000000000    0.0000000000     0.014706611      0.0000000000 #>      10249.C024.01SS 10249.C024.01SS.r 10249.C024.02SS 10249.C024.03SS #> sp1     0.0049487698       0.018759380     0.000000000    0.0000000000 #> sp2     0.0001394020       0.000000000     0.000000000    0.0000000000 #> sp3     0.0000000000       0.000000000     0.001461632    0.0006012928 #> sp4     0.0045305639       0.030265133     0.553714982    0.3297088741 #> sp5     0.0000000000       0.000000000     0.012423873    0.0082677757 #> sp6     0.0319927511       0.062031016     0.239951279    0.3759082026 #> sp7     0.0031365442       0.000000000     0.121559074    0.1409029413 #> sp8     0.0011849167       0.000000000     0.000000000    0.0000000000 #> sp9     0.0021607305       0.000000000     0.014372716    0.0245026808 #> sp10    0.0067609953       0.016508254     0.000000000    0.0000000000 #> sp11    0.0013243187       0.000000000     0.005846529    0.0048604500 #> sp12    0.0069700983       0.000000000     0.000000000    0.0000000000 #> sp13    0.0031365442       0.000000000     0.000000000    0.0000000000 #> sp14    0.0039032550       0.000000000     0.000000000    0.0000000000 #> sp15    0.0000000000       0.000000000     0.000000000    0.0002004309 #> sp16    0.0039032550       0.000000000     0.000000000    0.0000000000 #> sp17    0.0017425246       0.000000000     0.000000000    0.0000000000 #> sp18    0.0061336865       0.000000000     0.000000000    0.0000000000 #> sp19    0.0000000000       0.251375688     0.000000000    0.0004509696 #> sp20    0.0000000000       0.000000000     0.000000000    0.0000000000 #> sp21    0.0155433192       0.000000000     0.000000000    0.0000000000 #> sp22    0.0024395344       0.000000000     0.000000000    0.0000000000 #> sp23    0.0018819265       0.000000000     0.000000000    0.0000000000 #> sp24    0.0006970098       0.000000000     0.000000000    0.0000000000 #> sp25    0.0013243187       0.000000000     0.000000000    0.0000000000 #> sp26    0.0004182059       0.000000000     0.000000000    0.0000000000 #> sp27    0.0072489022       0.000000000     0.000000000    0.0004509696 #> sp28    0.0000000000       0.000000000     0.000000000    0.0000000000 #> sp29    0.0034153482       0.000000000     0.000000000    0.0000000000 #> sp30    0.0029274413       0.000000000     0.000000000    0.0000000000 #> sp31    0.0031365442       0.000000000     0.000000000    0.0000000000 #> sp32    0.0069003973       0.000000000     0.000000000    0.0000000000 #> sp33    0.0014637206       0.000000000     0.000000000    0.0000000000 #> sp34    0.0014637206       0.000000000     0.007064555    0.0034073258 #> sp35    0.0001394020       0.000000000     0.000000000    0.0000000000 #> sp36    0.0000000000       0.002251126     0.000000000    0.0000000000 #> sp37    0.0000000000       0.000000000     0.000000000    0.0000000000 #> sp38    0.0000000000       0.000000000     0.000000000    0.0000000000 #> sp39    0.0000000000       0.000000000     0.001461632    0.0013028010 #> sp40    0.0006273088       0.000000000     0.000000000    0.0000000000 #> sp41    0.0002788039       0.000000000     0.000000000    0.0000000000 #> sp42    0.0000000000       0.000000000     0.010231425    0.0131282257 #> sp43    0.0050184708       0.004002001     0.000000000    0.0000000000 #> sp44    0.8414999652       0.247623812     0.031912302    0.0963070602 #> sp45    0.0029274413       0.000000000     0.000000000    0.0000000000 #> sp46    0.0090611278       0.027763882     0.000000000    0.0000000000 #> sp47    0.0044608629       0.339419710     0.000000000    0.0000000000 #> sp48    0.0051578727       0.000000000     0.000000000    0.0000000000 #>      10249.C024.04SS 10249.C025.01SS 10249.C025.01SS.r 10249.C025.02SS #> sp1     0.0000000000    0.0189016131      0.000000e+00    0.0000000000 #> sp2     0.0000000000    0.0000000000      0.000000e+00    0.0000000000 #> sp3     0.0000000000    0.0012313754      7.957349e-05    0.0000000000 #> sp4     0.4928041376    0.0040635390      4.332776e-01    0.4893992017 #> sp5     0.0105127052    0.0000000000      0.000000e+00    0.0000000000 #> sp6     0.2614121880    0.0335549809      0.000000e+00    0.0000000000 #> sp7     0.1644366989    0.0013545130      0.000000e+00    0.0000000000 #> sp8     0.0000000000    0.0000000000      0.000000e+00    0.0000000000 #> sp9     0.0088261749    0.0028937323      0.000000e+00    0.0000000000 #> sp10    0.0000000000    0.0057258958      0.000000e+00    0.0000000000 #> sp11    0.0030919721    0.0047407955      0.000000e+00    0.0000000000 #> sp12    0.0000000000    0.0245659402      6.684173e-03    0.0000000000 #> sp13    0.0000000000    0.0058490334      5.132490e-03    0.0043543621 #> sp14    0.0000000000    0.0080655092      0.000000e+00    0.0000000000 #> sp15    0.0000000000    0.0100357099      4.444179e-02    0.0098491525 #> sp16    0.0000000000    0.0086196281      0.000000e+00    0.0000000000 #> sp17    0.0000000000    0.0001847063      4.535689e-03    0.0016069670 #> sp18    0.0000000000    0.0085580594      6.763746e-03    0.0062205173 #> sp19    0.0002810884    0.0000000000      5.896395e-02    0.0559846561 #> sp20    0.0000000000    0.0003694126      3.182939e-03    0.0076201337 #> sp21    0.0000000000    0.0139761113      7.276995e-02    0.0960551553 #> sp22    0.0000000000    0.0024627509      4.416328e-03    0.0023845316 #> sp23    0.0000000000    0.0028937323      1.830190e-03    0.0010885905 #> sp24    0.0000000000    0.0002462751      0.000000e+00    0.0000000000 #> sp25    0.0000000000    0.0005541190      9.202674e-02    0.0000000000 #> sp26    0.0000000000    0.0004309814      0.000000e+00    0.0000000000 #> sp27    0.0000000000    0.0107129664      3.178961e-02    0.0101083407 #> sp28    0.0000000000    0.0123137545      2.423013e-02    0.0108340677 #> sp29    0.0000000000    0.0056027583      0.000000e+00    0.0000000000 #> sp30    0.0000000000    0.0051102081      0.000000e+00    0.0000000000 #> sp31    0.0001124353    0.0080039404      0.000000e+00    0.0000000000 #> sp32    0.0000000000    0.0065262899      0.000000e+00    0.0000000000 #> sp33    0.0000000000    0.0024011821      0.000000e+00    0.0000000000 #> sp34    0.0021924893    0.0010466691      0.000000e+00    0.0000000000 #> sp35    0.0000000000    0.0000000000      0.000000e+00    0.0000000000 #> sp36    0.0005621767    0.0006156877      1.736691e-01    0.2297444404 #> sp37    0.0000000000    0.0011698067      1.157794e-02    0.0176766368 #> sp38    0.0000000000    0.0000000000      0.000000e+00    0.0000000000 #> sp39    0.0006183944    0.0000000000      3.660380e-03    0.0019179928 #> sp40    0.0000000000    0.0000000000      0.000000e+00    0.0000000000 #> sp41    0.0000000000    0.0012929442      0.000000e+00    0.0000000000 #> sp42    0.0116932764    0.0000000000      0.000000e+00    0.0000000000 #> sp43    0.0000000000    0.0034478512      8.275643e-03    0.0468093930 #> sp44    0.0434562626    0.5872429504      1.269197e-02    0.0081903478 #> sp45    0.0000000000    0.0000000000      0.000000e+00    0.0001555129 #> sp46    0.0000000000    0.1290481468      0.000000e+00    0.0000000000 #> sp47    0.0000000000    0.0061568772      0.000000e+00    0.0000000000 #> sp48    0.0000000000    0.0600295530      0.000000e+00    0.0000000000 #>      10249.C025.03SS 10249.C025.04SS 10249.C027.01SS 10249.C027.01SS.r #> sp1     0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp2     0.0000000000    0.0155856180    0.000000e+00      0.0000000000 #> sp3     0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp4     0.0000000000    0.0018517566    0.000000e+00      0.0029369681 #> sp5     0.0000000000    0.0000000000    9.142857e-05      0.0000000000 #> sp6     0.0000000000    0.0082814670    2.057143e-03      0.0000000000 #> sp7     0.0000000000    0.0002571884    0.000000e+00      0.0000000000 #> sp8     0.7475000000    0.0000000000    0.000000e+00      0.0000000000 #> sp9     0.0000000000    0.0000000000    2.285714e-04      0.0000000000 #> sp10    0.0007142857    0.0132194846    4.512000e-02      0.0148354545 #> sp11    0.0000000000    0.0012859421    1.445029e-01      0.0899917162 #> sp12    0.0000000000    0.0000000000    7.314286e-04      0.0000000000 #> sp13    0.0000000000    0.0145568644    0.000000e+00      0.0000000000 #> sp14    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp15    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp16    0.0032142857    0.0000000000    3.200000e-04      0.0000000000 #> sp17    0.0000000000    0.0012859421    0.000000e+00      0.0000000000 #> sp18    0.0000000000    0.0139910498    0.000000e+00      0.0000000000 #> sp19    0.0000000000    0.1999382748    6.857143e-04      0.0012802169 #> sp20    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp21    0.0000000000    0.0000000000    6.400000e-04      0.0000000000 #> sp22    0.0000000000    0.0000000000    0.000000e+00      0.0015061375 #> sp23    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp24    0.0000000000    0.0000000000    0.000000e+00      0.0003765344 #> sp25    0.0000000000    0.0001543130    5.942857e-04      0.0000000000 #> sp26    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp27    0.0000000000    0.0015945682    0.000000e+00      0.0006777619 #> sp28    0.0000000000    0.0000000000    2.285714e-04      0.0000000000 #> sp29    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp30    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp31    0.0000000000    0.0000000000    5.028571e-04      0.0002259206 #> sp32    0.0000000000    0.0000000000    0.000000e+00      0.0003012275 #> sp33    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp34    0.1992857143    0.0000000000    0.000000e+00      0.0000000000 #> sp35    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp36    0.0000000000    0.1593025050    1.828571e-04      0.0005271481 #> sp37    0.0000000000    0.0003600638    0.000000e+00      0.0000000000 #> sp38    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp39    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp40    0.0492857143    0.0000000000    0.000000e+00      0.0000000000 #> sp41    0.0000000000    0.0000000000    9.142857e-05      0.0000000000 #> sp42    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp43    0.0000000000    0.4021398076    7.984914e-01      0.8873409142 #> sp44    0.0000000000    0.0005658145    1.234286e-03      0.0000000000 #> sp45    0.0000000000    0.1653207140    9.142857e-05      0.0000000000 #> sp46    0.0000000000    0.0003086261    0.000000e+00      0.0000000000 #> sp47    0.0000000000    0.0000000000    0.000000e+00      0.0000000000 #> sp48    0.0000000000    0.0000000000    4.205714e-03      0.0000000000 #>      10249.C027.02SS 10249.C027.03SS 10249.C030.01SS 10249.C030.01SS.r #> sp1     0.0000000000    0.0000000000    0.0082921889      0.0000000000 #> sp2     0.0000000000    0.0005414429    0.0001898975      0.0045483137 #> sp3     0.0000000000    0.0000000000    0.0015824788      0.0000000000 #> sp4     0.4097517334    0.5054821098    0.0056969237      0.8900179029 #> sp5     0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp6     0.0000000000    0.0002256012    0.0331054564      0.0000000000 #> sp7     0.0000000000    0.0000000000    0.0012659830      0.0000000000 #> sp8     0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp9     0.0000000000    0.0000000000    0.0047474364      0.0000000000 #> sp10    0.0000000000    0.0000000000    0.0109507533      0.0029031790 #> sp11    0.0035040632    0.0007670442    0.0097480694      0.0000000000 #> sp12    0.0013419817    0.0020755313    0.0065831118      0.0197900034 #> sp13    0.0322075598    0.0079411632    0.0043043423      0.0157255528 #> sp14    0.0000000000    0.0000000000    0.0047474364      0.0000000000 #> sp15    0.0000000000    0.0002256012    0.0101911634      0.0000000000 #> sp16    0.0000000000    0.0000000000    0.0167742752      0.0000000000 #> sp17    0.0003727727    0.0142579976    0.0000000000      0.0000000000 #> sp18    0.0027585179    0.0000000000    0.0065198126      0.0000000000 #> sp19    0.2144934019    0.2933267157    0.0002531966      0.0025160885 #> sp20    0.0000000000    0.0001353607    0.0035447525      0.0000000000 #> sp21    0.0000000000    0.0014438479    0.0077224965      0.0000000000 #> sp22    0.0000000000    0.0003158417    0.0039878466      0.0000000000 #> sp23    0.0000000000    0.0015792086    0.0029750601      0.0000000000 #> sp24    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp25    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp26    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp27    0.0002982181    0.0593331228    0.0095581719      0.0001935453 #> sp28    0.0173712070    0.0106032577    0.0000000000      0.0004838632 #> sp29    0.0000000000    0.0000000000    0.0051272313      0.0000000000 #> sp30    0.0000000000    0.0000000000    0.0037979491      0.0000000000 #> sp31    0.0000000000    0.0000000000    0.0010127864      0.0000000000 #> sp32    0.0000000000    0.0090691693    0.0054437271      0.0000000000 #> sp33    0.0000000000    0.0000000000    0.0054437271      0.0000000000 #> sp34    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp35    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp36    0.0003727727    0.0094752515    0.0000000000      0.0365800552 #> sp37    0.0058152539    0.0000000000    0.0004430941      0.0000000000 #> sp38    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp39    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp40    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp41    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp42    0.0000000000    0.0000000000    0.0000000000      0.0000000000 #> sp43    0.0007455454    0.0065875558    0.0491201418      0.0248221803 #> sp44    0.3003802281    0.0758020124    0.7238890999      0.0001935453 #> sp45    0.0105867442    0.0008121644    0.0000000000      0.0022257706 #> sp46    0.0000000000    0.0000000000    0.0065831118      0.0000000000 #> sp47    0.0000000000    0.0000000000    0.0048107355      0.0000000000 #> sp48    0.0000000000    0.0000000000    0.0415875427      0.0000000000 #>      10249.C030.02SS 10249.C030.03SS 10249.C030.04SS 10249.C031.01SS #> sp1     0.0000000000    0.0000000000    0.0000000000    0.0029848851 #> sp2     0.0000000000    0.0003418470    0.0000000000    0.0000000000 #> sp3     0.0000000000    0.0000000000    0.0000000000    0.0010161311 #> sp4     0.7353671319    0.0127948430    0.5606395928    0.0031754096 #> sp5     0.0000000000    0.0000000000    0.0000000000    0.0003175410 #> sp6     0.0004413306    0.4126581042    0.0003872967    0.0223548838 #> sp7     0.0000000000    0.0003418470    0.0000000000    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.0000000000    0.0003810492 #> sp9     0.0000000000    0.0000000000    0.0000000000    0.0006985901 #> sp10    0.0060131296    0.0006348586    0.0285492973    0.0015877048 #> sp11    0.0057924643    0.0000000000    0.0000000000    0.0000000000 #> sp12    0.0725988856    0.0392147287    0.0159898196    0.0024133113 #> sp13    0.0081094500    0.0125018313    0.0107336505    0.0000000000 #> sp14    0.0000000000    0.0000000000    0.0000000000    0.0006985901 #> sp15    0.0000000000    0.0000000000    0.0000000000    0.0100978026 #> sp16    0.0000000000    0.0000000000    0.0000000000    0.0067318684 #> sp17    0.0000000000    0.0019534111    0.0000000000    0.0000000000 #> sp18    0.0000000000    0.0002441764    0.0000000000    0.0000000000 #> sp19    0.0000000000    0.0391170582    0.0000000000    0.0002540328 #> sp20    0.0000000000    0.0000000000    0.0000000000    0.0008256065 #> sp21    0.0000000000    0.0000000000    0.0000000000    0.0036199670 #> sp22    0.0000000000    0.0000000000    0.0000000000    0.0013336720 #> sp23    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp24    0.0000000000    0.0015138936    0.0000000000    0.0010161311 #> sp25    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp26    0.0000000000    0.0000000000    0.0000000000    0.0023498031 #> sp27    0.0002758316    0.0071787860    0.0000000000    0.0066048520 #> sp28    0.0000000000    0.0004883528    0.0000000000    0.0000000000 #> sp29    0.0000000000    0.0000000000    0.0000000000    0.0019687540 #> sp30    0.0000000000    0.0000000000    0.0000000000    0.0045090817 #> sp31    0.0000000000    0.0000000000    0.0000000000    0.0071129176 #> sp32    0.0000000000    0.0001953411    0.0000000000    0.0035564588 #> sp33    0.0000000000    0.0001953411    0.0000000000    0.0025403277 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0559386550    0.0104507496    0.0000000000    0.0000000000 #> sp37    0.0001654990    0.0059579040    0.0000000000    0.0000000000 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.0013971802 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.1004027142    0.0039068223    0.3673785548    0.0021592785 #> sp44    0.0000000000    0.4499194218    0.0004979529    0.9029594818 #> sp45    0.0148949081    0.0003906822    0.0158238353    0.0010796393 #> sp46    0.0000000000    0.0000000000    0.0000000000    0.0022862949 #> sp47    0.0000000000    0.0000000000    0.0000000000    0.0015241966 #> sp48    0.0000000000    0.0000000000    0.0000000000    0.0004445573 #>      10249.C031.01SS.r 10249.C031.02SS 10249.C031.03SS 10249.C031.04SS #> sp1        0.003087611    0.0000000000    0.0000000000    0.0000000000 #> sp2        0.000000000    0.0027077250    0.0000000000    0.0089820359 #> sp3        0.000000000    0.0010087603    0.0000000000    0.0037651969 #> sp4        0.505982246    0.0007963897    0.0005166502    0.0002721829 #> sp5        0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp6        0.066383636    0.0005309265    0.0000000000    0.0002268191 #> sp7        0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp8        0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp9        0.001543805    0.1380408813    0.0000000000    0.3771094175 #> sp10       0.000000000    0.0006371118    0.0000000000    0.0005897296 #> sp11       0.000000000    0.0055747279    0.0165328073    0.0126111414 #> sp12       0.004245465    0.0000000000    0.0000000000    0.0000000000 #> sp13       0.000000000    0.0012211309    0.0199614861    0.0082108510 #> sp14       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15       0.000000000    0.0031324662    0.0000000000    0.0069860279 #> sp16       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp17       0.000000000    0.0011149456    0.0000000000    0.0565233170 #> sp18       0.000000000    0.0287231218    0.0000000000    0.0730811105 #> sp19       0.008876882    0.4983806743    0.0000000000    0.0065777536 #> sp20       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp21       0.007719027    0.0000000000    0.0000000000    0.0000000000 #> sp22       0.062138171    0.0000000000    0.0000000000    0.0000000000 #> sp23       0.013122347    0.0000000000    0.0000000000    0.0000000000 #> sp24       0.001929757    0.0061587470    0.0000000000    0.0068045727 #> sp25       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp26       0.003859514    0.0000000000    0.0000000000    0.0000000000 #> sp27       0.086839058    0.0002654632    0.0001409046    0.0001814553 #> sp28       0.005789271    0.0000000000    0.0000000000    0.0000000000 #> sp29       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp30       0.104978773    0.0000000000    0.0000000000    0.0000000000 #> sp31       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp32       0.001157854    0.0000000000    0.0000000000    0.0000000000 #> sp33       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp34       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36       0.000000000    0.0000000000    0.2790380912    0.0001814553 #> sp37       0.004245465    0.0000000000    0.0000000000    0.0000000000 #> sp38       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp40       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41       0.093786183    0.0000000000    0.0000000000    0.0000000000 #> sp42       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43       0.014280201    0.3033182904    0.6815555869    0.4055071675 #> sp44       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp45       0.003859514    0.0083886382    0.0022544737    0.0323897659 #> sp46       0.000000000    0.0000000000    0.0000000000    0.0000000000 #> sp47       0.006175222    0.0000000000    0.0000000000    0.0000000000 #> sp48       0.000000000    0.0000000000    0.0000000000    0.0000000000 #>      10249.C032.01SS 10249.C032.02SS 10249.C032.03SS 10249.C032.04SS #> sp1     0.0034892829    0.000000e+00    0.0000000000    0.0000000000 #> sp2     0.0000000000    1.100756e-04    0.0050600886    0.0004405436 #> sp3     0.0000000000    1.541058e-03    0.0000000000    0.0000000000 #> sp4     0.0021362957    4.194247e-01    0.1386604821    0.0723846962 #> sp5     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp6     0.0214341665    1.504366e-03    0.0002459765    0.0003727676 #> sp7     0.0026347647    7.338372e-04    0.3884320753    0.4851740147 #> sp8     0.0023499252    2.201512e-04    0.0009136271    0.0000000000 #> sp9     0.0029196041    0.000000e+00    0.0000000000    0.0000000000 #> sp10    0.0013529873    0.000000e+00    0.0003513950    0.0008471992 #> sp11    0.0033468632    1.430983e-02    0.0000000000    0.0015249585 #> sp12    0.0071209855    0.000000e+00    0.0000000000    0.0000000000 #> sp13    0.0022075055    3.265576e-03    0.0166209853    0.0105052696 #> sp14    0.0018514562    0.000000e+00    0.0000000000    0.0000000000 #> sp15    0.0071209855    0.000000e+00    0.0002459765    0.0000000000 #> sp16    0.0039165420    0.000000e+00    0.0000000000    0.0000000000 #> sp17    0.0000000000    4.403023e-04    0.0530255113    0.0174523027 #> sp18    0.0022075055    4.377339e-02    0.0855295523    0.1191162018 #> sp19    0.0003560493    3.287591e-02    0.1095649729    0.0753668372 #> sp20    0.0020650858    0.000000e+00    0.0000000000    0.0000000000 #> sp21    0.0047710603    7.536508e-02    0.0474031907    0.0476464807 #> sp22    0.0083315531    0.000000e+00    0.0000000000    0.0000000000 #> sp23    0.0012105675    0.000000e+00    0.0000000000    0.0000000000 #> sp24    0.0000000000    0.000000e+00    0.0031274158    0.0321596801 #> sp25    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp26    0.0017090365    0.000000e+00    0.0000000000    0.0000000000 #> sp27    0.0000000000    0.000000e+00    0.0002459765    0.0000000000 #> sp28    0.0000000000    0.000000e+00    0.0000000000    0.0002711037 #> sp29    0.0021362957    0.000000e+00    0.0000000000    0.0000000000 #> sp30    0.0029908139    0.000000e+00    0.0000000000    0.0000000000 #> sp31    0.0014954070    7.338372e-05    0.0000000000    0.0000000000 #> sp32    0.0015666168    0.000000e+00    0.0000000000    0.0000000000 #> sp33    0.0017090365    0.000000e+00    0.0000000000    0.0000000000 #> sp34    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp35    0.0007120986    0.000000e+00    0.0000000000    0.0000000000 #> sp36    0.0000000000    2.124459e-02    0.0400238949    0.0169439832 #> sp37    0.0024211351    0.000000e+00    0.0000000000    0.0000000000 #> sp38    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp41    0.0014241971    0.000000e+00    0.0000000000    0.0000000000 #> sp42    0.0000000000    8.072210e-04    0.0066765057    0.0071503609 #> sp43    0.0093284911    1.409334e-01    0.0245976527    0.0645565760 #> sp44    0.8546606850    2.215455e-01    0.0592803430    0.0377511946 #> sp45    0.0000000000    2.183166e-02    0.0199943777    0.0103358297 #> sp46    0.0277718436    0.000000e+00    0.0000000000    0.0000000000 #> sp47    0.0063376771    0.000000e+00    0.0000000000    0.0000000000 #> sp48    0.0049134800    0.000000e+00    0.0000000000    0.0000000000 #>      10249.C033.01SS 10249.C033.01SS.r 10249.C033.02SS 10249.C033.03SS #> sp1     0.0051728192      0.0000000000    0.0000000000    0.000000e+00 #> sp2     0.0004702563      0.0003572066    0.0000000000    0.000000e+00 #> sp3     0.0014107689      0.0000000000    0.0006736842    0.000000e+00 #> sp4     0.0013323928      0.2889206406    0.4142315789    5.870095e-01 #> sp5     0.0000000000      0.0000000000    0.0000000000    6.014133e-05 #> sp6     0.0318990516      0.0000000000    0.3032140351    2.582469e-01 #> sp7     0.0027431617      0.0000000000    0.0237473684    7.770260e-02 #> sp8     0.0021161533      0.0026195154    0.0000000000    0.000000e+00 #> sp9     0.0015675210      0.0000000000    0.0000000000    1.503533e-04 #> sp10    0.0031350419      0.0000000000    0.0011789474    0.000000e+00 #> sp11    0.0003135042      0.0048818241    0.0000000000    1.864381e-03 #> sp12    0.0007053844      0.0000000000    0.0000000000    4.270035e-03 #> sp13    0.0010188886      0.0017860332    0.0030035088    0.000000e+00 #> sp14    0.0057214515      0.0000000000    0.0000000000    0.000000e+00 #> sp15    0.0040755545      0.0032148598    0.0000000000    0.000000e+00 #> sp16    0.0047809389      0.0000000000    0.0000000000    0.000000e+00 #> sp17    0.0000000000      0.0166101089    0.0000000000    0.000000e+00 #> sp18    0.0000000000      0.0313151158    0.0000000000    0.000000e+00 #> sp19    0.0000000000      0.1975948086    0.0004210526    3.007067e-04 #> sp20    0.0012540168      0.0018455677    0.0000000000    0.000000e+00 #> sp21    0.0007053844      0.0000000000    0.0000000000    1.891445e-02 #> sp22    0.0018810252      0.0013097577    0.0000000000    0.000000e+00 #> sp23    0.0000000000      0.0033934631    0.0000000000    0.000000e+00 #> sp24    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp25    0.0013323928      0.0000000000    0.0000000000    0.000000e+00 #> sp26    0.0003135042      0.0000000000    0.0000000000    0.000000e+00 #> sp27    0.0074457246      0.1201405013    0.0004491228    0.000000e+00 #> sp28    0.0000000000      0.0160147645    0.0000000000    0.000000e+00 #> sp29    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp30    0.0085429893      0.0000000000    0.0000000000    0.000000e+00 #> sp31    0.0037620503      0.0000000000    0.0000000000    0.000000e+00 #> sp32    0.0039188024      0.0144073346    0.0000000000    0.000000e+00 #> sp33    0.0000000000      0.0000000000    0.0005894737    3.608480e-04 #> sp34    0.0003135042      0.0007144133    0.0000000000    0.000000e+00 #> sp35    0.0000000000      0.0000000000    0.0021052632    2.706360e-04 #> sp36    0.0000000000      0.0712031910    0.0019368421    1.804240e-04 #> sp37    0.0018810252      0.0498303268    0.0000000000    6.014133e-05 #> sp38    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp39    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp40    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp41    0.0043106827      0.0061915818    0.0000000000    0.000000e+00 #> sp42    0.0000000000      0.0000000000    0.0040701754    1.894452e-03 #> sp43    0.0000000000      0.0570935286    0.0005333333    2.104947e-04 #> sp44    0.8923113097      0.1103768530    0.2359578947    4.850398e-02 #> sp45    0.0000000000      0.0000000000    0.0078877193    0.000000e+00 #> sp46    0.0031350419      0.0000000000    0.0000000000    0.000000e+00 #> sp47    0.0024296575      0.0001786033    0.0000000000    0.000000e+00 #> sp48    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #>      10249.C034.01SS 10249.C034.02SS 10249.C034.03SS 10249.C034.04SS #> sp1     1.429829e-02    0.0000000000    0.0000000000    0.0000000000 #> sp2     0.000000e+00    0.3252625536    0.2379399665    0.0022338689 #> sp3     0.000000e+00    0.0000000000    0.0000000000    0.0036944755 #> sp4     5.634795e-04    0.0004389964    0.0005180558    0.6182661741 #> sp5     7.043494e-05    0.0000000000    0.0000000000    0.0000000000 #> sp6     1.855961e-02    0.0004052274    0.0007008990    0.0000000000 #> sp7     3.803487e-03    0.0000000000    0.0001523693    0.0000000000 #> sp8     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp9     4.472618e-03    0.0000000000    0.0000000000    0.0000000000 #> sp10    6.550449e-03    0.0009455307    0.0000000000    0.0012028525 #> sp11    0.000000e+00    0.0722655590    0.0190156940    0.0045536558 #> sp12    1.373481e-03    0.0053354945    0.0543044339    0.0000000000 #> sp13    1.926395e-02    0.0029378989    0.0008227945    0.0164103445 #> sp14    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp15    3.838704e-03    0.0416371188    0.0137437148    0.0000000000 #> sp16    3.521747e-03    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.000000e+00    0.1593894573    0.1865610239    0.0194174757 #> sp18    2.606093e-03    0.0111099855    0.0068870943    0.0171836068 #> sp19    0.000000e+00    0.0000000000    0.0015846412    0.0301572300 #> sp20    4.226096e-04    0.0000000000    0.0000000000    0.0000000000 #> sp21    3.028702e-03    0.0000000000    0.0000000000    0.0000000000 #> sp22    6.057404e-03    0.0001350758    0.0000000000    0.0000000000 #> sp23    1.056524e-03    0.0000000000    0.0000000000    0.0000000000 #> sp24    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp25    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp26    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp27    9.262194e-03    0.0002701516    0.0005180558    0.0000000000 #> sp28    0.000000e+00    0.0000000000    0.0000000000    0.0109975084 #> sp29    1.655221e-03    0.2074089082    0.3191833003    0.0000000000 #> sp30    6.303927e-03    0.0000000000    0.0000000000    0.0000000000 #> sp31    4.014791e-03    0.0001013069    0.0000000000    0.0000000000 #> sp32    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp33    1.197394e-03    0.0000000000    0.0000000000    0.0000000000 #> sp34    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.000000e+00    0.1235605984    0.1093707146    0.0152934101 #> sp37    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp38    1.021307e-03    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.000000e+00    0.0000000000    0.0000000000    0.0018042787 #> sp41    0.000000e+00    0.0000000000    0.0000000000    0.0006014262 #> sp42    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.000000e+00    0.0487961368    0.0483315557    0.0104820002 #> sp44    8.826554e-01    0.0000000000    0.0000000000    0.1313686743 #> sp45    1.866526e-03    0.0000000000    0.0000000000    0.1163330183 #> sp46    2.535658e-03    0.0000000000    0.0003656864    0.0000000000 #> sp47    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp48    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #>      10249.C035.01SS 10249.C035.01SS.r 10249.C035.02SS 10249.C035.03SS #> sp1     0.0024082318      0.0001641969    0.0000000000    8.897589e-05 #> sp2     0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp3     0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp4     0.0005108370      0.0464677148    0.7605464784    5.041967e-04 #> sp5     0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp6     0.0137196234      0.8181930134    0.0000000000    2.250793e-01 #> sp7     0.0043056265      0.0012314765    0.0000000000    2.173384e-01 #> sp8     0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp9     0.0021163249      0.0000000000    0.0000000000    0.000000e+00 #> sp10    0.0000000000      0.0004104922    0.0016615896    4.745381e-04 #> sp11    0.0000000000      0.0012314765    0.0294470599    0.000000e+00 #> sp12    0.0007297672      0.0012314765    0.0000000000    0.000000e+00 #> sp13    0.0008027439      0.0020114117    0.0028616265    1.687576e-02 #> sp14    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp15    0.0011676275      0.0001231477    0.0000000000    0.000000e+00 #> sp16    0.0043786032      0.0000000000    0.0000000000    0.000000e+00 #> sp17    0.0008757206      0.0193752309    0.0000000000    0.000000e+00 #> sp18    0.0000000000      0.0000000000    0.0017539001    0.000000e+00 #> sp19    0.0000000000      0.0042691187    0.0396935290    3.262449e-04 #> sp20    0.0012406042      0.0000000000    0.0000000000    0.000000e+00 #> sp21    0.0020433482      0.0019703625    0.0000000000    0.000000e+00 #> sp22    0.0002919069      0.0038175773    0.0000000000    1.779518e-04 #> sp23    0.0016784646      0.0024219039    0.0000000000    0.000000e+00 #> sp24    0.0016784646      0.0007388859    0.0000000000    4.448794e-04 #> sp25    0.0000000000      0.0006157383    0.0000000000    0.000000e+00 #> sp26    0.0000000000      0.0010672797    0.0000000000    0.000000e+00 #> sp27    0.0041596731      0.0031197406    0.0000000000    0.000000e+00 #> sp28    0.0000000000      0.0003283937    0.0264931229    0.000000e+00 #> sp29    0.0018973947      0.0000000000    0.0000000000    0.000000e+00 #> sp30    0.0056192075      0.0000000000    0.0000000000    0.000000e+00 #> sp31    0.0043786032      0.0020935101    0.0000000000    0.000000e+00 #> sp32    0.0010216741      0.0002873445    0.0000000000    0.000000e+00 #> sp33    0.0000000000      0.0002052461    0.0000000000    0.000000e+00 #> sp34    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp35    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp36    0.0000000000      0.0122737162    0.0007384843    1.482931e-04 #> sp37    0.0000000000      0.0008620336    0.0000000000    0.000000e+00 #> sp38    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp39    0.0000000000      0.0011493781    0.0000000000    0.000000e+00 #> sp40    0.0000000000      0.0002873445    0.0000000000    0.000000e+00 #> sp41    0.0021163249      0.0000000000    0.0000000000    0.000000e+00 #> sp42    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #> sp43    0.0045245567      0.0037765281    0.0081233269    4.081917e-01 #> sp44    0.9229365832      0.0694142277    0.1284962614    1.303497e-01 #> sp45    0.0008027439      0.0008620336    0.0001846211    0.000000e+00 #> sp46    0.0098518573      0.0000000000    0.0000000000    0.000000e+00 #> sp47    0.0047434868      0.0000000000    0.0000000000    0.000000e+00 #> sp48    0.0000000000      0.0000000000    0.0000000000    0.000000e+00 #>      10249.C036.01SS 10249.C036.01SS.r 10249.C036.02SS 10249.C036.03SS #> sp1     0.0025361778      0.0001035090    0.0000000000    0.0000000000 #> sp2     0.0000000000      0.0839457613    0.1511611135    0.0004362790 #> sp3     0.0000000000      0.0007763172    0.0000000000    0.0000000000 #> sp4     0.0008951216      0.0285167167    0.0007211885    0.0004362790 #> sp5     0.0005221543      0.0000000000    0.0000000000    0.0000000000 #> sp6     0.0172310906      0.0679536280    0.0000000000    0.0000000000 #> sp7     0.0007459347      0.0954352551    0.0002884754    0.0000000000 #> sp8     0.0003729673      0.0000000000    0.0000000000    0.0000000000 #> sp9     0.0019394301      0.0001035090    0.0000000000    0.0000000000 #> sp10    0.0000000000      0.0009315806    0.0000000000    0.0000000000 #> sp11    0.0000000000      0.0045543940    0.0046156065    0.0038295603 #> sp12    0.0000000000      0.0003622813    0.0000000000    0.0000000000 #> sp13    0.0000000000      0.0133526550    0.0000000000    0.0067865626 #> sp14    0.0008951216      0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0057436969      0.0012421074    0.0012981393    0.0000000000 #> sp16    0.0041026406      0.0000000000    0.0000000000    0.0000000000 #> sp17    0.0000000000      0.1173791533    0.2052502524    0.0854622134 #> sp18    0.0000000000      0.0161991512    0.0000000000    0.0000000000 #> sp19    0.0000000000      0.0482351723    0.0162988605    0.2168306753 #> sp20    0.0019394301      0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0020140236      0.0162509057    0.0000000000    0.0000000000 #> sp22    0.0025361778      0.0015526343    0.0000000000    0.0000000000 #> sp23    0.0011189020      0.0000000000    0.0000000000    0.0000000000 #> sp24    0.0000000000      0.0011903530    0.0000000000    0.0000000000 #> sp25    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp26    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp27    0.0063404446      0.0000000000    0.0005769508    0.0002908527 #> sp28    0.0000000000      0.0020184246    0.0000000000    0.0127490426 #> sp29    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp30    0.0055945099      0.0000000000    0.0000000000    0.0000000000 #> sp31    0.0064896315      0.0000000000    0.0000000000    0.0000000000 #> sp32    0.0032075190      0.0004657903    0.0000000000    0.0000000000 #> sp33    0.0024615844      0.0001552634    0.0000000000    0.0000000000 #> sp34    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0000000000      0.0577062416    0.0559642290    0.1603567793 #> sp37    0.0000000000      0.0009315806    0.0000000000    0.0000000000 #> sp38    0.0000000000      0.0429044612    0.0833693928    0.0033932813 #> sp39    0.0000000000      0.0006210537    0.0000000000    0.0000000000 #> sp40    0.0000000000      0.0003622813    0.0000000000    0.0000000000 #> sp41    0.0016410562      0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0000000000      0.0006210537    0.0000000000    0.0000000000 #> sp43    0.0004475608      0.3269330297    0.4785807010    0.3584759319 #> sp44    0.9277189318      0.0563606252    0.0018750901    0.1509525425 #> sp45    0.0000000000      0.0128351102    0.0000000000    0.0000000000 #> sp46    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp47    0.0035058929      0.0000000000    0.0000000000    0.0000000000 #> sp48    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #>      10249.C037.01SS 10249.C037.01SS.r 10249.C037.02SS 10249.C038.01SS #> sp1     0.0030291186      0.0009084302    0.0000000000    0.0000000000 #> sp2     0.0000000000      0.0518410853    0.0001296120    0.0000000000 #> sp3     0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp4     0.0016611296      0.0799418605    0.0004752441    0.0003487723 #> sp5     0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp6     0.0419190932      0.0347625969    0.0002160200    0.0007672991 #> sp7     0.0001954270      0.0130208333    0.0000000000    0.0004185268 #> sp8     0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp9     0.0089896424      0.0185319767    0.0000000000    0.0000000000 #> sp10    0.0003908540      0.0000000000    0.0014689363    0.0000000000 #> sp11    0.0000000000      0.0130813953    0.0034131167    0.0000000000 #> sp12    0.0000000000      0.0010295543    0.0000000000    0.0000000000 #> sp13    0.0000000000      0.0056322674    0.0298107664    0.0000000000 #> sp14    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0024428376      0.0041787791    0.0000000000    0.0000000000 #> sp16    0.0004885675      0.0000000000    0.0000000000    0.0003487723 #> sp17    0.0000000000      0.1757509690    0.1086580835    0.0000000000 #> sp18    0.0095759234      0.0076913760    0.0282554221    0.0000000000 #> sp19    0.0000000000      0.0697674419    0.1835738357    0.0000000000 #> sp20    0.0034199726      0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0071330858      0.0087814922    0.0000000000    0.0000000000 #> sp22    0.0048856752      0.0281007752    0.1845675279    0.0000000000 #> sp23    0.0001954270      0.0000000000    0.0000000000    0.0000000000 #> sp24    0.0000000000      0.0020591085    0.0000000000    0.0000000000 #> sp25    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp26    0.0000000000      0.0004239341    0.0000000000    0.0000000000 #> sp27    0.0103576314      0.0670421512    0.0000000000    0.0000000000 #> sp28    0.0000000000      0.0066618217    0.0336991273    0.0000000000 #> sp29    0.0006839945      0.1693919574    0.0000000000    0.0000000000 #> sp30    0.0081102208      0.0006661822    0.0000000000    0.0004882812 #> sp31    0.0049833887      0.0007873062    0.0000000000    0.0000000000 #> sp32    0.0012702756      0.0018168605    0.0000000000    0.0000000000 #> sp33    0.0037131132      0.0008478682    0.0000000000    0.0003487723 #> sp34    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0001954270      0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0000000000      0.0494791667    0.0054869092    0.0000000000 #> sp37    0.0055696697      0.0036942829    0.0000000000    0.0000000000 #> sp38    0.0000000000      0.0025436047    0.0000000000    0.0000000000 #> sp39    0.0000000000      0.0104772287    0.0915492958    0.0000000000 #> sp40    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp43    0.0000000000      0.1316012597    0.3274431867    0.0000000000 #> sp44    0.8776626930      0.0382751938    0.0012529163    0.9972795759 #> sp45    0.0000000000      0.0009689922    0.0000000000    0.0000000000 #> sp46    0.0000000000      0.0000000000    0.0000000000    0.0000000000 #> sp47    0.0027359781      0.0000000000    0.0000000000    0.0000000000 #> sp48    0.0003908540      0.0002422481    0.0000000000    0.0000000000 #>      10249.C038.01SS.r 10249.C038.02SS 10249.C038.04SS 10249.C041.01SS #> sp1       0.0000000000    0.000000e+00    0.0000000000    0.0053119654 #> sp2       0.0007046968    0.000000e+00    0.0000000000    0.0001800666 #> sp3       0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp4       0.0005285226    1.432693e-01    0.1771813319    0.0016205996 #> sp5       0.0000000000    0.000000e+00    0.0510975835    0.0000000000 #> sp6       0.0009513407    5.940205e-01    0.5162331673    0.0323219591 #> sp7       0.0000000000    3.865287e-02    0.0480538646    0.0038714324 #> sp8       0.0000000000    0.000000e+00    0.0000000000    0.0003601332 #> sp9       0.0001409394    9.949259e-05    0.0000000000    0.0053119654 #> sp10      0.0000000000    0.000000e+00    0.0000000000    0.0036013325 #> sp11      0.0002114090    3.979704e-04    0.0011068069    0.0000000000 #> sp12      0.0000000000    0.000000e+00    0.0000000000    0.0003601332 #> sp13      0.0007399316    4.327928e-03    0.0069175429    0.0011704331 #> sp14      0.0000000000    0.000000e+00    0.0000000000    0.0033312326 #> sp15      0.0000000000    0.000000e+00    0.0054418004    0.0018006662 #> sp16      0.0000000000    2.487315e-04    0.0006456373    0.0033312326 #> sp17      0.0018674465    0.000000e+00    0.0000000000    0.0000000000 #> sp18      0.0002466439    9.004079e-03    0.0077476480    0.0000000000 #> sp19      0.0023607343    0.000000e+00    0.0000000000    0.0000000000 #> sp20      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp21      0.0000000000    0.000000e+00    0.0000000000    0.0010803997 #> sp22      0.0014798633    0.000000e+00    0.0000000000    0.0036913658 #> sp23      0.0000000000    0.000000e+00    0.0000000000    0.0063923652 #> sp24      0.0000000000    3.079296e-02    0.0273934698    0.0000000000 #> sp25      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp26      0.0000000000    0.000000e+00    0.0000000000    0.0027009994 #> sp27      0.0000000000    0.000000e+00    0.0000000000    0.0023408661 #> sp28      0.0001409394    0.000000e+00    0.0006456373    0.0000000000 #> sp29      0.0009865755    0.000000e+00    0.0000000000    0.0013504997 #> sp30      0.0000000000    0.000000e+00    0.0346799483    0.0065724318 #> sp31      0.0000000000    0.000000e+00    0.0000000000    0.0030611326 #> sp32      0.0000000000    0.000000e+00    0.0000000000    0.0033312326 #> sp33      0.0000000000    0.000000e+00    0.0000000000    0.0033312326 #> sp34      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp35      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp36      0.0002818787    6.546612e-02    0.0080243498    0.0011704331 #> sp37      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp38      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp39      0.0015150981    0.000000e+00    0.0000000000    0.0000000000 #> sp40      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp41      0.0000000000    0.000000e+00    0.0111603025    0.0000000000 #> sp42      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp43      0.0014093936    3.432494e-03    0.0040582918    0.0006302332 #> sp44      0.9864345865    1.099393e-01    0.0618889504    0.9000630233 #> sp45      0.0000000000    0.000000e+00    0.0000000000    0.0001800666 #> sp46      0.0000000000    3.482241e-04    0.0000000000    0.0007202665 #> sp47      0.0000000000    0.000000e+00    0.0000000000    0.0008102998 #> sp48      0.0000000000    0.000000e+00    0.0377236672    0.0000000000 #>      10249.C041.01SS.r 10249.C041.02SS 10249.C041.03SS 10249.C042.01SS #> sp1       0.0018611063    0.000000e+00    0.0000000000    0.0011040777 #> sp2       0.0000000000    9.892175e-05    0.0000000000    0.0000000000 #> sp3       0.0002757195    0.000000e+00    0.0000000000    0.0000000000 #> sp4       0.4518697226    4.020180e-01    0.2818532819    0.0019873399 #> sp5       0.0000000000    0.000000e+00    0.0000000000    0.0001472104 #> sp6       0.1588144063    3.492432e-01    0.2102250033    0.0240688945 #> sp7       0.0000000000    6.306262e-02    0.2604180535    0.0012512881 #> sp8       0.0002757195    0.000000e+00    0.0000000000    0.0000000000 #> sp9       0.0003446493    0.000000e+00    0.0000000000    0.0016929192 #> sp10      0.0001033948    3.462261e-04    0.0000000000    0.0000000000 #> sp11      0.0004825090    4.451479e-04    0.0009319664    0.0000000000 #> sp12      0.0001723247    0.000000e+00    0.0063906271    0.0018401295 #> sp13      0.0018266414    1.582748e-03    0.0005325523    0.0013984985 #> sp14      0.0002757195    0.000000e+00    0.0000000000    0.0000000000 #> sp15      0.0007582285    9.892175e-05    0.0000000000    0.0040482850 #> sp16      0.0000000000    0.000000e+00    0.0000000000    0.0073605182 #> sp17      0.0141650870    0.000000e+00    0.0000000000    0.0000000000 #> sp18      0.0025159400    0.000000e+00    0.0000000000    0.0013984985 #> sp19      0.0480441151    5.935305e-04    0.0000000000    0.0000000000 #> sp20      0.0031018439    0.000000e+00    0.0000000000    0.0000000000 #> sp21      0.0015164570    0.000000e+00    0.0000000000    0.0020609451 #> sp22      0.0027916595    0.000000e+00    0.0000000000    0.0006624466 #> sp23      0.0008960882    0.000000e+00    0.0000000000    0.0020609451 #> sp24      0.0686196795    0.000000e+00    0.0000000000    0.0000000000 #> sp25      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp26      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp27      0.0835429950    1.749431e-01    0.2094261749    0.0054467835 #> sp28      0.0198518008    0.000000e+00    0.0000000000    0.0000000000 #> sp29      0.0000000000    0.000000e+00    0.0000000000    0.0033858384 #> sp30      0.0002067896    0.000000e+00    0.0000000000    0.0039010746 #> sp31      0.0078580045    0.000000e+00    0.0000000000    0.0095686736 #> sp32      0.0308805790    0.000000e+00    0.0000000000    0.0011776829 #> sp33      0.0047216957    0.000000e+00    0.0031953135    0.0006624466 #> sp34      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp35      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp36      0.0083405135    0.000000e+00    0.0005325523    0.0003680259 #> sp37      0.0057556436    0.000000e+00    0.0000000000    0.0000000000 #> sp38      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp39      0.0002412545    0.000000e+00    0.0000000000    0.0000000000 #> sp40      0.0003101844    0.000000e+00    0.0000000000    0.0000000000 #> sp41      0.0000000000    0.000000e+00    0.0000000000    0.0005888415 #> sp42      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp43      0.0442185077    6.429914e-04    0.0007988284    0.0022081555 #> sp44      0.0303980700    0.000000e+00    0.0240979896    0.9194759311 #> sp45      0.0018611063    6.924523e-03    0.0015976568    0.0000000000 #> sp46      0.0024814751    0.000000e+00    0.0000000000    0.0021345503 #> sp47      0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp48      0.0006203688    0.000000e+00    0.0000000000    0.0000000000 #>      10249.C042.01SS.r 10249.C042.02SS 10249.C042.03SS 10249.C043.01SS #> sp1       0.0009277667    0.0000000000    0.0000000000    0.0042954942 #> sp2       0.0724983433    0.0000000000    0.0000000000    0.0005369368 #> sp3       0.0000000000    0.0000000000    0.0000000000    0.0026846839 #> sp4       0.1445990722    0.0003732040    0.2280310822    0.0016555551 #> sp5       0.0000000000    0.0000000000    0.0196548966    0.0000000000 #> sp6       0.2090125911    0.0006220066    0.3543023654    0.0259519442 #> sp7       0.0151093439    0.0000000000    0.0935893041    0.0039375364 #> sp8       0.0000000000    0.0001244013    0.0000000000    0.0012528525 #> sp9       0.0025182240    0.0000000000    0.0232544852    0.0057720703 #> sp10      0.0000000000    0.0005598059    0.0000000000    0.0003132131 #> sp11      0.0243870113    0.0059090626    0.0011427265    0.0000000000 #> sp12      0.0031809145    0.0000000000    0.0000000000    0.0007159157 #> sp13      0.0031809145    0.0486409156    0.0006284996    0.0056378361 #> sp14      0.0000000000    0.0000000000    0.0000000000    0.0024162155 #> sp15      0.0120609675    0.0000000000    0.0000000000    0.0042507495 #> sp16      0.0000000000    0.0000000000    0.0000000000    0.0025951944 #> sp17      0.1395626243    0.0000000000    0.0000000000    0.0000000000 #> sp18      0.0165672631    0.0254400697    0.0000000000    0.0010738736 #> sp19      0.0258449304    0.3225726193    0.0059993144    0.0000000000 #> sp20      0.0000000000    0.0000000000    0.0000000000    0.0019687682 #> sp21      0.0083499006    0.0000000000    0.0254828020    0.0017450445 #> sp22      0.0104705103    0.0000000000    0.0006284996    0.0021030024 #> sp23      0.0110006627    0.0000000000    0.0000000000    0.0005816815 #> sp24      0.0063618290    0.0000000000    0.0000000000    0.0013870867 #> sp25      0.0071570577    0.0000000000    0.0000000000    0.0000000000 #> sp26      0.0033134526    0.0000000000    0.0000000000    0.0017450445 #> sp27      0.0300861498    0.0000000000    0.0123414467    0.0085909884 #> sp28      0.0015904573    0.0179759905    0.0083419038    0.0000000000 #> sp29      0.1306825712    0.0000000000    0.0000000000    0.0011633630 #> sp30      0.0000000000    0.0000000000    0.0140555365    0.0049666652 #> sp31      0.0046388337    0.0000000000    0.0000000000    0.0021924918 #> sp32      0.0000000000    0.0000000000    0.0002285453    0.0046087073 #> sp33      0.0000000000    0.0000000000    0.0000000000    0.0046981968 #> sp34      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35      0.0000000000    0.0000000000    0.0000000000    0.0004921920 #> sp36      0.0420145792    0.1383964670    0.0021711804    0.0020135129 #> sp37      0.0092776673    0.0000000000    0.0124557193    0.0000000000 #> sp38      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39      0.0046388337    0.0000000000    0.0000000000    0.0000000000 #> sp40      0.0000000000    0.0000000000    0.0000000000    0.0022372366 #> sp41      0.0000000000    0.0000000000    0.0287395726    0.0014765761 #> sp42      0.0000000000    0.0000000000    0.0061135870    0.0000000000 #> sp43      0.0364479788    0.0000000000    0.0052565421    0.0009843841 #> sp44      0.0245195494    0.4355290166    0.0027425437    0.8789207571 #> sp45      0.0000000000    0.0038564409    0.0000000000    0.0049666652 #> sp46      0.0000000000    0.0000000000    0.0000000000    0.0067564544 #> sp47      0.0000000000    0.0000000000    0.0000000000    0.0030426417 #> sp48      0.0000000000    0.0000000000    0.1548394469    0.0002684684 #>      10249.C043.01SS.r 10249.C043.02SS 10249.C043.03SS 10249.C044.01SS #> sp1       0.0008608321    0.0000000000    0.0000000000    0.0000000000 #> sp2       0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp3       0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp4       0.2510760402    0.3154514727    0.3321151618    0.0000000000 #> sp5       0.0022955524    0.0000000000    0.0000000000    0.0000000000 #> sp6       0.1635581062    0.4450989860    0.4330154203    0.0003316750 #> sp7       0.0218077475    0.0000000000    0.0000000000    0.0000000000 #> sp8       0.0014347202    0.0002414293    0.0000000000    0.0001658375 #> sp9       0.0068866571    0.0000000000    0.0000000000    0.0000000000 #> sp10      0.0335724534    0.0000000000    0.0000000000    0.0132669983 #> sp11      0.0022955524    0.0003862868    0.0006239415    0.0000000000 #> sp12      0.0040172166    0.0000000000    0.0001782690    0.0000000000 #> sp13      0.0117647059    0.0002897151    0.0003565380    0.0000000000 #> sp14      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15      0.0000000000    0.0000000000    0.0022283626    0.0000000000 #> sp16      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp17      0.0220946915    0.0009174312    0.0000000000    0.0000000000 #> sp18      0.0123385940    0.0000000000    0.0000000000    0.0000000000 #> sp19      0.0395982783    0.0000000000    0.0004456725    0.0000000000 #> sp20      0.0080344333    0.0000000000    0.0019609591    0.0000000000 #> sp21      0.0318507891    0.0000000000    0.0000000000    0.0000000000 #> sp22      0.0327116212    0.0000000000    0.0058828773    0.0000000000 #> sp23      0.0309899570    0.0000000000    0.0010696140    0.0000000000 #> sp24      0.0000000000    0.0000000000    0.0119440235    0.0000000000 #> sp25      0.0249641320    0.0000000000    0.0000000000    0.0000000000 #> sp26      0.0332855093    0.0000000000    0.0000000000    0.0000000000 #> sp27      0.0820659971    0.0623370352    0.0803993226    0.0000000000 #> sp28      0.0106169297    0.0051665862    0.0017826901    0.0000000000 #> sp29      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp30      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp31      0.0209469154    0.0001448576    0.0000000000    0.0000000000 #> sp32      0.0000000000    0.0000000000    0.0188965148    0.0001658375 #> sp33      0.0000000000    0.0013037180    0.0075764328    0.0000000000 #> sp34      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36      0.0088952654    0.0110574602    0.0343167840    0.0000000000 #> sp37      0.0134863702    0.0969097055    0.0246011231    0.0000000000 #> sp38      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39      0.0154949785    0.0000000000    0.0005348070    0.0000000000 #> sp40      0.0014347202    0.0000000000    0.0000000000    0.0000000000 #> sp41      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp42      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43      0.0711621234    0.0541284404    0.0054372047    0.0000000000 #> sp44      0.0318507891    0.0065668759    0.0366342811    0.9860696517 #> sp45      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp46      0.0040172166    0.0000000000    0.0000000000    0.0000000000 #> sp47      0.0045911047    0.0000000000    0.0000000000    0.0000000000 #> sp48      0.0000000000    0.0000000000    0.0000000000    0.0000000000 #>      10249.C044.02SS 10249.C044.03SS 10249.C044.04SS 10249.C045.01SS #> sp1     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp2     0.0000000000    0.0009229823    5.601250e-04    0.0000000000 #> sp3     0.0015902648    0.0026663932    0.000000e+00    0.0000000000 #> sp4     0.3554587568    0.2224387242    3.943280e-01    0.2192466797 #> sp5     0.0000000000    0.0000000000    0.000000e+00    0.0005443066 #> sp6     0.3636866487    0.5808635012    4.566788e-01    0.2405834966 #> sp7     0.0450114084    0.0461491129    4.687362e-02    0.0887219682 #> sp8     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp9     0.0000000000    0.0000000000    0.000000e+00    0.0017417810 #> sp10    0.0005531356    0.0017434109    0.000000e+00    0.0000000000 #> sp11    0.0000000000    0.0000000000    0.000000e+00    0.0042455911 #> sp12    0.0000000000    0.0000000000    0.000000e+00    0.0065316786 #> sp13    0.0029731038    0.0057430007    6.485658e-04    0.0000000000 #> sp14    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp15    0.0000000000    0.0000000000    0.000000e+00    0.0009797518 #> sp16    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp17    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp18    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp19    0.0000000000    0.0000000000    2.847793e-02    0.0000000000 #> sp20    0.0000000000    0.0000000000    8.844079e-05    0.0000000000 #> sp21    0.0026273940    0.0031791611    2.446862e-03    0.0019595036 #> sp22    0.0000000000    0.0000000000    0.000000e+00    0.0026126715 #> sp23    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp24    0.0000000000    0.0000000000    0.000000e+00    0.0050076203 #> sp25    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp26    0.0000000000    0.0003076608    0.000000e+00    0.0000000000 #> sp27    0.0000000000    0.0000000000    0.000000e+00    0.1632919660 #> sp28    0.0000000000    0.0000000000    0.000000e+00    0.0054430655 #> sp29    0.0000000000    0.0000000000    0.000000e+00    0.0007620292 #> sp30    0.0000000000    0.0000000000    0.000000e+00    0.0022860875 #> sp31    0.0001382839    0.0000000000    0.000000e+00    0.0000000000 #> sp32    0.0000000000    0.0000000000    2.889066e-03    0.0044633137 #> sp33    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp34    0.0000000000    0.0000000000    0.000000e+00    0.0017417810 #> sp35    0.0025582521    0.0033842683    3.567112e-03    0.0000000000 #> sp36    0.0010371292    0.0042046970    1.120250e-03    0.0120836055 #> sp37    0.0297310378    0.0199979489    8.844079e-03    0.0059873721 #> sp38    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp41    0.0000000000    0.0000000000    0.000000e+00    0.0010886131 #> sp42    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp43    0.1924220425    0.1083991385    2.090151e-02    0.0518179839 #> sp44    0.0022125423    0.0000000000    3.225141e-02    0.0191595907 #> sp45    0.0000000000    0.0000000000    1.179211e-04    0.0000000000 #> sp46    0.0000000000    0.0000000000    2.063618e-04    0.0071848465 #> sp47    0.0000000000    0.0000000000    0.000000e+00    0.1491399956 #> sp48    0.0000000000    0.0000000000    0.000000e+00    0.0033747006 #>      10249.C045.02SS 10249.C045.03SS 10249.C046.01SS 10249.C046.02SS #> sp1     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp2     0.000000e+00    0.0000000000    0.0000000000    0.0813875917 #> sp3     0.000000e+00    0.0000000000    0.0000000000    0.0092061374 #> sp4     3.497942e-02    0.0918978018    0.2322379291    0.0009339560 #> sp5     0.000000e+00    0.0000000000    0.0011015238    0.0000000000 #> sp6     5.220075e-01    0.3930832087    0.2573893887    0.0000000000 #> sp7     0.000000e+00    0.0000000000    0.1151092344    0.0000000000 #> sp8     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp9     3.332439e-03    0.0002301761    0.0000000000    0.0000000000 #> sp10    1.833960e-03    0.0063873864    0.0000000000    0.0014009340 #> sp11    0.000000e+00    0.0006905283    0.0000000000    0.0808539026 #> sp12    0.000000e+00    0.0000000000    0.0053240316    0.0095396931 #> sp13    2.572016e-03    0.0056393141    0.0016522857    0.0307538359 #> sp14    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp16    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp18    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp19    0.000000e+00    0.0040280815    0.0014686984    0.0219479653 #> sp20    0.000000e+00    0.0000000000    0.0009179365    0.0000000000 #> sp21    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp22    0.000000e+00    0.0000000000    0.0009179365    0.2221480987 #> sp23    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp24    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp25    2.683843e-04    0.0007480723    0.0022030475    0.0000000000 #> sp26    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp27    2.460190e-04    0.0294049948    0.1408114558    0.0001334223 #> sp28    3.981034e-03    0.0005754402    0.0000000000    0.0000000000 #> sp29    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp30    0.000000e+00    0.0000000000    0.0049568570    0.0000000000 #> sp31    0.000000e+00    0.0003452641    0.0000000000    0.0000000000 #> sp32    0.000000e+00    0.0001726321    0.0007343492    0.0000000000 #> sp33    4.383611e-03    0.0004603522    0.0016522857    0.0000000000 #> sp34    0.000000e+00    0.0001726321    0.0009179365    0.0000000000 #> sp35    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.000000e+00    0.0000000000    0.0038553332    0.0000000000 #> sp37    8.946144e-05    0.0315341236    0.0000000000    0.2180787191 #> sp38    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp42    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp43    4.960637e-02    0.0004028081    0.0403892051    0.3214142762 #> sp44    3.763196e-01    0.4223731154    0.0152377455    0.0002668446 #> sp45    3.802111e-04    0.0118540684    0.0000000000    0.0008672448 #> sp46    0.000000e+00    0.0000000000    0.0044060951    0.0000000000 #> sp47    0.000000e+00    0.0000000000    0.1532953920    0.0010673783 #> sp48    0.000000e+00    0.0000000000    0.0154213328    0.0000000000 #>      10249.C046.03SS 10249.C047.02SD 10249.C047.02SS 10249.C049.01SS #> sp1     0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp2     6.353173e-05    0.0000000000    0.0000000000     0.000000000 #> sp3     1.336284e-02    0.0030958100    0.0001669914     0.000000000 #> sp4     1.164748e-04    0.0003736322    0.0002226552     0.000000000 #> sp5     0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp6     9.212101e-04    0.0005337603    0.0006123017     0.989351780 #> sp7     6.353173e-05    0.0000000000    0.0000000000     0.000000000 #> sp8     0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp9     0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp10    6.141400e-04    0.0046970910    0.0000000000     0.002098554 #> sp11    4.966063e-03    0.0006938884    0.0000000000     0.005362972 #> sp12    3.102466e-03    0.0000000000    0.0000000000     0.000000000 #> sp13    2.361263e-03    0.0004803843    0.0000000000     0.000000000 #> sp14    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp15    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp16    2.117724e-05    0.0000000000    0.0000000000     0.000000000 #> sp17    0.000000e+00    0.2060848679    0.5491789591     0.000000000 #> sp18    0.000000e+00    0.0000000000    0.0000000000     0.003186694 #> sp19    1.058862e-04    0.0633039765    0.0588366268     0.000000000 #> sp20    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp21    0.000000e+00    0.0019215372    0.0006123017     0.000000000 #> sp22    4.354041e-02    0.0000000000    0.0000000000     0.000000000 #> sp23    7.412035e-05    0.0000000000    0.0000000000     0.000000000 #> sp24    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp25    1.164748e-04    0.0008006405    0.0003896465     0.000000000 #> sp26    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp27    2.647155e-04    0.0000000000    0.0000000000     0.000000000 #> sp28    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp29    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp30    5.294311e-05    0.0002135041    0.0000000000     0.000000000 #> sp31    1.482407e-04    0.0001067521    0.0000000000     0.000000000 #> sp32    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp33    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp34    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp35    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp36    1.694179e-04    0.0001601281    0.0000000000     0.000000000 #> sp37    3.164833e-01    0.0000000000    0.0000000000     0.000000000 #> sp38    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp39    2.117724e-05    0.0000000000    0.0000000000     0.000000000 #> sp40    0.000000e+00    0.0001067521    0.0000000000     0.000000000 #> sp41    5.294311e-05    0.0000000000    0.0000000000     0.000000000 #> sp42    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp43    5.920098e-01    0.7157192421    0.3899805177     0.000000000 #> sp44    6.247287e-04    0.0000000000    0.0000000000     0.000000000 #> sp45    2.308319e-03    0.0017080331    0.0000000000     0.000000000 #> sp46    1.843479e-02    0.0000000000    0.0000000000     0.000000000 #> sp47    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #> sp48    0.000000e+00    0.0000000000    0.0000000000     0.000000000 #>      10249.C049.02SD 10249.C049.02SS 10249.C049.03SD 10249.C049.03SS #> sp1      0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp2      0.000000000    0.0000000000    1.689464e-03    0.0003731772 #> sp3      0.000000000    0.0000000000    1.624484e-04    0.0000000000 #> sp4      0.000000000    0.0000000000    1.949381e-04    0.0001435297 #> sp5      0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp6      0.955822185    0.9905485545    4.288963e-01    0.4765759559 #> sp7      0.000137912    0.0000000000    0.000000e+00    0.0000000000 #> sp8      0.000000000    0.0000000000    9.746905e-05    0.0000000000 #> sp9      0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp10     0.022617570    0.0025945145    3.996231e-03    0.0008037662 #> sp11     0.016181676    0.0043241908    1.741447e-02    0.0045642439 #> sp12     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp13     0.004229302    0.0019767729    7.797524e-03    0.0031289471 #> sp14     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp15     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp16     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp17     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp18     0.001011355    0.0004324191    0.000000e+00    0.0000000000 #> sp19     0.000000000    0.0000000000    4.959550e-01    0.4926225743 #> sp20     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp21     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp22     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp23     0.000000000    0.0000000000    9.746905e-05    0.0000000000 #> sp24     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp25     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp26     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp27     0.000000000    0.0000000000    5.523246e-04    0.0005454128 #> sp28     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp29     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp30     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp31     0.000000000    0.0000000000    1.624484e-04    0.0002583534 #> sp32     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp33     0.000000000    0.0000000000    1.624484e-04    0.0000000000 #> sp34     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp35     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp36     0.000000000    0.0000000000    1.442542e-02    0.0054828339 #> sp37     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp38     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp39     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp40     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp41     0.000000000    0.0000000000    3.248968e-04    0.0000000000 #> sp42     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp43     0.000000000    0.0000000000    2.407486e-02    0.0127454358 #> sp44     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp45     0.000000000    0.0001235483    3.996231e-03    0.0027557699 #> sp46     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp47     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp48     0.000000000    0.0000000000    0.000000e+00    0.0000000000 #>      10249.C049.04SS 10249.C052.02SS 10249.C052.03SD 10249.C052.03SS #> sp1     0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp2     0.0008534323    0.0000000000    0.000000e+00    0.000000e+00 #> sp3     0.0000000000    0.0000000000    3.064852e-04    3.682563e-04 #> sp4     0.0000000000    0.0000000000    0.000000e+00    9.206408e-05 #> sp5     0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp6     0.4226345083    0.0004033681    2.145397e-04    9.666728e-04 #> sp7     0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp8     0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp9     0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp10    0.0008163265    0.0000000000    1.225941e-03    1.380961e-04 #> sp11    0.0477551020    0.0000000000    0.000000e+00    0.000000e+00 #> sp12    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp13    0.0072727273    0.0000000000    7.046095e-02    2.025410e-02 #> sp14    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp15    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp16    0.0001113173    0.0005042102    0.000000e+00    0.000000e+00 #> sp17    0.2540630798    0.0000000000    0.000000e+00    0.000000e+00 #> sp18    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp19    0.0083487941    0.0000000000    2.260942e-01    3.485086e-01 #> sp20    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp21    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp22    0.0000000000    0.0002521051    0.000000e+00    0.000000e+00 #> sp23    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp24    0.0000000000    0.0000000000    3.984308e-04    0.000000e+00 #> sp25    0.0000000000    0.0002521051    0.000000e+00    2.301602e-04 #> sp26    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp27    0.0000000000    0.0000000000    3.677823e-04    0.000000e+00 #> sp28    0.0008534323    0.0000000000    6.742675e-04    2.669858e-03 #> sp29    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp30    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp31    0.0000000000    0.0000000000    0.000000e+00    4.603204e-04 #> sp32    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp33    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp34    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp35    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp36    0.0237105751    0.0000000000    4.903764e-04    3.682563e-04 #> sp37    0.0000000000    0.0000000000    9.194557e-05    0.000000e+00 #> sp38    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp39    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp40    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp41    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp42    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp43    0.2271243043    0.0000000000    0.000000e+00    0.000000e+00 #> sp44    0.0000000000    0.9985882116    6.948633e-01    6.242405e-01 #> sp45    0.0064564007    0.0000000000    4.811818e-03    1.703185e-03 #> sp46    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp47    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #> sp48    0.0000000000    0.0000000000    0.000000e+00    0.000000e+00 #>      10249.C052.04SD 10249.C052.04SS 10249.C053.02SD 10249.C053.02SS #> sp1     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp2     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp3     8.192245e-04    0.0033970468    0.0052476910    0.0029732408 #> sp4     0.000000e+00    0.0002264698    0.0002623846    0.0003129727 #> sp5     0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp6     7.021924e-04    0.0008152912    0.0012069689    0.0016691878 #> sp7     0.000000e+00    0.0000000000    0.0001574307    0.0000000000 #> sp8     7.802138e-05    0.0000000000    0.0000000000    0.0002608106 #> sp9     0.000000e+00    0.0000000000    0.0002099076    0.0000000000 #> sp10    0.000000e+00    0.0000000000    0.0089735516    0.0016691878 #> sp11    0.000000e+00    0.0000000000    0.0008921075    0.0002608106 #> sp12    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp13    1.706328e-01    0.0708397500    0.0103904282    0.0037556726 #> sp14    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp16    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.000000e+00    0.0000000000    0.4505142737    0.2630535705 #> sp18    0.000000e+00    0.0000000000    0.0299643157    0.0382869960 #> sp19    1.052508e-01    0.1450312528    0.2877833753    0.2575765479 #> sp20    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp21    0.000000e+00    0.0000000000    0.0421389589    0.0339575400 #> sp22    0.000000e+00    0.0000000000    0.0000000000    0.0004172970 #> sp23    0.000000e+00    0.0000000000    0.0003148615    0.0001564864 #> sp24    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp25    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp26    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp27    0.000000e+00    0.0000000000    0.0003673384    0.0000000000 #> sp28    1.803854e-01    0.0194764018    0.0226700252    0.0028689166 #> sp29    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp30    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp31    0.000000e+00    0.0002717637    0.0000000000    0.0005737833 #> sp32    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp33    0.000000e+00    0.0000000000    0.0010495382    0.0011475666 #> sp34    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp36    5.461496e-03    0.0035329287    0.0005247691    0.0002608106 #> sp37    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp38    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.000000e+00    0.0000000000    0.0000000000    0.0005216212 #> sp40    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.000000e+00    0.0000000000    0.0000000000    0.0001043242 #> sp42    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.000000e+00    0.0016758764    0.1353904282    0.3891294142 #> sp44    5.198564e-01    0.7521514630    0.0011544920    0.0007302697 #> sp45    1.681361e-02    0.0025817556    0.0007871537    0.0002086485 #> sp46    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #> sp47    0.000000e+00    0.0000000000    0.0000000000    0.0001043242 #> sp48    0.000000e+00    0.0000000000    0.0000000000    0.0000000000 #>      10249.C053.03SD 10249.C053.03SS 10249.C053.04SD 10249.C053.04SS #> sp1     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp2     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp3     0.0032664489    4.228832e-03    0.0008855435    0.0037107612 #> sp4     0.0000000000    1.900599e-04    0.0002213859    0.0002005817 #> sp5     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp6     0.0000000000    9.027844e-04    0.0007195041    0.0005014542 #> sp7     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp8     0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp9     0.0003999733    0.000000e+00    0.0000000000    0.0000000000 #> sp10    0.0094660356    6.176946e-04    0.0047597963    0.0000000000 #> sp11    0.0007332844    0.000000e+00    0.0053132610    0.0008023267 #> sp12    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp13    0.0185987601    6.414521e-03    0.0034868275    0.0024069802 #> sp14    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp15    0.0000000000    0.000000e+00    0.0000000000    0.0003510180 #> sp16    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp17    0.0009332711    2.375748e-04    0.0061988045    0.0030087253 #> sp18    0.0204653023    1.434952e-02    0.0154970113    0.0055661418 #> sp19    0.6910872608    7.922170e-01    0.4657958822    0.5588707251 #> sp20    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp21    0.0545296980    1.957617e-02    0.1091432367    0.0740647879 #> sp22    0.0000000000    1.900599e-04    0.0000000000    0.0000000000 #> sp23    0.0008666089    3.326048e-04    0.0016050476    0.0004513088 #> sp24    0.0000000000    4.751497e-04    0.0000000000    0.0000000000 #> sp25    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp26    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp27    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp28    0.0501299913    3.421078e-03    0.0494243967    0.0041119246 #> sp29    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp30    0.0001333244    0.000000e+00    0.0000000000    0.0000000000 #> sp31    0.0000000000    9.502993e-05    0.0002213859    0.0000000000 #> sp32    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp33    0.0019332045    1.377934e-03    0.0187624530    0.0078226858 #> sp34    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp36    0.0112659156    2.423263e-03    0.0057006863    0.0133888276 #> sp37    0.0000000000    2.850898e-04    0.0000000000    0.0000000000 #> sp38    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp39    0.0031997867    1.615509e-03    0.0286141244    0.0053154147 #> sp40    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp43    0.1280581295    1.477715e-01    0.2379344698    0.2831711965 #> sp44    0.0035330978    2.043144e-03    0.0448859863    0.0351519406 #> sp45    0.0013999067    1.235389e-03    0.0008301970    0.0011031993 #> sp46    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp47    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #> sp48    0.0000000000    0.000000e+00    0.0000000000    0.0000000000 #>      10249.C055.01SS 10249.C055.02SD 10249.C055.02SS 10249.C055.03SD #> sp1     0.0019492026    0.0000000000    0.0000000000    0.0000000000 #> sp2     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp3     0.0000000000    0.0000000000    0.0000000000    0.0006454389 #> sp4     0.0304784406    0.0720997214    0.3621892626    0.2745983936 #> sp5     0.0015357354    0.0000000000    0.0000000000    0.0000000000 #> sp6     0.2945067927    0.0007082487    0.0012116148    0.0489099254 #> sp7     0.0499704666    0.0000000000    0.0000000000    0.0000000000 #> sp8     0.0306556409    0.0001416497    0.0002506789    0.0000000000 #> sp9     0.0519787360    0.0000000000    0.0000000000    0.0000000000 #> sp10    0.0011813349    0.0000000000    0.0000000000    0.0000000000 #> sp11    0.0000000000    0.1068039095    0.1241278463    0.0106855995 #> sp12    0.0065564087    0.0104348647    0.0177982035    0.0012908778 #> sp13    0.0042528057    0.0424949242    0.0624608314    0.0258175559 #> sp14    0.0007088009    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0090372120    0.0000000000    0.0000000000    0.0025817556 #> sp16    0.0417601890    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.0009450679    0.0000000000    0.0000000000    0.0009323006 #> sp18    0.0043118724    0.0100571321    0.0193022770    0.1159638554 #> sp19    0.0071470762    0.0157703385    0.0432421141    0.1220596672 #> sp20    0.0077968104    0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0373892499    0.0000000000    0.0000000000    0.0018646013 #> sp22    0.0164796220    0.0000000000    0.0000000000    0.0010757315 #> sp23    0.0139988187    0.0000000000    0.0000000000    0.0000000000 #> sp24    0.0058476078    0.0000000000    0.0000000000    0.0008605852 #> sp25    0.0341996456    0.0000000000    0.0000000000    0.0006454389 #> sp26    0.0291199055    0.0000000000    0.0000000000    0.0000000000 #> sp27    0.0339633786    0.0000000000    0.0005849175    0.0020797476 #> sp28    0.0057294743    0.0000000000    0.0000000000    0.0795324154 #> sp29    0.0225634968    0.0000000000    0.0000000000    0.0000000000 #> sp30    0.0590667454    0.0000000000    0.0000000000    0.0098967298 #> sp31    0.0786769049    0.0000000000    0.0000000000    0.0002868617 #> sp32    0.0156526875    0.0000000000    0.0000000000    0.0000000000 #> sp33    0.0185469581    0.0000000000    0.0000000000    0.0000000000 #> sp34    0.0082102776    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0014766686    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0046072061    0.0769158128    0.0577814915    0.0477624785 #> sp37    0.0076196102    0.0000000000    0.0000000000    0.0002868617 #> sp38    0.0007088009    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0015948021    0.0000000000    0.0000000000    0.0690619621 #> sp40    0.0040756054    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0115180154    0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0060838748    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.0071470762    0.6636762831    0.3110507625    0.1823006311 #> sp44    0.0121677496    0.0008971151    0.0000000000    0.0000000000 #> sp45    0.0043709392    0.0000000000    0.0000000000    0.0000000000 #> sp46    0.0016538689    0.0000000000    0.0000000000    0.0008605852 #> sp47    0.0018901359    0.0000000000    0.0000000000    0.0000000000 #> sp48    0.0108682812    0.0000000000    0.0000000000    0.0000000000 #>      10249.C055.03SS 10249.C055.04SD 10249.C055.04SS 10249.C056.01SS #> sp1     0.0000000000    0.0000000000    0.0000000000    0.0001972516 #> sp2     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp3     0.0003358522    0.0002174740    0.0002453747    0.0000000000 #> sp4     0.5301427372    0.0000000000    0.0000000000    0.0322835163 #> sp5     0.0000000000    0.0000000000    0.0000000000    0.0003287527 #> sp6     0.0008956059    0.0007611591    0.0000000000    0.5328423960 #> sp7     0.0000000000    0.0000000000    0.0000000000    0.0260372148 #> sp8     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp9     0.0000000000    0.0000000000    0.0000000000    0.0554277073 #> sp10    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp11    0.0014553596    0.0006524221    0.0003435246    0.0007232560 #> sp12    0.0006717045    0.0000000000    0.0000000000    0.0000000000 #> sp13    0.0072767982    0.0028815310    0.0006870491    0.0074298113 #> sp14    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0002798769    0.0012504757    0.0000000000    0.0014465119 #> sp16    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp17    0.0000000000    0.0000000000    0.0000000000    0.0009862581 #> sp18    0.1096557515    0.0000000000    0.0000000000    0.0143336183 #> sp19    0.0462916317    0.2783124015    0.3827845120    0.0210401736 #> sp20    0.0000000000    0.0083183820    0.0035333955    0.0005917549 #> sp21    0.0000000000    0.0540422987    0.0662020906    0.0090078243 #> sp22    0.0000000000    0.0000000000    0.0000000000    0.0161746334 #> sp23    0.0000000000    0.0000000000    0.0000000000    0.0121638504 #> sp24    0.0000000000    0.0000000000    0.0000000000    0.0011835098 #> sp25    0.0000000000    0.0000000000    0.0000000000    0.0065093037 #> sp26    0.0000000000    0.0000000000    0.0000000000    0.0309027549 #> sp27    0.0000000000    0.3017995977    0.1670510870    0.0084818200 #> sp28    0.0139378673    0.0738324363    0.0150169309    0.0067065553 #> sp29    0.0000000000    0.0000000000    0.0000000000    0.0103885857 #> sp30    0.0095717884    0.0123960202    0.0074103156    0.0025642712 #> sp31    0.0006157291    0.0000000000    0.0000000000    0.1209152476 #> sp32    0.0000000000    0.0000000000    0.0000000000    0.0036820304 #> sp33    0.0000000000    0.0000000000    0.0000000000    0.0129528569 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.0016437636 #> sp36    0.0550797649    0.0019028978    0.0017666977    0.0084160694 #> sp37    0.0000000000    0.0000000000    0.0000000000    0.0026957722 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0100755668    0.0115804926    0.0073121657    0.0041422842 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0002630022 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.0205141692 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.0007890065 #> sp43    0.2129862860    0.0175610287    0.0180105020    0.0210401736 #> sp44    0.0000000000    0.2343282771    0.3296363547    0.0005917549 #> sp45    0.0000000000    0.0000000000    0.0000000000    0.0032875271 #> sp46    0.0005037783    0.0001631055    0.0000000000    0.0004602538 #> sp47    0.0002239015    0.0000000000    0.0000000000    0.0000000000 #> sp48    0.0000000000    0.0000000000    0.0000000000    0.0008547571 #>      10249.C056.02SS 10249.C056.03SD 10249.C056.03SS 10249.C056.04SD #> sp1     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp2     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp3     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp4     0.0069981584    0.0000000000    0.000000e+00    0.0000000000 #> sp5     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp6     0.0287292818    0.0104759736    9.308726e-04    0.0000000000 #> sp7     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp8     0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp9     0.0025782689    0.0002277386    0.000000e+00    0.0000000000 #> sp10    0.0019643953    0.0011956274    0.000000e+00    0.0006498051 #> sp11    0.0006138735    0.0032452744    5.666181e-04    0.0029491153 #> sp12    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp13    0.0040515654    0.0097358233    3.359236e-03    0.0042987104 #> sp14    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp15    0.0014732965    0.0259621954    7.054395e-02    0.0237928621 #> sp16    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp17    0.0012277471    0.1262240947    1.933382e-01    0.1365090473 #> sp18    0.0008594230    0.0705989524    6.762992e-02    0.0643806858 #> sp19    0.2804174340    0.0937144159    7.795046e-02    0.1004198740 #> sp20    0.0159607121    0.0000000000    0.000000e+00    0.0000000000 #> sp21    0.1641497851    0.1139831473    3.816578e-02    0.0675797261 #> sp22    0.0020871700    0.0532338875    5.030759e-02    0.0422873138 #> sp23    0.0033149171    0.0000000000    0.000000e+00    0.0000000000 #> sp24    0.0006138735    0.0009109542    0.000000e+00    0.0000000000 #> sp25    0.0002455494    0.0000000000    0.000000e+00    0.0000000000 #> sp26    0.0033149171    0.0000000000    0.000000e+00    0.0000000000 #> sp27    0.2405156538    0.1092006377    2.050753e-01    0.1067179846 #> sp28    0.0330263966    0.1062969711    3.440181e-02    0.0602819154 #> sp29    0.0003683241    0.0000000000    0.000000e+00    0.0000000000 #> sp30    0.0066298343    0.0000000000    0.000000e+00    0.0000000000 #> sp31    0.0088397790    0.0000000000    8.094544e-05    0.0000000000 #> sp32    0.0004910988    0.0000000000    0.000000e+00    0.0000000000 #> sp33    0.0018416206    0.0000000000    0.000000e+00    0.0000000000 #> sp34    0.0009821977    0.0000000000    0.000000e+00    0.0000000000 #> sp35    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp36    0.0008594230    0.0024481895    1.537963e-03    0.0036988903 #> sp37    0.0000000000    0.0002846732    0.000000e+00    0.0000000000 #> sp38    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp39    0.0227133211    0.0000000000    0.000000e+00    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp41    0.0003683241    0.0000000000    0.000000e+00    0.0000000000 #> sp42    0.0000000000    0.0000000000    0.000000e+00    0.0000000000 #> sp43    0.0078575813    0.2716351628    2.558685e-01    0.3855343397 #> sp44    0.1496623696    0.0002846732    0.000000e+00    0.0000000000 #> sp45    0.0000000000    0.0001708039    8.094544e-05    0.0005998201 #> sp46    0.0045426642    0.0001708039    0.000000e+00    0.0002999100 #> sp47    0.0012277471    0.0000000000    0.000000e+00    0.0000000000 #> sp48    0.0014732965    0.0000000000    1.618909e-04    0.0000000000 #>      10249.C056.04SS 10249.C056.05SD 10249.C056.05SS 10249.C057.02SS #> sp1     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp2     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp3     0.0000000000    0.0003711559    0.0000000000    0.0000000000 #> sp4     0.0001655172    0.2032873807    0.5286845956    0.0019093686 #> sp5     0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp6     0.0000000000    0.0003181336    0.0004541097    0.0073192464 #> sp7     0.0000000000    0.0000000000    0.0000000000    0.0012092668 #> sp8     0.0000000000    0.0000000000    0.0000000000    0.0009546843 #> sp9     0.0000000000    0.0000000000    0.0000000000    0.0007001018 #> sp10    0.0003862069    0.0002651113    0.0000000000    0.0163569246 #> sp11    0.0000000000    0.0185577943    0.0010091327    0.0039460285 #> sp12    0.0000000000    0.0024920467    0.0000000000    0.0781568228 #> sp13    0.0030344828    0.0224814422    0.0131187245    0.1738161914 #> sp14    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp15    0.0607448276    0.0019618240    0.0023714617    0.0000000000 #> sp16    0.0000000000    0.0000000000    0.0000000000    0.0012092668 #> sp17    0.2118620690    0.0252916225    0.0385993239    0.0000000000 #> sp18    0.0639448276    0.0040827147    0.0056511428    0.0000000000 #> sp19    0.0762482759    0.0010074231    0.0005550230    0.0033732179 #> sp20    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp21    0.0199724138    0.0033934252    0.0032796811    0.0000000000 #> sp22    0.0519172414    0.0000000000    0.0000000000    0.0006364562 #> sp23    0.0000000000    0.0000000000    0.0000000000    0.0003182281 #> sp24    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp25    0.0000000000    0.0000000000    0.0000000000    0.0005091650 #> sp26    0.0000000000    0.0000000000    0.0000000000    0.0014002037 #> sp27    0.2812689655    0.0770943796    0.1136283364    0.6538951120 #> sp28    0.0288000000    0.1925238600    0.0534335738    0.0000000000 #> sp29    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp30    0.0000000000    0.0000000000    0.0000000000    0.0004455193 #> sp31    0.0000000000    0.0000000000    0.0000000000    0.0014638493 #> sp32    0.0000000000    0.0070519618    0.0030778546    0.0008273931 #> sp33    0.0000000000    0.0000000000    0.0000000000    0.0004455193 #> sp34    0.0000000000    0.0000000000    0.0000000000    0.0005091650 #> sp35    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp36    0.0000000000    0.1573170732    0.0914274181    0.0500254582 #> sp37    0.0000000000    0.0172322375    0.0289116504    0.0000000000 #> sp38    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp39    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp40    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp41    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp42    0.0000000000    0.0000000000    0.0000000000    0.0000000000 #> sp43    0.2013241379    0.2643160127    0.1152934053    0.0000000000 #> sp44    0.0003310345    0.0000000000    0.0000000000    0.0000000000 #> sp45    0.0000000000    0.0001590668    0.0000000000    0.0002545825 #> sp46    0.0000000000    0.0004772004    0.0005045663    0.0000000000 #> sp47    0.0000000000    0.0003181336    0.0000000000    0.0000000000 #> sp48    0.0000000000    0.0000000000    0.0000000000    0.0003182281 #>      10249.C057.03SD 10249.C057.03SS #> sp1     0.0000678334    0.000000e+00 #> sp2     0.0000000000    0.000000e+00 #> sp3     0.0000678334    0.000000e+00 #> sp4     0.1673789174    9.636705e-02 #> sp5     0.0000000000    0.000000e+00 #> sp6     0.0005426672    6.566604e-03 #> sp7     0.0000000000    1.279209e-03 #> sp8     0.0000000000    0.000000e+00 #> sp9     0.0000000000    1.066007e-03 #> sp10    0.0006783340    0.000000e+00 #> sp11    0.0000000000    0.000000e+00 #> sp12    0.0176706010    4.605151e-03 #> sp13    0.0166531000    1.236568e-02 #> sp14    0.0000000000    0.000000e+00 #> sp15    0.0000000000    0.000000e+00 #> sp16    0.0000000000    0.000000e+00 #> sp17    0.0000000000    0.000000e+00 #> sp18    0.0000000000    0.000000e+00 #> sp19    0.5680029847    5.247314e-01 #> sp20    0.0000000000    0.000000e+00 #> sp21    0.0000000000    6.822446e-04 #> sp22    0.0000000000    0.000000e+00 #> sp23    0.0000000000    0.000000e+00 #> sp24    0.0002713336    0.000000e+00 #> sp25    0.0000000000    0.000000e+00 #> sp26    0.0000000000    3.112741e-03 #> sp27    0.1984466151    2.413014e-01 #> sp28    0.0000000000    1.705611e-04 #> sp29    0.0000000000    1.705611e-04 #> sp30    0.0000000000    0.000000e+00 #> sp31    0.0000000000    9.380863e-04 #> sp32    0.0000000000    0.000000e+00 #> sp33    0.0005426672    6.822446e-04 #> sp34    0.0000000000    0.000000e+00 #> sp35    0.0000000000    1.279209e-04 #> sp36    0.0000000000    3.837626e-04 #> sp37    0.0000000000    8.528057e-05 #> sp38    0.0000000000    0.000000e+00 #> sp39    0.0000000000    0.000000e+00 #> sp40    0.0000000000    0.000000e+00 #> sp41    0.0000000000    1.279209e-04 #> sp42    0.0000000000    1.279209e-04 #> sp43    0.0276081943    1.033601e-01 #> sp44    0.0009157509    7.675252e-04 #> sp45    0.0002035002    0.000000e+00 #> sp46    0.0009496676    8.528057e-04 #> sp47    0.0000000000    0.000000e+00 #> sp48    0.0000000000    1.279209e-04 #>  #> $meta.dat #>                          X.SampleID antiexposedall day_of_life delivery diet #> 10249.C001.01SS     10249.C001.01SS              n           0  Vaginal   bd #> 10249.C001.02SS     10249.C001.02SS              n          36  Vaginal   bd #> 10249.C001.03SS     10249.C001.03SS              n          42  Vaginal   bd #> 10249.C001.04SS     10249.C001.04SS              y          49  Vaginal   bd #> 10249.C001.05SS     10249.C001.05SS              y          57  Vaginal   bd #> 10249.C001.06SS     10249.C001.06SS              y          61  Vaginal   bd #> 10249.C002.01SS     10249.C002.01SS              n           0 Cesarean   bd #> 10249.C002.01SS.r 10249.C002.01SS.r              n           0 Cesarean   bd #> 10249.C002.02SS     10249.C002.02SS              n          32 Cesarean   bd #> 10249.C002.03SS     10249.C002.03SS              n          53 Cesarean   bd #> 10249.C002.04SS     10249.C002.04SS              n          60 Cesarean   bd #> 10249.C004.01SS     10249.C004.01SS              n           0 Cesarean   bd #> 10249.C004.02SS     10249.C004.02SS              n          31 Cesarean   bd #> 10249.C004.03SS     10249.C004.03SS              n          55 Cesarean   bd #> 10249.C005.01SS     10249.C005.01SS              n           1 Cesarean   fd #> 10249.C005.01SS.r 10249.C005.01SS.r              n           1 Cesarean   fd #> 10249.C005.02SS     10249.C005.02SS              n          29 Cesarean   fd #> 10249.C005.03SS     10249.C005.03SS              n          43 Cesarean   fd #> 10249.C005.04SS     10249.C005.04SS              n          63 Cesarean   fd #> 10249.C007.01SS     10249.C007.01SS              n           1 Cesarean   bd #> 10249.C007.02SS     10249.C007.02SS              n          30 Cesarean   bd #> 10249.C007.03SS     10249.C007.03SS              n          49 Cesarean   bd #> 10249.C007.04SS     10249.C007.04SS              n          66 Cesarean   bd #> 10249.C008.01SS     10249.C008.01SS              n           1  Vaginal   bd #> 10249.C008.02SS     10249.C008.02SS              n          31  Vaginal   bd #> 10249.C008.03SS     10249.C008.03SS              n          72  Vaginal   bd #> 10249.C009.01SS     10249.C009.01SS              n           1  Vaginal   bd #> 10249.C009.02SS     10249.C009.02SS              n          31  Vaginal   bd #> 10249.C009.03SS     10249.C009.03SS              n          64  Vaginal   bd #> 10249.C010.01SS     10249.C010.01SS              n           2  Vaginal   bd #> 10249.C010.01SS.r 10249.C010.01SS.r              n           2  Vaginal   bd #> 10249.C010.02SS     10249.C010.02SS              n          30  Vaginal   bd #> 10249.C010.03SS     10249.C010.03SS              n          39  Vaginal   bd #> 10249.C010.04SS     10249.C010.04SS              n          43  Vaginal   bd #> 10249.C010.05SS     10249.C010.05SS              n          60  Vaginal   bd #> 10249.C011.01SS     10249.C011.01SS              n           1 Cesarean   fd #> 10249.C011.02SS     10249.C011.02SS              n          36 Cesarean   fd #> 10249.C011.03SS     10249.C011.03SS              n          65 Cesarean   fd #> 10249.C012.01SS     10249.C012.01SS              n           2 Cesarean   bd #> 10249.C012.01SS.r 10249.C012.01SS.r              n           2 Cesarean   bd #> 10249.C012.02SS     10249.C012.02SS              n          29 Cesarean   bd #> 10249.C012.03SS     10249.C012.03SS              n          40 Cesarean   bd #> 10249.C012.04SS     10249.C012.04SS              n          62 Cesarean   bd #> 10249.C014.01SS     10249.C014.01SS              n           1  Vaginal   bd #> 10249.C014.01SS.r 10249.C014.01SS.r              n           1  Vaginal   bd #> 10249.C014.02SS     10249.C014.02SS              n          31  Vaginal   bd #> 10249.C014.03SS     10249.C014.03SS              n          71  Vaginal   bd #> 10249.C016.01SS     10249.C016.01SS              n           1  Vaginal   bd #> 10249.C016.02SS     10249.C016.02SS              n           8  Vaginal   bd #> 10249.C016.03SS     10249.C016.03SS              n          31  Vaginal   bd #> 10249.C016.04SS     10249.C016.04SS              n          45  Vaginal   bd #> 10249.C016.05SS     10249.C016.05SS              n          64  Vaginal   bd #> 10249.C017.01SS     10249.C017.01SS              n           0  Vaginal   bd #> 10249.C017.01SS.r 10249.C017.01SS.r              n           0  Vaginal   bd #> 10249.C017.02SS     10249.C017.02SS              n           2  Vaginal   bd #> 10249.C017.03SS     10249.C017.03SS              y           2  Vaginal   bd #> 10249.C017.04SS     10249.C017.04SS              y          32  Vaginal   bd #> 10249.C017.05SS     10249.C017.05SS              y          45  Vaginal   bd #> 10249.C017.06SS     10249.C017.06SS              y          63  Vaginal   bd #> 10249.C018.01SS     10249.C018.01SS              n           2  Vaginal   bd #> 10249.C018.01SS.r 10249.C018.01SS.r              n           2  Vaginal   bd #> 10249.C018.02SS     10249.C018.02SS              n          33  Vaginal   bd #> 10249.C020.01SS     10249.C020.01SS              n           0 Cesarean   bd #> 10249.C020.01SS.r 10249.C020.01SS.r              n           0 Cesarean   bd #> 10249.C020.02SS     10249.C020.02SS              y           7 Cesarean   bd #> 10249.C020.03SS     10249.C020.03SS              y           9 Cesarean   bd #> 10249.C020.04SS     10249.C020.04SS              y          11 Cesarean   bd #> 10249.C020.05SS     10249.C020.05SS              y          13 Cesarean   bd #> 10249.C020.06SS     10249.C020.06SS              y          15 Cesarean   bd #> 10249.C020.07SS     10249.C020.07SS              y          33 Cesarean   bd #> 10249.C020.08SS     10249.C020.08SS              y          69 Cesarean   bd #> 10249.C021.01SS     10249.C021.01SS              n           1 Cesarean   fd #> 10249.C021.02SS     10249.C021.02SS              n           2 Cesarean   fd #> 10249.C021.03SS     10249.C021.03SS              n          37 Cesarean   fd #> 10249.C022.01SS     10249.C022.01SS              n           0  Vaginal   fd #> 10249.C022.01SS.r 10249.C022.01SS.r              n           0  Vaginal   fd #> 10249.C022.02SS     10249.C022.02SS              n          32  Vaginal   fd #> 10249.C022.03SS     10249.C022.03SS              n          63  Vaginal   fd #> 10249.C023.01SS     10249.C023.01SS              n           1 Cesarean   bd #> 10249.C023.01SS.r 10249.C023.01SS.r              n           1 Cesarean   bd #> 10249.C024.01SS     10249.C024.01SS              n           0  Vaginal   bd #> 10249.C024.01SS.r 10249.C024.01SS.r              n           0  Vaginal   bd #> 10249.C024.02SS     10249.C024.02SS              n          33  Vaginal   bd #> 10249.C024.03SS     10249.C024.03SS              n          43  Vaginal   bd #> 10249.C024.04SS     10249.C024.04SS              n          61  Vaginal   bd #> 10249.C025.01SS     10249.C025.01SS              n           1 Cesarean   bd #> 10249.C025.01SS.r 10249.C025.01SS.r              n           1 Cesarean   bd #> 10249.C025.02SS     10249.C025.02SS              n          30 Cesarean   bd #> 10249.C025.03SS     10249.C025.03SS              n          42 Cesarean   bd #> 10249.C025.04SS     10249.C025.04SS              n          60 Cesarean   bd #> 10249.C027.01SS     10249.C027.01SS              n           1  Vaginal   bd #> 10249.C027.01SS.r 10249.C027.01SS.r              n           1  Vaginal   bd #> 10249.C027.02SS     10249.C027.02SS              n          35  Vaginal   bd #> 10249.C027.03SS     10249.C027.03SS              n          69  Vaginal   bd #> 10249.C030.01SS     10249.C030.01SS              n           0  Vaginal   bd #> 10249.C030.01SS.r 10249.C030.01SS.r              n           0  Vaginal   bd #> 10249.C030.02SS     10249.C030.02SS              n          34  Vaginal   bd #> 10249.C030.03SS     10249.C030.03SS              n          44  Vaginal   bd #> 10249.C030.04SS     10249.C030.04SS              n          61  Vaginal   bd #> 10249.C031.01SS     10249.C031.01SS              n           0  Vaginal   bd #> 10249.C031.01SS.r 10249.C031.01SS.r              n           0  Vaginal   bd #> 10249.C031.02SS     10249.C031.02SS              n          32  Vaginal   bd #> 10249.C031.03SS     10249.C031.03SS              n          41  Vaginal   bd #> 10249.C031.04SS     10249.C031.04SS              n          54  Vaginal   bd #> 10249.C032.01SS     10249.C032.01SS              n           1  Vaginal   bd #> 10249.C032.02SS     10249.C032.02SS              n          31  Vaginal   bd #> 10249.C032.03SS     10249.C032.03SS              y          52  Vaginal   bd #> 10249.C032.04SS     10249.C032.04SS              y          59  Vaginal   bd #> 10249.C033.01SS     10249.C033.01SS              n           0  Vaginal   bd #> 10249.C033.01SS.r 10249.C033.01SS.r              n           0  Vaginal   bd #> 10249.C033.02SS     10249.C033.02SS              n          32  Vaginal   bd #> 10249.C033.03SS     10249.C033.03SS              n          61  Vaginal   bd #> 10249.C034.01SS     10249.C034.01SS              n           1 Cesarean   fd #> 10249.C034.02SS     10249.C034.02SS              n          34 Cesarean   fd #> 10249.C034.03SS     10249.C034.03SS              n          45 Cesarean   fd #> 10249.C034.04SS     10249.C034.04SS              n          63 Cesarean   fd #> 10249.C035.01SS     10249.C035.01SS              n           0  Vaginal   bd #> 10249.C035.01SS.r 10249.C035.01SS.r              n           0  Vaginal   bd #> 10249.C035.02SS     10249.C035.02SS              n          31  Vaginal   bd #> 10249.C035.03SS     10249.C035.03SS              n          61  Vaginal   bd #> 10249.C036.01SS     10249.C036.01SS              n           0 Cesarean   fd #> 10249.C036.01SS.r 10249.C036.01SS.r              n           0 Cesarean   fd #> 10249.C036.02SS     10249.C036.02SS              n          42 Cesarean   fd #> 10249.C036.03SS     10249.C036.03SS              n          65 Cesarean   fd #> 10249.C037.01SS     10249.C037.01SS              n           1 Cesarean   fd #> 10249.C037.01SS.r 10249.C037.01SS.r              n           1 Cesarean   fd #> 10249.C037.02SS     10249.C037.02SS              n          33 Cesarean   fd #> 10249.C038.01SS     10249.C038.01SS              n           2  Vaginal   fd #> 10249.C038.01SS.r 10249.C038.01SS.r              n           2  Vaginal   fd #> 10249.C038.02SS     10249.C038.02SS              n          33  Vaginal   fd #> 10249.C038.04SS     10249.C038.04SS              n          61  Vaginal   fd #> 10249.C041.01SS     10249.C041.01SS              n           0  Vaginal   bd #> 10249.C041.01SS.r 10249.C041.01SS.r              n           0  Vaginal   bd #> 10249.C041.02SS     10249.C041.02SS              n          32  Vaginal   bd #> 10249.C041.03SS     10249.C041.03SS              n          64  Vaginal   bd #> 10249.C042.01SS     10249.C042.01SS              n           0  Vaginal   fd #> 10249.C042.01SS.r 10249.C042.01SS.r              n           0  Vaginal   fd #> 10249.C042.02SS     10249.C042.02SS              n          31  Vaginal   fd #> 10249.C042.03SS     10249.C042.03SS              n          61  Vaginal   fd #> 10249.C043.01SS     10249.C043.01SS              n           0  Vaginal   fd #> 10249.C043.01SS.r 10249.C043.01SS.r              n           0  Vaginal   fd #> 10249.C043.02SS     10249.C043.02SS              n          35  Vaginal   fd #> 10249.C043.03SS     10249.C043.03SS              n          61  Vaginal   fd #> 10249.C044.01SS     10249.C044.01SS              n           1  Vaginal   bd #> 10249.C044.02SS     10249.C044.02SS              n          33  Vaginal   bd #> 10249.C044.03SS     10249.C044.03SS              n          41  Vaginal   bd #> 10249.C044.04SS     10249.C044.04SS              n          62  Vaginal   bd #> 10249.C045.01SS     10249.C045.01SS              n           0  Vaginal   bd #> 10249.C045.02SS     10249.C045.02SS              n          31  Vaginal   bd #> 10249.C045.03SS     10249.C045.03SS              n          61  Vaginal   bd #> 10249.C046.01SS     10249.C046.01SS              n           1 Cesarean   fd #> 10249.C046.02SS     10249.C046.02SS              n          31 Cesarean   fd #> 10249.C046.03SS     10249.C046.03SS              n          54 Cesarean   fd #> 10249.C047.02SD     10249.C047.02SD              n          32 Cesarean   bd #> 10249.C047.02SS     10249.C047.02SS              n          32 Cesarean   bd #> 10249.C049.01SS     10249.C049.01SS              n           4  Vaginal   bd #> 10249.C049.02SD     10249.C049.02SD              n           5  Vaginal   bd #> 10249.C049.02SS     10249.C049.02SS              n           5  Vaginal   bd #> 10249.C049.03SD     10249.C049.03SD              n          32  Vaginal   bd #> 10249.C049.03SS     10249.C049.03SS              n          32  Vaginal   bd #> 10249.C049.04SS     10249.C049.04SS              n          60  Vaginal   bd #> 10249.C052.02SS     10249.C052.02SS              n           1  Vaginal   bd #> 10249.C052.03SD     10249.C052.03SD              n          32  Vaginal   bd #> 10249.C052.03SS     10249.C052.03SS              n          32  Vaginal   bd #> 10249.C052.04SD     10249.C052.04SD              n          62  Vaginal   bd #> 10249.C052.04SS     10249.C052.04SS              n          62  Vaginal   bd #> 10249.C053.02SD     10249.C053.02SD              n          30 Cesarean   bd #> 10249.C053.02SS     10249.C053.02SS              n          30 Cesarean   bd #> 10249.C053.03SD     10249.C053.03SD              n          45 Cesarean   bd #> 10249.C053.03SS     10249.C053.03SS              n          45 Cesarean   bd #> 10249.C053.04SD     10249.C053.04SD              n          62 Cesarean   bd #> 10249.C053.04SS     10249.C053.04SS              n          62 Cesarean   bd #> 10249.C055.01SS     10249.C055.01SS              n           0 Cesarean   fd #> 10249.C055.02SD     10249.C055.02SD              n          30 Cesarean   fd #> 10249.C055.02SS     10249.C055.02SS              n          30 Cesarean   fd #> 10249.C055.03SD     10249.C055.03SD              n          41 Cesarean   fd #> 10249.C055.03SS     10249.C055.03SS              n          41 Cesarean   fd #> 10249.C055.04SD     10249.C055.04SD              n          64 Cesarean   fd #> 10249.C055.04SS     10249.C055.04SS              n          64 Cesarean   fd #> 10249.C056.01SS     10249.C056.01SS              n           0 Cesarean   bd #> 10249.C056.02SS     10249.C056.02SS              n           1 Cesarean   bd #> 10249.C056.03SD     10249.C056.03SD              n          31 Cesarean   bd #> 10249.C056.03SS     10249.C056.03SS              n          31 Cesarean   bd #> 10249.C056.04SD     10249.C056.04SD              n          31 Cesarean   bd #> 10249.C056.04SS     10249.C056.04SS              n          31 Cesarean   bd #> 10249.C056.05SD     10249.C056.05SD              n          65 Cesarean   bd #> 10249.C056.05SS     10249.C056.05SS              n          65 Cesarean   bd #> 10249.C057.02SS     10249.C057.02SS              n          31 Cesarean   bd #> 10249.C057.03SD     10249.C057.03SD              n          62 Cesarean   bd #> 10249.C057.03SS     10249.C057.03SS              n          62 Cesarean   bd #>                   diet_3 mom_child month month_of_life  sample_summary    sex #> 10249.C001.01SS       eb         C     0             0  Vaginal.bd.n.0 Female #> 10249.C001.02SS       eb         C     1           1.2  Vaginal.bd.n.0 Female #> 10249.C001.03SS       eb         C     1           1.4  Vaginal.bd.n.0 Female #> 10249.C001.04SS       eb         C     2           1.6  Vaginal.bd.y.1 Female #> 10249.C001.05SS       eb         C     2           1.9  Vaginal.bd.y.1 Female #> 10249.C001.06SS       eb         C     2             2  Vaginal.bd.y.1 Female #> 10249.C002.01SS       eb         C     0             0 Cesarean.bd.n.1   Male #> 10249.C002.01SS.r     eb         C     0             0 Cesarean.bd.n.1   Male #> 10249.C002.02SS       eb         C     1           1.1 Cesarean.bd.n.1   Male #> 10249.C002.03SS       eb         C     2           1.7 Cesarean.bd.n.1   Male #> 10249.C002.04SS       eb         C     2             2 Cesarean.bd.n.1   Male #> 10249.C004.01SS       eb         C     0             0 Cesarean.bd.n.1   Male #> 10249.C004.02SS       eb         C     1             1 Cesarean.bd.n.1   Male #> 10249.C004.03SS       eb         C     2           1.8 Cesarean.bd.n.1   Male #> 10249.C005.01SS       fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C005.01SS.r     fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C005.02SS       fd         C     1             1 Cesarean.fd.n.1 Female #> 10249.C005.03SS       fd         C     1           1.4 Cesarean.fd.n.1 Female #> 10249.C005.04SS       fd         C     2           2.1 Cesarean.fd.n.1 Female #> 10249.C007.01SS       eb         C     0             0 Cesarean.bd.n.1   Male #> 10249.C007.02SS       eb         C     1             1 Cesarean.bd.n.1   Male #> 10249.C007.03SS       eb         C     2           1.6 Cesarean.bd.n.1   Male #> 10249.C007.04SS       eb         C     2           2.2 Cesarean.bd.n.1   Male #> 10249.C008.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C008.02SS       eb         C     1             1  Vaginal.bd.n.0   Male #> 10249.C008.03SS       eb         C     2           2.4  Vaginal.bd.n.0   Male #> 10249.C009.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C009.02SS       eb         C     1             1  Vaginal.bd.n.0   Male #> 10249.C009.03SS       eb         C     2           2.1  Vaginal.bd.n.0   Male #> 10249.C010.01SS       eb         C     0           0.1  Vaginal.fd.n.0   Male #> 10249.C010.01SS.r     eb         C     0           0.1  Vaginal.fd.n.0   Male #> 10249.C010.02SS       eb         C     1             1  Vaginal.fd.n.0   Male #> 10249.C010.03SS       eb         C     1           1.3  Vaginal.fd.n.0   Male #> 10249.C010.04SS       eb         C     1           1.4  Vaginal.fd.n.0   Male #> 10249.C010.05SS       eb         C     2             2  Vaginal.fd.n.0   Male #> 10249.C011.01SS       fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C011.02SS       fd         C     1           1.2 Cesarean.fd.n.1 Female #> 10249.C011.03SS       fd         C     2           2.1 Cesarean.fd.n.1 Female #> 10249.C012.01SS       eb         C     0           0.1 Cesarean.bd.n.1 Female #> 10249.C012.01SS.r     eb         C     0           0.1 Cesarean.bd.n.1 Female #> 10249.C012.02SS       eb         C     1             1 Cesarean.bd.n.1 Female #> 10249.C012.03SS       eb         C     1           1.3 Cesarean.bd.n.1 Female #> 10249.C012.04SS       eb         C     2             2 Cesarean.bd.n.1 Female #> 10249.C014.01SS       eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C014.01SS.r     eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C014.02SS       eb         C     1             1  Vaginal.bd.n.1   Male #> 10249.C014.03SS       eb         C     2           2.3  Vaginal.bd.n.1   Male #> 10249.C016.01SS       eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C016.02SS       eb         C     0           0.3  Vaginal.bd.n.1   Male #> 10249.C016.03SS       eb         C     1             1  Vaginal.bd.n.1   Male #> 10249.C016.04SS       eb         C     2           1.5  Vaginal.bd.n.1   Male #> 10249.C016.05SS       eb         C     2           2.1  Vaginal.bd.n.1   Male #> 10249.C017.01SS       eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C017.01SS.r     eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C017.02SS       eb         C     0           0.1  Vaginal.bd.n.1   Male #> 10249.C017.03SS       eb         C     0           0.1  Vaginal.bd.y.1   Male #> 10249.C017.04SS       eb         C     1           1.1  Vaginal.bd.y.1   Male #> 10249.C017.05SS       eb         C     2           1.5  Vaginal.bd.y.1   Male #> 10249.C017.06SS       eb         C     2           2.1  Vaginal.bd.y.1   Male #> 10249.C018.01SS       eb         C     0           0.1  Vaginal.bd.n.0 Female #> 10249.C018.01SS.r     eb         C     0           0.1  Vaginal.bd.n.0 Female #> 10249.C018.02SS       eb         C     1           1.1  Vaginal.bd.n.0 Female #> 10249.C020.01SS       eb         C     0             0 Cesarean.bd.n.1 Female #> 10249.C020.01SS.r     eb         C     0             0 Cesarean.bd.n.1 Female #> 10249.C020.02SS       eb         C     0           0.2 Cesarean.bd.y.1 Female #> 10249.C020.03SS       eb         C     0           0.3 Cesarean.bd.y.1 Female #> 10249.C020.04SS       eb         C     0           0.4 Cesarean.bd.y.1 Female #> 10249.C020.05SS       eb         C     0           0.4 Cesarean.bd.y.1 Female #> 10249.C020.06SS       eb         C     1           0.5 Cesarean.bd.y.1 Female #> 10249.C020.07SS       eb         C     1           1.1 Cesarean.bd.y.1 Female #> 10249.C020.08SS       eb         C     2           2.3 Cesarean.bd.y.1 Female #> 10249.C021.01SS       fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C021.02SS       fd         C     0           0.1 Cesarean.fd.n.1 Female #> 10249.C021.03SS       fd         C     1           1.2 Cesarean.fd.n.1 Female #> 10249.C022.01SS       fd         C     0             0  Vaginal.fd.n.0   Male #> 10249.C022.01SS.r     fd         C     0             0  Vaginal.fd.n.0   Male #> 10249.C022.02SS       fd         C     1           1.1  Vaginal.fd.n.0   Male #> 10249.C022.03SS       fd         C     2           2.1  Vaginal.fd.n.0   Male #> 10249.C023.01SS       eb         C     0             0 Cesarean.bd.n.1   Male #> 10249.C023.01SS.r     eb         C     0             0 Cesarean.bd.n.1   Male #> 10249.C024.01SS       eb         C     0             0  Vaginal.bd.n.0 Female #> 10249.C024.01SS.r     eb         C     0             0  Vaginal.bd.n.0 Female #> 10249.C024.02SS       eb         C     1           1.1  Vaginal.bd.n.0 Female #> 10249.C024.03SS       eb         C     1           1.4  Vaginal.bd.n.0 Female #> 10249.C024.04SS       eb         C     2             2  Vaginal.bd.n.0 Female #> 10249.C025.01SS       bd         C     0             0 Cesarean.fd.n.1   Male #> 10249.C025.01SS.r     bd         C     0             0 Cesarean.fd.n.1   Male #> 10249.C025.02SS       bd         C     1             1 Cesarean.fd.n.1   Male #> 10249.C025.03SS       bd         C     1           1.4 Cesarean.fd.n.1   Male #> 10249.C025.04SS       bd         C     2             2 Cesarean.fd.n.1   Male #> 10249.C027.01SS       bd         C     0             0  Vaginal.bd.n.0   Male #> 10249.C027.01SS.r     bd         C     0             0  Vaginal.bd.n.0   Male #> 10249.C027.02SS       bd         C     1           1.2  Vaginal.bd.n.0   Male #> 10249.C027.03SS       bd         C     2           2.3  Vaginal.bd.n.0   Male #> 10249.C030.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C030.01SS.r     eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C030.02SS       eb         C     1           1.1  Vaginal.bd.n.0   Male #> 10249.C030.03SS       eb         C     1           1.4  Vaginal.bd.n.0   Male #> 10249.C030.04SS       eb         C     2             2  Vaginal.bd.n.0   Male #> 10249.C031.01SS       eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C031.01SS.r     eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C031.02SS       eb         C     1           1.1  Vaginal.bd.n.1   Male #> 10249.C031.03SS       eb         C     1           1.3  Vaginal.bd.n.1   Male #> 10249.C031.04SS       eb         C     2           1.8  Vaginal.bd.n.1   Male #> 10249.C032.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C032.02SS       eb         C     1             1  Vaginal.bd.n.0   Male #> 10249.C032.03SS       eb         C     2           1.7  Vaginal.bd.y.1   Male #> 10249.C032.04SS       eb         C     2           1.9  Vaginal.bd.y.1   Male #> 10249.C033.01SS       eb         C     0             0  Vaginal.bd.n.0 Female #> 10249.C033.01SS.r     eb         C     0             0  Vaginal.bd.n.0 Female #> 10249.C033.02SS       eb         C     1           1.1  Vaginal.bd.n.0 Female #> 10249.C033.03SS       eb         C     2             2  Vaginal.bd.n.0 Female #> 10249.C034.01SS       fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C034.02SS       fd         C     1           1.1 Cesarean.fd.n.1 Female #> 10249.C034.03SS       fd         C     2           1.5 Cesarean.fd.n.1 Female #> 10249.C034.04SS       fd         C     2           2.1 Cesarean.fd.n.1 Female #> 10249.C035.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C035.01SS.r     eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C035.02SS       eb         C     1             1  Vaginal.bd.n.0   Male #> 10249.C035.03SS       eb         C     2             2  Vaginal.bd.n.0   Male #> 10249.C036.01SS       fd         C     0             0 Cesarean.fd.n.1   Male #> 10249.C036.01SS.r     fd         C     0             0 Cesarean.fd.n.1   Male #> 10249.C036.02SS       fd         C     1           1.4 Cesarean.fd.n.1   Male #> 10249.C036.03SS       fd         C     2           2.1 Cesarean.fd.n.1   Male #> 10249.C037.01SS       fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C037.01SS.r     fd         C     0             0 Cesarean.fd.n.1 Female #> 10249.C037.02SS       fd         C     1           1.1 Cesarean.fd.n.1 Female #> 10249.C038.01SS       fd         C     0           0.1  Vaginal.fd.n.0   Male #> 10249.C038.01SS.r     fd         C     0           0.1  Vaginal.fd.n.0   Male #> 10249.C038.02SS       fd         C     1           1.1  Vaginal.fd.n.0   Male #> 10249.C038.04SS       fd         C     2             2  Vaginal.fd.n.0   Male #> 10249.C041.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C041.01SS.r     eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C041.02SS       eb         C     1           1.1  Vaginal.bd.n.0   Male #> 10249.C041.03SS       eb         C     2           2.1  Vaginal.bd.n.0   Male #> 10249.C042.01SS       fd         C     0             0  Vaginal.fd.n.1   Male #> 10249.C042.01SS.r     fd         C     0             0  Vaginal.fd.n.1   Male #> 10249.C042.02SS       fd         C     1             1  Vaginal.fd.n.1   Male #> 10249.C042.03SS       fd         C     2             2  Vaginal.fd.n.1   Male #> 10249.C043.01SS       fd         C     0             0  Vaginal.fd.n.0 Female #> 10249.C043.01SS.r     fd         C     0             0  Vaginal.fd.n.0 Female #> 10249.C043.02SS       fd         C     1           1.2  Vaginal.fd.n.0 Female #> 10249.C043.03SS       fd         C     2             2  Vaginal.fd.n.0 Female #> 10249.C044.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C044.02SS       eb         C     1           1.1  Vaginal.bd.n.0   Male #> 10249.C044.03SS       eb         C     1           1.3  Vaginal.bd.n.0   Male #> 10249.C044.04SS       eb         C     2             2  Vaginal.bd.n.0   Male #> 10249.C045.01SS       eb         C     0             0  Vaginal.bd.n.0   Male #> 10249.C045.02SS       eb         C     1             1  Vaginal.bd.n.0   Male #> 10249.C045.03SS       eb         C     2             2  Vaginal.bd.n.0   Male #> 10249.C046.01SS       fd         C     0             0 Cesarean.bd.n.1 Female #> 10249.C046.02SS       fd         C     1             1 Cesarean.bd.n.1 Female #> 10249.C046.03SS       fd         C     2           1.8 Cesarean.bd.n.1 Female #> 10249.C047.02SD       eb         C     1           1.1 Cesarean.bd.n.1   Male #> 10249.C047.02SS       eb         C     1           1.1 Cesarean.bd.n.1   Male #> 10249.C049.01SS       bd         C     0           0.1  Vaginal.fd.n.1   Male #> 10249.C049.02SD       bd         C     0           0.2  Vaginal.fd.n.1   Male #> 10249.C049.02SS       bd         C     0           0.2  Vaginal.fd.n.1   Male #> 10249.C049.03SD       bd         C     1           1.1  Vaginal.fd.n.1   Male #> 10249.C049.03SS       bd         C     1           1.1  Vaginal.fd.n.1   Male #> 10249.C049.04SS       bd         C     2             2  Vaginal.fd.n.1   Male #> 10249.C052.02SS       eb         C     0             0  Vaginal.bd.n.1   Male #> 10249.C052.03SD       eb         C     1           1.1  Vaginal.bd.n.1   Male #> 10249.C052.03SS       eb         C     1           1.1  Vaginal.bd.n.1   Male #> 10249.C052.04SD       eb         C     2             2  Vaginal.bd.n.1   Male #> 10249.C052.04SS       eb         C     2             2  Vaginal.bd.n.1   Male #> 10249.C053.02SD       bd         C     1             1 Cesarean.bd.n.1   Male #> 10249.C053.02SS       bd         C     1             1 Cesarean.bd.n.1   Male #> 10249.C053.03SD       bd         C     2           1.5 Cesarean.bd.n.1   Male #> 10249.C053.03SS       bd         C     2           1.5 Cesarean.bd.n.1   Male #> 10249.C053.04SD       bd         C     2             2 Cesarean.bd.n.1   Male #> 10249.C053.04SS       bd         C     2             2 Cesarean.bd.n.1   Male #> 10249.C055.01SS       fd         C     0             0 Cesarean.fd.n.1   Male #> 10249.C055.02SD       fd         C     1             1 Cesarean.fd.n.1   Male #> 10249.C055.02SS       fd         C     1             1 Cesarean.fd.n.1   Male #> 10249.C055.03SD       fd         C     1           1.3 Cesarean.fd.n.1   Male #> 10249.C055.03SS       fd         C     1           1.3 Cesarean.fd.n.1   Male #> 10249.C055.04SD       fd         C     2           2.1 Cesarean.fd.n.1   Male #> 10249.C055.04SS       fd         C     2           2.1 Cesarean.fd.n.1   Male #> 10249.C056.01SS       bd         C     0             0 Cesarean.bd.n.1   Male #> 10249.C056.02SS       bd         C     0             0 Cesarean.bd.n.1   Male #> 10249.C056.03SD       bd         C     1             1 Cesarean.bd.n.1   Male #> 10249.C056.03SS       bd         C     1             1 Cesarean.bd.n.1   Male #> 10249.C056.04SD       bd         C     1             1 Cesarean.bd.n.1   Male #> 10249.C056.04SS       bd         C     1             1 Cesarean.bd.n.1   Male #> 10249.C056.05SD       bd         C     2           2.1 Cesarean.bd.n.1   Male #> 10249.C056.05SS       bd         C     2           2.1 Cesarean.bd.n.1   Male #> 10249.C057.02SS       eb         C     1             1 Cesarean.bd.n.1 Female #> 10249.C057.03SD       eb         C     2             2 Cesarean.bd.n.1 Female #> 10249.C057.03SS       eb         C     2             2 Cesarean.bd.n.1 Female #>                   studyid subject.id month_num #> 10249.C001.01SS         1 10249.C001         0 #> 10249.C001.02SS         1 10249.C001         1 #> 10249.C001.03SS         1 10249.C001         1 #> 10249.C001.04SS         1 10249.C001         2 #> 10249.C001.05SS         1 10249.C001         2 #> 10249.C001.06SS         1 10249.C001         2 #> 10249.C002.01SS         2 10249.C002         0 #> 10249.C002.01SS.r       2 10249.C002         0 #> 10249.C002.02SS         2 10249.C002         1 #> 10249.C002.03SS         2 10249.C002         2 #> 10249.C002.04SS         2 10249.C002         2 #> 10249.C004.01SS         4 10249.C004         0 #> 10249.C004.02SS         4 10249.C004         1 #> 10249.C004.03SS         4 10249.C004         2 #> 10249.C005.01SS         5 10249.C005         0 #> 10249.C005.01SS.r       5 10249.C005         0 #> 10249.C005.02SS         5 10249.C005         1 #> 10249.C005.03SS         5 10249.C005         1 #> 10249.C005.04SS         5 10249.C005         2 #> 10249.C007.01SS         7 10249.C007         0 #> 10249.C007.02SS         7 10249.C007         1 #> 10249.C007.03SS         7 10249.C007         2 #> 10249.C007.04SS         7 10249.C007         2 #> 10249.C008.01SS         8 10249.C008         0 #> 10249.C008.02SS         8 10249.C008         1 #> 10249.C008.03SS         8 10249.C008         2 #> 10249.C009.01SS         9 10249.C009         0 #> 10249.C009.02SS         9 10249.C009         1 #> 10249.C009.03SS         9 10249.C009         2 #> 10249.C010.01SS        10 10249.C010         0 #> 10249.C010.01SS.r      10 10249.C010         0 #> 10249.C010.02SS        10 10249.C010         1 #> 10249.C010.03SS        10 10249.C010         1 #> 10249.C010.04SS        10 10249.C010         1 #> 10249.C010.05SS        10 10249.C010         2 #> 10249.C011.01SS        11 10249.C011         0 #> 10249.C011.02SS        11 10249.C011         1 #> 10249.C011.03SS        11 10249.C011         2 #> 10249.C012.01SS        12 10249.C012         0 #> 10249.C012.01SS.r      12 10249.C012         0 #> 10249.C012.02SS        12 10249.C012         1 #> 10249.C012.03SS        12 10249.C012         1 #> 10249.C012.04SS        12 10249.C012         2 #> 10249.C014.01SS        14 10249.C014         0 #> 10249.C014.01SS.r      14 10249.C014         0 #> 10249.C014.02SS        14 10249.C014         1 #> 10249.C014.03SS        14 10249.C014         2 #> 10249.C016.01SS        16 10249.C016         0 #> 10249.C016.02SS        16 10249.C016         0 #> 10249.C016.03SS        16 10249.C016         1 #> 10249.C016.04SS        16 10249.C016         2 #> 10249.C016.05SS        16 10249.C016         2 #> 10249.C017.01SS        17 10249.C017         0 #> 10249.C017.01SS.r      17 10249.C017         0 #> 10249.C017.02SS        17 10249.C017         0 #> 10249.C017.03SS        17 10249.C017         0 #> 10249.C017.04SS        17 10249.C017         1 #> 10249.C017.05SS        17 10249.C017         2 #> 10249.C017.06SS        17 10249.C017         2 #> 10249.C018.01SS        18 10249.C018         0 #> 10249.C018.01SS.r      18 10249.C018         0 #> 10249.C018.02SS        18 10249.C018         1 #> 10249.C020.01SS        20 10249.C020         0 #> 10249.C020.01SS.r      20 10249.C020         0 #> 10249.C020.02SS        20 10249.C020         0 #> 10249.C020.03SS        20 10249.C020         0 #> 10249.C020.04SS        20 10249.C020         0 #> 10249.C020.05SS        20 10249.C020         0 #> 10249.C020.06SS        20 10249.C020         1 #> 10249.C020.07SS        20 10249.C020         1 #> 10249.C020.08SS        20 10249.C020         2 #> 10249.C021.01SS        21 10249.C021         0 #> 10249.C021.02SS        21 10249.C021         0 #> 10249.C021.03SS        21 10249.C021         1 #> 10249.C022.01SS        22 10249.C022         0 #> 10249.C022.01SS.r      22 10249.C022         0 #> 10249.C022.02SS        22 10249.C022         1 #> 10249.C022.03SS        22 10249.C022         2 #> 10249.C023.01SS        23 10249.C023         0 #> 10249.C023.01SS.r      23 10249.C023         0 #> 10249.C024.01SS        24 10249.C024         0 #> 10249.C024.01SS.r      24 10249.C024         0 #> 10249.C024.02SS        24 10249.C024         1 #> 10249.C024.03SS        24 10249.C024         1 #> 10249.C024.04SS        24 10249.C024         2 #> 10249.C025.01SS        25 10249.C025         0 #> 10249.C025.01SS.r      25 10249.C025         0 #> 10249.C025.02SS        25 10249.C025         1 #> 10249.C025.03SS        25 10249.C025         1 #> 10249.C025.04SS        25 10249.C025         2 #> 10249.C027.01SS        27 10249.C027         0 #> 10249.C027.01SS.r      27 10249.C027         0 #> 10249.C027.02SS        27 10249.C027         1 #> 10249.C027.03SS        27 10249.C027         2 #> 10249.C030.01SS        30 10249.C030         0 #> 10249.C030.01SS.r      30 10249.C030         0 #> 10249.C030.02SS        30 10249.C030         1 #> 10249.C030.03SS        30 10249.C030         1 #> 10249.C030.04SS        30 10249.C030         2 #> 10249.C031.01SS        31 10249.C031         0 #> 10249.C031.01SS.r      31 10249.C031         0 #> 10249.C031.02SS        31 10249.C031         1 #> 10249.C031.03SS        31 10249.C031         1 #> 10249.C031.04SS        31 10249.C031         2 #> 10249.C032.01SS        32 10249.C032         0 #> 10249.C032.02SS        32 10249.C032         1 #> 10249.C032.03SS        32 10249.C032         2 #> 10249.C032.04SS        32 10249.C032         2 #> 10249.C033.01SS        33 10249.C033         0 #> 10249.C033.01SS.r      33 10249.C033         0 #> 10249.C033.02SS        33 10249.C033         1 #> 10249.C033.03SS        33 10249.C033         2 #> 10249.C034.01SS        34 10249.C034         0 #> 10249.C034.02SS        34 10249.C034         1 #> 10249.C034.03SS        34 10249.C034         2 #> 10249.C034.04SS        34 10249.C034         2 #> 10249.C035.01SS        35 10249.C035         0 #> 10249.C035.01SS.r      35 10249.C035         0 #> 10249.C035.02SS        35 10249.C035         1 #> 10249.C035.03SS        35 10249.C035         2 #> 10249.C036.01SS        36 10249.C036         0 #> 10249.C036.01SS.r      36 10249.C036         0 #> 10249.C036.02SS        36 10249.C036         1 #> 10249.C036.03SS        36 10249.C036         2 #> 10249.C037.01SS        37 10249.C037         0 #> 10249.C037.01SS.r      37 10249.C037         0 #> 10249.C037.02SS        37 10249.C037         1 #> 10249.C038.01SS        38 10249.C038         0 #> 10249.C038.01SS.r      38 10249.C038         0 #> 10249.C038.02SS        38 10249.C038         1 #> 10249.C038.04SS        38 10249.C038         2 #> 10249.C041.01SS        41 10249.C041         0 #> 10249.C041.01SS.r      41 10249.C041         0 #> 10249.C041.02SS        41 10249.C041         1 #> 10249.C041.03SS        41 10249.C041         2 #> 10249.C042.01SS        42 10249.C042         0 #> 10249.C042.01SS.r      42 10249.C042         0 #> 10249.C042.02SS        42 10249.C042         1 #> 10249.C042.03SS        42 10249.C042         2 #> 10249.C043.01SS        43 10249.C043         0 #> 10249.C043.01SS.r      43 10249.C043         0 #> 10249.C043.02SS        43 10249.C043         1 #> 10249.C043.03SS        43 10249.C043         2 #> 10249.C044.01SS        44 10249.C044         0 #> 10249.C044.02SS        44 10249.C044         1 #> 10249.C044.03SS        44 10249.C044         1 #> 10249.C044.04SS        44 10249.C044         2 #> 10249.C045.01SS        45 10249.C045         0 #> 10249.C045.02SS        45 10249.C045         1 #> 10249.C045.03SS        45 10249.C045         2 #> 10249.C046.01SS        46 10249.C046         0 #> 10249.C046.02SS        46 10249.C046         1 #> 10249.C046.03SS        46 10249.C046         2 #> 10249.C047.02SD        47 10249.C047         1 #> 10249.C047.02SS        47 10249.C047         1 #> 10249.C049.01SS        49 10249.C049         0 #> 10249.C049.02SD        49 10249.C049         0 #> 10249.C049.02SS        49 10249.C049         0 #> 10249.C049.03SD        49 10249.C049         1 #> 10249.C049.03SS        49 10249.C049         1 #> 10249.C049.04SS        49 10249.C049         2 #> 10249.C052.02SS        52 10249.C052         0 #> 10249.C052.03SD        52 10249.C052         1 #> 10249.C052.03SS        52 10249.C052         1 #> 10249.C052.04SD        52 10249.C052         2 #> 10249.C052.04SS        52 10249.C052         2 #> 10249.C053.02SD        53 10249.C053         1 #> 10249.C053.02SS        53 10249.C053         1 #> 10249.C053.03SD        53 10249.C053         2 #> 10249.C053.03SS        53 10249.C053         2 #> 10249.C053.04SD        53 10249.C053         2 #> 10249.C053.04SS        53 10249.C053         2 #> 10249.C055.01SS        55 10249.C055         0 #> 10249.C055.02SD        55 10249.C055         1 #> 10249.C055.02SS        55 10249.C055         1 #> 10249.C055.03SD        55 10249.C055         1 #> 10249.C055.03SS        55 10249.C055         1 #> 10249.C055.04SD        55 10249.C055         2 #> 10249.C055.04SS        55 10249.C055         2 #> 10249.C056.01SS        56 10249.C056         0 #> 10249.C056.02SS        56 10249.C056         0 #> 10249.C056.03SD        56 10249.C056         1 #> 10249.C056.03SS        56 10249.C056         1 #> 10249.C056.04SD        56 10249.C056         1 #> 10249.C056.04SS        56 10249.C056         1 #> 10249.C056.05SD        56 10249.C056         2 #> 10249.C056.05SS        56 10249.C056         2 #> 10249.C057.02SS        57 10249.C057         1 #> 10249.C057.03SD        57 10249.C057         2 #> 10249.C057.03SS        57 10249.C057         2 #>  #> $feature.ann #>      Kingdom       Phylum               Class                    #> sp1  \"k__Bacteria\" \"__\"                 \"__\"                     #> sp2  \"k__Bacteria\" \"p__Actinobacteria\"  \"c__Actinobacteria\"      #> sp3  \"k__Bacteria\" \"p__Actinobacteria\"  \"c__Actinobacteria\"      #> sp4  \"k__Bacteria\" \"p__Actinobacteria\"  \"c__Actinobacteria\"      #> sp5  \"k__Bacteria\" \"p__Actinobacteria\"  \"c__Coriobacteriia\"      #> sp6  \"k__Bacteria\" \"p__Bacteroidetes\"   \"c__Bacteroidia\"         #> sp7  \"k__Bacteria\" \"p__Bacteroidetes\"   \"c__Bacteroidia\"         #> sp8  \"k__Bacteria\" \"p__Bacteroidetes\"   \"c__Bacteroidia\"         #> sp9  \"k__Bacteria\" \"p__Bacteroidetes\"   \"c__Bacteroidia\"         #> sp10 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Bacilli\"             #> sp11 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Bacilli\"             #> sp12 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Bacilli\"             #> sp13 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Bacilli\"             #> sp14 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Bacilli\"             #> sp15 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp16 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp17 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp18 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp19 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp20 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp21 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp22 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp23 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp24 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp25 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp26 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp27 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp28 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp29 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp30 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp31 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp32 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp33 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp34 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp35 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp36 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Clostridia\"          #> sp37 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Erysipelotrichi\"     #> sp38 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Erysipelotrichi\"     #> sp39 \"k__Bacteria\" \"p__Firmicutes\"      \"c__Erysipelotrichi\"     #> sp40 \"k__Bacteria\" \"p__Fusobacteria\"    \"c__Fusobacteriia\"       #> sp41 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Betaproteobacteria\"  #> sp42 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Deltaproteobacteria\" #> sp43 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Gammaproteobacteria\" #> sp44 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Gammaproteobacteria\" #> sp45 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Gammaproteobacteria\" #> sp46 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Gammaproteobacteria\" #> sp47 \"k__Bacteria\" \"p__Proteobacteria\"  \"c__Gammaproteobacteria\" #> sp48 \"k__Bacteria\" \"p__Verrucomicrobia\" \"c__Verrucomicrobiae\"    #>      Order                   Family                     #> sp1  \"__\"                    \"__\"                       #> sp2  \"o__Actinomycetales\"    \"f__Actinomycetaceae\"      #> sp3  \"o__Actinomycetales\"    \"f__Micrococcaceae\"        #> sp4  \"o__Bifidobacteriales\"  \"f__Bifidobacteriaceae\"    #> sp5  \"o__Coriobacteriales\"   \"f__Coriobacteriaceae\"     #> sp6  \"o__Bacteroidales\"      \"f__Bacteroidaceae\"        #> sp7  \"o__Bacteroidales\"      \"f__Porphyromonadaceae\"    #> sp8  \"o__Bacteroidales\"      \"f__Prevotellaceae\"        #> sp9  \"o__Bacteroidales\"      \"f__Rikenellaceae\"         #> sp10 \"o__Bacillales\"         \"f__Staphylococcaceae\"     #> sp11 \"o__Lactobacillales\"    \"f__Enterococcaceae\"       #> sp12 \"o__Lactobacillales\"    \"f__Lactobacillaceae\"      #> sp13 \"o__Lactobacillales\"    \"f__Streptococcaceae\"      #> sp14 \"o__Turicibacterales\"   \"f__Turicibacteraceae\"     #> sp15 \"o__Clostridiales\"      \"__\"                       #> sp16 \"o__Clostridiales\"      \"f__\"                      #> sp17 \"o__Clostridiales\"      \"f__Clostridiaceae\"        #> sp18 \"o__Clostridiales\"      \"f__Clostridiaceae\"        #> sp19 \"o__Clostridiales\"      \"f__Clostridiaceae\"        #> sp20 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp21 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp22 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp23 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp24 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp25 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp26 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp27 \"o__Clostridiales\"      \"f__Lachnospiraceae\"       #> sp28 \"o__Clostridiales\"      \"f__Peptostreptococcaceae\" #> sp29 \"o__Clostridiales\"      \"f__Ruminococcaceae\"       #> sp30 \"o__Clostridiales\"      \"f__Ruminococcaceae\"       #> sp31 \"o__Clostridiales\"      \"f__Ruminococcaceae\"       #> sp32 \"o__Clostridiales\"      \"f__Ruminococcaceae\"       #> sp33 \"o__Clostridiales\"      \"f__Ruminococcaceae\"       #> sp34 \"o__Clostridiales\"      \"f__Veillonellaceae\"       #> sp35 \"o__Clostridiales\"      \"f__Veillonellaceae\"       #> sp36 \"o__Clostridiales\"      \"f__Veillonellaceae\"       #> sp37 \"o__Erysipelotrichales\" \"f__Erysipelotrichaceae\"   #> sp38 \"o__Erysipelotrichales\" \"f__Erysipelotrichaceae\"   #> sp39 \"o__Erysipelotrichales\" \"f__Erysipelotrichaceae\"   #> sp40 \"o__Fusobacteriales\"    \"f__Fusobacteriaceae\"      #> sp41 \"o__Burkholderiales\"    \"f__Alcaligenaceae\"        #> sp42 \"o__Desulfovibrionales\" \"f__Desulfovibrionaceae\"   #> sp43 \"o__Enterobacteriales\"  \"f__Enterobacteriaceae\"    #> sp44 \"o__Enterobacteriales\"  \"f__Enterobacteriaceae\"    #> sp45 \"o__Pasteurellales\"     \"f__Pasteurellaceae\"       #> sp46 \"o__Pseudomonadales\"    \"f__Moraxellaceae\"         #> sp47 \"o__Pseudomonadales\"    \"f__Pseudomonadaceae\"      #> sp48 \"o__Verrucomicrobiales\" \"f__Verrucomicrobiaceae\"   #>      Genus                      #> sp1  \"__\"                       #> sp2  \"g__Actinomyces\"           #> sp3  \"g__Rothia\"                #> sp4  \"g__Bifidobacterium\"       #> sp5  \"g__Collinsella\"           #> sp6  \"g__Bacteroides\"           #> sp7  \"g__Parabacteroides\"       #> sp8  \"g__Prevotella\"            #> sp9  \"g__\"                      #> sp10 \"g__Staphylococcus\"        #> sp11 \"g__Enterococcus\"          #> sp12 \"g__Lactobacillus\"         #> sp13 \"g__Streptococcus\"         #> sp14 \"g__Turicibacter\"          #> sp15 \"__\"                       #> sp16 \"g__\"                      #> sp17 \"__\"                       #> sp18 \"g__\"                      #> sp19 \"g__Clostridium\"           #> sp20 \"__\"                       #> sp21 \"g__\"                      #> sp22 \"g__Blautia\"               #> sp23 \"g__Coprococcus\"           #> sp24 \"g__Dorea\"                 #> sp25 \"g__Lachnospira\"           #> sp26 \"g__Roseburia\"             #> sp27 \"g__[Ruminococcus]\"        #> sp28 \"g__\"                      #> sp29 \"__\"                       #> sp30 \"g__\"                      #> sp31 \"g__Faecalibacterium\"      #> sp32 \"g__Oscillospira\"          #> sp33 \"g__Ruminococcus\"          #> sp34 \"g__Dialister\"             #> sp35 \"g__Phascolarctobacterium\" #> sp36 \"g__Veillonella\"           #> sp37 \"g__\"                      #> sp38 \"g__Coprobacillus\"         #> sp39 \"g__[Eubacterium]\"         #> sp40 \"g__Fusobacterium\"         #> sp41 \"g__Sutterella\"            #> sp42 \"g__Bilophila\"             #> sp43 \"__\"                       #> sp44 \"g__\"                      #> sp45 \"g__Haemophilus\"           #> sp46 \"g__Acinetobacter\"         #> sp47 \"g__Pseudomonas\"           #> sp48 \"g__Akkermansia\"           #>"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_rarefy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefy data to a specified sampling depth — mStat_rarefy_data","title":"Rarefy data to a specified sampling depth — mStat_rarefy_data","text":"function takes input object containing OTU table optionally specified rarefaction depth. depth specified, smallest column sum chosen depth. rarefies data specified depth returns object rarefied OTU table.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_rarefy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefy data to a specified sampling depth — mStat_rarefy_data","text":"","code":"mStat_rarefy_data(data.obj, depth = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_rarefy_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefy data to a specified sampling depth — mStat_rarefy_data","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. depth Depth rarefy; provided, defaults smallest column sum.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_rarefy_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rarefy data to a specified sampling depth — mStat_rarefy_data","text":"input object rarefied OTU table added.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_rarefy_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefy data to a specified sampling depth — mStat_rarefy_data","text":"","code":"if (FALSE) { # Load required libraries and data library(vegan) data(peerj32.obj) # Perform aggregation to create feature.agg.list with Phylum and Family peerj32.obj <- mStat_aggregate_by_taxonomy(peerj32.obj, c(\"Phylum\", \"Family\")) # Perform rarefication, remove all-zero rows and update feature.agg.list rarefy_peerj32.obj <- mStat_rarefy_data(data.obj = peerj32.obj) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"function removes specific features data object MicrobiomeStat package. can handle different feature levels adjust accordingly. 'original' specified feature level, function remove features based original row names 'feature.tab' 'feature.ann'. cases, function filter based specified feature level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"","code":"mStat_remove_feature(data.obj, featureIDs, feature.level = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. featureIDs character vector feature IDs removed. function issue warning numeric IDs provided. feature.level optional character string specifies feature level remove features . can 'original' removing based original row names feature level corresponds column 'feature.ann'. level specified multiple levels contain provided feature IDs, function stop ask specific level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"list modified version input data object. includes subsetted metadata, feature table, feature names, full feature name list, abundance list, specified features removed. 'original' specified feature level, returned object also adjusted 'feature.tab' 'feature.ann'.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"function first checks specified feature level 'original'. , removes specified features 'feature.tab' 'feature.ann' based original row names. feature level specified 'original', removes specified features based level. removal, recalculates 'feature.agg.list' exists data object.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"Jun Chen, Chen Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_remove_feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Specific Features from a MicrobiomeStat Data Object — mStat_remove_feature","text":"","code":"if (FALSE) { # Load the necessary libraries  data(peerj32.obj)  # Use the remove_feature function # Here we take the first 3 features as an example featureIDs <- rownames(peerj32.obj$feature.tab)[1:3] peerj32.obj <- mStat_remove_feature(peerj32.obj, featureIDs, feature.level = \"original\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","title":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","text":"function part MicrobiomeStat package. subsets multi-omics data object specified set sample IDs. checks presence various data components data object subsets exist.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","text":"","code":"mStat_subset_data(data.obj, samIDs = NULL, condition = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. table (`feature.tab`), feature names, full feature name list, feature aggregation list (`feature.agg.list`). samIDs vector sample IDs subset . can logical vector, numeric vector, character vector sample IDs. condition logical expression string describing rows keep. allows subsetting samples based metadata, similarly dplyr::filter. one 'samIDs' 'condition' provided.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","text":"list modified version input data object. includes subsetted metadata, feature table, feature names, full feature name list, feature aggregation list.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","text":"function first checks samIDs logical numeric, , converts character vector sample IDs. subsets metadata sample IDs. feature table exists, subsets feature table feature names sample IDs. full feature name list exists, subsets full feature name list sample IDs. feature aggregation list exists, subsets feature aggregation table list sample IDs. function returns subsetted data object.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Data Object by Sample IDs in MicrobiomeStat — mStat_subset_data","text":"","code":"if (FALSE) { # Load the required libraries library(MicrobiomeStat)  # Prepare data for the function data(peerj32.obj) # Subset data object by sample IDs subset.ids <- rownames(peerj32.obj$meta.dat)[1:10] # for example subset_peerj32.obj <- mStat_subset_data(data.obj = peerj32.obj, samIDs = subset.ids)  # Subset data object by condition condition <- \"time == '1'\" # for example subset_peerj32.obj2 <- mStat_subset_data(data.obj = peerj32.obj, condition = condition) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Distance Matrix — mStat_subset_dist","title":"Subset Distance Matrix — mStat_subset_dist","text":"function subsets list distance matrices specified set sample IDs.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Distance Matrix — mStat_subset_dist","text":"","code":"mStat_subset_dist(dist.obj, samIDs)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Distance Matrix — mStat_subset_dist","text":"dist.obj Distance matrix samples, usually calculated using mStat_calculate_beta_diversity function. NULL, beta diversity automatically computed data.obj using mStat_calculate_beta_diversity. samIDs vector sample IDs subset . can logical vector, numeric vector, character vector sample IDs.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Distance Matrix — mStat_subset_dist","text":"list subsetted distance matrices.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Distance Matrix — mStat_subset_dist","text":"function first checks samIDs logical numeric, , converts character vector sample IDs. , subsets distance matrix dist.obj sample IDs. matrix `NA` `NULL`, remains unchanged.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_subset_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Distance Matrix — mStat_subset_dist","text":"","code":"if (FALSE) { # Load required libraries library(vegan) data(peerj32.obj)  # Calculate beta diversity dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = c('BC', 'Jaccard'))  # Select sample IDs sample_ids <- sample(colnames(peerj32.obj$feature.tab), 10)  # Subset distance object by sample IDs subsetted_dist.obj <- mStat_subset_dist(dist.obj, sample_ids) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_summarize_data_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","title":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","text":"function takes MicrobiomeStat data object provides comprehensive summary key components, including feature abundance matrix (feature.tab), sample metadata (meta.dat), feature annotations (feature.ann). also checks optional components like time variable phylogenetic tree.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_summarize_data_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","text":"","code":"mStat_summarize_data_obj(   data.obj,   time.var = NULL,   group.var = NULL,   palette = NULL )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_summarize_data_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. time.var column name meta.dat representing time variable. Optional. group.var column name meta.dat representing grouping variable. Optional. palette vector colors grouping histogram. Optional. Default preset 10 color palette.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_summarize_data_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","text":"tibble containing detailed summaries : feature.tab: Number features, number samples, matrix sparsity, singleton features. meta.dat: Number samples, number metadata fields, missing data, sample distribution time (time.var provided). feature.ann: Number features, number annotation fields, proportion NA annotation. tree: Whether phylogenetic tree exists.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_summarize_data_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","text":"summary aims give overview input microbiome data object conducting statistical analysis, allowing users better understand basic properties data. function checks key component MicrobiomeStat object exists, provides detailed summary present. feature.tab, summarizes number features, samples, sparsity, singleton features. meta.dat, summarizes sample size, metadata fields, missing values, temporal distribution (time variable given). feature.ann, summarizes number features, annotations, missing values per annotation. also checks phylogenetic tree. time variable provided, temporal distribution samples visualized using ggplot2 histograms. group variable also provided, histograms grouped grouping variable colored based palette. function first checks component MicrobiomeStat data object null. component null, summarized added output list. feature.tab, computes sparsity singleton features. meta.dat, computes number samples metadata fields, distribution samples time variable provided. inclusion time variable allows user gain insights samples distributed time. feature.ann, computes number features, annotations, proportion NA values annotation. also checks phylogenetic tree exists data object.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_summarize_data_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a MicrobiomeStat Data Object — mStat_summarize_data_obj","text":"","code":"if (FALSE) {   # Assuming 'data.obj' is your MicrobiomeStat data object   # Summary with time variable   # summary_list <- mStat_summarize_data_obj(data.obj, time.var = \"time\")    # Summary without time variable   # summary_list <- mStat_summarize_data_obj(data.obj)    # If you have a microbiome data available as a MicrobiomeStat data object   # you can dplyr::summarize it using:   # library(MicrobiomeStat)   # data(data.obj)   # Summary with time variable   # summary_list <- mStat_summarize_data_obj(data.obj, time.var = \"time\")    # Summary without time variable   # summary_list <- mStat_summarize_data_obj(data.obj)   data(subset_T2D.obj)   summary <- mStat_summarize_data_obj(subset_T2D.obj, \"visit_number\", \"subject_race\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Metadata in a MicrobiomeStat Data Object — mStat_update_meta_data","title":"Update Metadata in a MicrobiomeStat Data Object — mStat_update_meta_data","text":"function updates metadata MicrobiomeStat data object. either reads metadata file (CSV tab-delimited) directly uses input dataframe.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Metadata in a MicrobiomeStat Data Object — mStat_update_meta_data","text":"","code":"mStat_update_meta_data(   data.obj,   map.file,   meta.sep = \"\\t\",   quote = \"\\\"\",   comment = \"\",   ... )"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Metadata in a MicrobiomeStat Data Object — mStat_update_meta_data","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. map.file character string dataframe. path metadata file (CSV TSV) dataframe containing metadata. meta.sep character string. field separator character metadata file. Default tab (\"\\t\"). quote character string. set quoting characters metadata file. Default double quote ('\"'). comment character string. comment character metadata file. Lines beginning character ignored. ... arguments passed read.csv read.table function.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_meta_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Metadata in a MicrobiomeStat Data Object — mStat_update_meta_data","text":"list. updated MicrobiomeStat data object includes new meta.dat.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_meta_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Metadata in a MicrobiomeStat Data Object — mStat_update_meta_data","text":"","code":"if (FALSE) {   # Load required libraries   library(vegan)   data(peerj32.obj)    # Update metadata using a CSV file   # peerj32.obj <- mStat_update_meta_data(peerj32.obj, \"metadata.csv\")    # Update metadata using a dataframe   metadata <- data.frame(Treatment = sample(c(\"Control\", \"Treatment\"),                          length(colnames(peerj32.obj$feature.tab)), replace = TRUE))   rownames(metadata) <- rownames(peerj32.obj$meta.dat)   peerj32.obj <- mStat_update_meta_data(peerj32.obj, metadata) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_sample_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Sample Names in MicrobiomeStat Data Object — mStat_update_sample_name","title":"Update Sample Names in MicrobiomeStat Data Object — mStat_update_sample_name","text":"function part MicrobiomeStat package. updates sample names given data object. data object contain three components: metadata table (`meta.dat`), feature aggregation list (`feature.agg.list`), feature table (`feature.tab`).","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_sample_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Sample Names in MicrobiomeStat Data Object — mStat_update_sample_name","text":"","code":"mStat_update_sample_name(data.obj, new.name)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_sample_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Sample Names in MicrobiomeStat Data Object — mStat_update_sample_name","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. `meta.dat`, `feature.agg.list`, `feature.tab` components. new.name character vector containing new sample names. length new.name match number rows `meta.dat`, duplicates.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_sample_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Sample Names in MicrobiomeStat Data Object — mStat_update_sample_name","text":"data object updated sample names. object similar input object, sample names `meta.dat`, `feature.agg.list`, `feature.tab` updated `new.name`.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_update_sample_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Sample Names in MicrobiomeStat Data Object — mStat_update_sample_name","text":"","code":"if (FALSE) { # Load the required libraries library(MicrobiomeStat)  data(peerj32.obj) # Update sample names new.names <- paste0(\"new-\", colnames(peerj32.obj$feature.tab)) updated_peerj32.obj <- mStat_update_sample_name(data.obj = peerj32.obj, new.name = new.names) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_validate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","title":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","text":"function part MicrobiomeStat package. validates data object, checks meets certain rules, adjusts necessary.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_validate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","text":"","code":"mStat_validate_data(data.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_validate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_validate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","text":"list. validated possibly adjusted data object.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_validate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","text":"function checks 'meta.dat' data frame converts one . function checks two rules: whether row names 'feature.tab' match row names 'feature.ann', whether column names 'feature.tab' match row names 'meta.dat'. either checks fail, function adjusts relevant parts data object meet rules.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/mStat_validate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate and Adjust a MicrobiomeStat Data Object — mStat_validate_data","text":"","code":"if (FALSE) { # Assume 'data.obj' is your data object data(peerj32.obj) validated_data <- mStat_validate_data(peerj32.obj) }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/peerj32.obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","title":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","text":"peerj32.obj dataset contains high-throughput profiling data 389 human blood serum lipids 130 intestinal genus-level bacteria 44 samples (22 subjects 2 time points; probiotic/placebo intervention). data set designed investigate associations intestinal bacteria host lipid metabolism.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/peerj32.obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","text":"","code":"data(peerj32.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/peerj32.obj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","text":"MicrobiomeStat Data Object containing following data matrices described detail Lahti et al. (2013):","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/peerj32.obj.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","text":"Data source: http://dx.doi.org/10.7717/peerj.32","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/peerj32.obj.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","text":"Lahti et al. (2013) PeerJ 1:e32 http://dx.doi.org/10.7717/peerj.32","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/peerj32.obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probiotics Intervention Data from the PeerJ32 Study — peerj32.obj","text":"Leo Lahti <microbiome-admin@googlegroups.com>","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"function removes specific features data object MicrobiomeStat package. can handle different feature levels adjust accordingly. 'original' specified feature level, function remove features based original row names 'feature.tab' 'feature.ann'. cases, function filter based specified feature level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"","code":"remove_feature(data.obj, featureIDs, feature.level = NULL)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"data.obj list object format specific MicrobiomeStat, can include components feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, feature.agg.list (list). data.obj can converted formats using several functions MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', 'mStat_import_biom_as_data_obj'. Alternatively, users can construct data.obj. Note components data.obj may required functions MicrobiomeStat package. featureIDs character vector feature IDs removed. function issue warning numeric IDs provided. feature.level optional character string specifies feature level remove features . can 'original' removing based original row names feature level corresponds column 'feature.ann'. level specified multiple levels contain provided feature IDs, function stop ask specific level.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"list modified version input data object. includes subsetted metadata, feature table, feature names, full feature name list, abundance list, specified features removed. 'original' specified feature level, returned object also adjusted 'feature.tab' 'feature.ann'.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"function first checks specified feature level 'original'. , removes specified features 'feature.tab' 'feature.ann' based original row names. feature level specified 'original', removes specified features based level. removal, recalculates 'feature.agg.list' exists data object.","code":""},{"path":[]},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"Jun Chen, Chen Yang","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/remove_feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Specific Features from a MicrobiomeStat Data Object — remove_feature","text":"","code":"if (FALSE) { # Load the necessary libraries  data(peerj32.obj)  # Use the remove_feature function # Here we take the first 3 features as an example featureIDs <- rownames(peerj32.obj$feature.tab)[1:3] peerj32.obj <- remove_feature(peerj32.obj, featureIDs, feature.level = \"original\") }"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/smokers.html","id":null,"dir":"Reference","previous_headings":"","what":"Smokers Microbiome Data from the Human Upper Respiratory Tract — smokers","title":"Smokers Microbiome Data from the Human Upper Respiratory Tract — smokers","text":"smokers dataset contains microbiome data left right throat samples 290 subjects, along taxonomy metadata tables.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/smokers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Smokers Microbiome Data from the Human Upper Respiratory Tract — smokers","text":"list containing: otu OTU table, 2156 taxa 290 samples tax Taxonomy table, 2156 taxa 7 taxonomic ranks meta Metadata table, 290 samples 53 variables genus 304 genera 290 samples family 113 families 290 samples","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/smokers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Smokers Microbiome Data from the Human Upper Respiratory Tract — smokers","text":"Charlson ES, Chen J, Custers-Allen R, Bittinger K, Li H, et al. (2010)   Disordered Microbial Communities Upper Respiratory   Tract Cigarette Smokers. PLoS ONE 5(12): e15216. https://qiita.ucsd.edu/study/description/524","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/smokers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Smokers Microbiome Data from the Human Upper Respiratory Tract — smokers","text":"Charlson ES, et al. PLoS ONE 2010","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/subset_T2D.obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset T2D Microbiome Data from the HMP2 Study — subset_T2D.obj","title":"Subset T2D Microbiome Data from the HMP2 Study — subset_T2D.obj","text":"subset_T2D.obj dataset contains 16S rRNA data 79 patients type 2 diabetes (T2D) multiple visits, gathered part HMP2 study. dataset includes phyloseq object 12,062 taxa 2,208 samples.","code":""},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/subset_T2D.obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset T2D Microbiome Data from the HMP2 Study — subset_T2D.obj","text":"","code":"data(subset_T2D.obj)"},{"path":"https://cafferychen777.github.io/MicrobiomeStat/reference/subset_T2D.obj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subset T2D Microbiome Data from the HMP2 Study — subset_T2D.obj","text":"MicrobiomeStat Data Object following components:","code":""}]
